(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     30020,        719]
NotebookOptionsPosition[     27162,        672]
NotebookOutlinePosition[     27556,        688]
CellTagsIndexPosition[     27513,        685]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Plotting complex orbitals from cube file data", "Section",
 CellChangeTimes->{{3.840290740541206*^9, 
  3.8402907479990807`*^9}},ExpressionUUID->"591a96e9-6889-463b-a964-\
d4ed9ea63afc"],

Cell[CellGroupData[{

Cell["Copyright, License, Relevant Literature, Notes", "Subsubsection",
 CellChangeTimes->{{3.914773101401758*^9, 3.914773112368757*^9}, {
  3.917627724064705*^9, 
  3.917627729002224*^9}},ExpressionUUID->"1cfd3fc5-bc47-48e9-a604-\
32577550b3bf"],

Cell[TextData[{
 "\[Copyright] 2021, 2024 Jochen Autschbach\n\nLiterature: \n\n[1] Rulin \
Feng, Xiaojuan Yu, Jochen Autschbach, ",
 StyleBox["Spin-orbit Natural Transition Orbitals and Spin-forbidden \
Transitions",
  FontSlant->"Italic"],
 ", J. Chem. Theor. Comput., (2021), 12, 7531. \
https://doi.org/10.1021/acs.jctc.1c00776 \n\nSee file LICENSE in \
https://github.com/jautschbach/mathematica-notebooks for license information \
and disclaimers."
}], "Text",
 CellChangeTimes->{{3.874491401677493*^9, 3.874491484594095*^9}, {
  3.874491975049707*^9, 3.874491984906625*^9}, {3.914773121878868*^9, 
  3.914773123538113*^9}, {3.9147731617833443`*^9, 3.91477317812821*^9}, {
  3.91553207581364*^9, 3.915532093981132*^9}, {3.915532154622489*^9, 
  3.91553219214513*^9}, {3.915536442358869*^9, 
  3.915536442877796*^9}},ExpressionUUID->"f9287a52-28eb-43bc-adb4-\
e1220728bccf"]
}, Closed]],

Cell[CellGroupData[{

Cell["Description", "Subsubsection",
 CellChangeTimes->{{3.915532068707152*^9, 
  3.915532070737084*^9}},ExpressionUUID->"c32274a1-e573-4253-8e9f-\
f21b7678a822"],

Cell[TextData[{
 "Given two cube file, one with the real part, one with the imaginary part, \
of a complex molecular orbital, this notebook will plot an isosurface of the \
absolute value of the orbital and color the surface with the complex phase. \
The notebook was originally used to generate the visualization in the article \
[1].\n\nUpdate 2024/01: Rendering the interpolation function from the cube \
data would only work in the original version of this code when the cube file \
had the same number of grid points in x, y, and z directions. This has been \
corrected.\n\nUpdate 2024/02: The custom cube importer from the interactive \
non-complex version of this notebook is now also used in here to avoid  the \
bug introduced after release 13.0 that causes the \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote]InferBondTypes\[CloseCurlyDoubleQuote]\[Rule]False\
\[CloseCurlyDoubleQuote] import option to be ignored.\n\nIf you use this \
notebook, or code based on it, for your own research, please cite reference \
[1] provided in the \[OpenCurlyDoubleQuote]Copyright, License, relevant \
Literature\[CloseCurlyDoubleQuote] section and provide the URL from where you \
obtained this notebook.\n\nNote: The idea for the ",
 StyleBox["customImporter", "Code"],
 " function originally came from Oliver Jandette at Wolfram Tech support when \
I reported in July 2023 (ca.) that the \[OpenCurlyDoubleQuote]InferBondTypes\
\[CloseCurlyDoubleQuote]-> False import option for XYZ and other molecule \
formats stopped working in Mathematica 13.3. I added the Triple and Aromatic \
bond substitutions to his initial version, with string replacements including \
the quotes to avoid interference with other settings in the molecule object, \
and I also had to add that hack with the ValenceFilling->None option, \
otherwise Mathematica adds hydrogens to the molecule to cap dangling \
valencies, which is something we do not want. "
}], "Text",
 CellChangeTimes->{{3.840290754199389*^9, 3.840290863751519*^9}, {
  3.840290915420718*^9, 3.840290943863029*^9}, {3.840291280809177*^9, 
  3.840291281936075*^9}, {3.840291317304593*^9, 3.840291357072824*^9}, {
  3.8522055446414757`*^9, 3.852205559593772*^9}, {3.915532085830104*^9, 
  3.915532132874722*^9}, {3.915532201621814*^9, 3.915532282973084*^9}, {
  3.915533423885158*^9, 3.915533459046907*^9}, {3.915534989260543*^9, 
  3.9155349928755302`*^9}, {3.917624652559909*^9, 3.917624772861226*^9}, {
  3.917627747581715*^9, 
  3.917627748133999*^9}},ExpressionUUID->"761e6b16-d363-4a49-b406-\
2a15b5b9a45b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.915532145732901*^9, 
  3.915532146408922*^9}},ExpressionUUID->"e1efe1a9-39c9-4f65-b08f-\
bde45d14ed8c"],

Cell[BoxData[
 RowBox[{"SetDirectory", "[", 
  RowBox[{"NotebookDirectory", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.79378790529633*^9, 3.7937879261375113`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"724f81ef-ce85-4e6f-a7c6-06c24428f6a6"],

Cell["Some default settings. Change as needed. ", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.840288895677644*^9, 
  3.840288906096818*^9}},ExpressionUUID->"299d2c9b-ca86-428d-acce-\
8407b531457c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"opa", " ", "=", " ", "0.7"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"default", " ", "opacity"}], " ", "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"spec", " ", "=", " ", "50"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"default", " ", "specularity"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"pluss", "=", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.15"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"minuss", "=", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.85"}], "]"}]}], ";"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"libertyBlue", " ", "=", " ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", 
       RowBox[{"51", "/", "255"}], ",", 
       RowBox[{"153", "/", "255"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"myOrange", "=", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1.0", ",", "0.588", ",", "0."}], "]"}]}], "  ", 
    RowBox[{"(*", 
     RowBox[{
     "Same", " ", "as", " ", "#", "FF9600", " ", "used", " ", "in", " ", 
      "adf", " ", "GUI"}], "*)"}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myGreen", " ", "=", " ", 
    RowBox[{
     RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", "\"\<Green\>\"", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"myYellow", " ", "=", " ", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<HTML\>\"", "]"}], "[", "\"\<Yellow\>\"", 
      "]"}]}], ";"}], "  ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vp", "=", 
    RowBox[{"ViewPoint", "/.", 
     RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vv", "=", 
    RowBox[{"ViewVertical", "/.", 
     RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"customImporter", "[", "path_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"textmol", ",", "goodmol"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"mol", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"path", ",", "\"\<Molecule\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"textmol", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "mol", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"goodmol", "=", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"textmol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\\\"Double\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Triple\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Aromatic\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<]\>\"", " ", "~~", " ", "EndOfString"}], " ", "->", 
             " ", "\"\<, ValenceFilling->None]\>\""}]}], "}"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "goodmol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.793798633045143*^9, 3.793798633638342*^9}, 
   3.7937990332118587`*^9, {3.793799423835637*^9, 3.793799424429448*^9}, {
   3.840288913142412*^9, 3.840288916874185*^9}, {3.840290106823765*^9, 
   3.840290124347563*^9}, {3.840290416085788*^9, 3.8402904191672153`*^9}, {
   3.917624828632372*^9, 3.917624829225875*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9"],

Cell[TextData[{
 "Define the cube file on the next line, ",
 StyleBox["without",
  FontSlant->"Italic"],
 " the file name extension\n.cube. You can also define the file name \
extension, to accommodate .cub vs .cube"
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.793799563306443*^9, 3.793799591542831*^9}, {
  3.793800247320668*^9, 
  3.793800274450728*^9}},ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-\
7e8276321f48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cubefileRe", "=", "\"\<orbital-re\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubefileIm", "=", "\"\<orbital-im\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ext", "=", "\"\<cube\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.793798928933275*^9, 3.793798946019086*^9}, {
  3.793799207250839*^9, 3.793799216643353*^9}, {3.793799804364861*^9, 
  3.793799833688342*^9}, {3.793800241144168*^9, 3.793800243885335*^9}, {
  3.793800279532403*^9, 3.793800298191827*^9}, {3.832939629724918*^9, 
  3.832939654382843*^9}, {3.832939823507077*^9, 3.832939842659163*^9}, {
  3.832945918637169*^9, 3.83294592099139*^9}, {3.832946017534276*^9, 
  3.8329460186424513`*^9}, {3.832961614402935*^9, 3.832961615687749*^9}, {
  3.832961822271624*^9, 3.832961823215724*^9}, {3.840290429073287*^9, 
  3.840290438926244*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"e8d26155-3751-4148-8776-504e91cced23"],

Cell["\<\
The next set of commands import the cube file data and visualize the molecule \
that\[CloseCurlyQuote]s defined in the cube file. Available PlotThemes are\
\[LineSeparator]HeavyAtom\[LineSeparator]BallAndStick
Spacefilling\[LineSeparator]Tubes\[LineSeparator]Wireframe
\
\>", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.793799603363226*^9, 3.793799624279587*^9}, {
  3.793800361852624*^9, 3.793800377491873*^9}, {3.793800413935698*^9, 
  3.793800438973765*^9}, {3.840289013158168*^9, 3.84028902072817*^9}, {
  3.892904168935635*^9, 
  3.892904170968055*^9}},ExpressionUUID->"37e843be-621a-410a-93f9-\
0fa96f5b3db7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cube", "=", 
   RowBox[{"cubefileRe", "<>", "\"\<.\>\"", "<>", "ext"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"cube", ",", "\"\<Cube\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mol", " ", "=", " ", 
   RowBox[{"customImporter", "[", "cube", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"volRe", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"cube", ",", "\"\<VolumetricData\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cube", "=", 
   RowBox[{"cubefileIm", "<>", "\"\<.\>\"", "<>", "ext"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"volIm", " ", "=", " ", 
    RowBox[{"Import", "[", 
     RowBox[{"cube", ",", "\"\<VolumetricData\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"molplot", " ", "=", " ", 
  RowBox[{"MoleculePlot3D", "[", 
   RowBox[{"mol", ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<Tubes\>\""}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.793787936129014*^9, 3.793787955586397*^9}, 
   3.7937882449437437`*^9, {3.7937882794552727`*^9, 3.7937882813791847`*^9}, {
   3.793797231399516*^9, 3.793797248189386*^9}, {3.793797359673271*^9, 
   3.793797372207142*^9}, {3.7937974347534847`*^9, 3.7937974409241123`*^9}, {
   3.793798894276332*^9, 3.7937990136937447`*^9}, {3.793799210256448*^9, 
   3.793799232274712*^9}, {3.7938002907958927`*^9, 3.793800294939698*^9}, {
   3.832939898504257*^9, 3.832939938000558*^9}, {3.917624915542713*^9, 
   3.91762495223491*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2"],

Cell["\<\
Check that data ranges in the Re and Im cube file are the same. Otherwise, we \
definitely have a problem with incompatible grids for the two cube files.\
\>", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.840288868762341*^9, 3.8402888852153378`*^9}, {
  3.840290156638419*^9, 
  3.840290176609421*^9}},ExpressionUUID->"a89d7ad2-c502-49d3-82e0-\
1a8cdf7ac4b7"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"volRe", "[", "\"\<DataRange\>\"", "]"}], " ", "\[NotEqual]", " ", 
    RowBox[{"volIm", "[", "\"\<DataRange\>\"", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<WARNING! Incompatible Data ranges. DO NOT CONTINUE unless you know \
exactly what you're doing\>\"", ",", "Large", ",", "Bold", ",", "Red"}], 
     "]"}], "]"}], ",", 
   RowBox[{"Print", "[", 
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Data ranges are compatible. Continuing.\>\"", ",", "Bold", ",", " ",
       "myGreen"}], "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.832940019281259*^9, 3.832940122234643*^9}, {
  3.83294093572093*^9, 3.832940950349618*^9}, {3.832941129755986*^9, 
  3.832941130391971*^9}, {3.832941173062407*^9, 3.832941258566749*^9}, {
  3.832941321864311*^9, 3.832941335616926*^9}, {3.832941392094214*^9, 
  3.832941458465683*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"2ba2820b-fd39-49be-8ed9-f10e92417047"],

Cell["\<\
Now we create the data for the absolute value and phase of the orbital, and \
grid specs\
\>", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.832943789688802*^9, 3.8329437950904503`*^9}, {
  3.832945509181851*^9, 3.8329455215754547`*^9}, {3.8402901924611588`*^9, 
  3.840290208705233*^9}},ExpressionUUID->"ccf8069d-6f0d-485a-8f22-\
c88358d029dd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"volComplex", " ", "=", " ", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"volRe", "[", 
      RowBox[{"[", 
       RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}], "]"}], "]"}], " ", "+", " ", 
    RowBox[{"I", " ", 
     RowBox[{"Normal", "[", 
      RowBox[{"volIm", "[", 
       RowBox[{"[", 
        RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}], "]"}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"volRange", " ", "=", " ", 
   RowBox[{"volRe", "[", "\"\<DataRange\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"volAbs", " ", "=", " ", 
   RowBox[{"Abs", "[", "volComplex", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"volArg", " ", "=", " ", 
    RowBox[{
     RowBox[{"Arg", "[", "volComplex", "]"}], " ", "/", " ", 
     RowBox[{"(", 
      RowBox[{"2", " ", "Pi"}], ")"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Dimensions", "[", "volAbs", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"min", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"volRange", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"max", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"volRange", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"step", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"max", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", 
        RowBox[{"min", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"max", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", 
        RowBox[{"min", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"max", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "-", 
        RowBox[{"min", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"n", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.832940154953108*^9, 3.832940206234687*^9}, {
   3.83294048701521*^9, 3.832940498542521*^9}, {3.832941500455958*^9, 
   3.832941516524824*^9}, 3.832942747539864*^9, {3.832943013236888*^9, 
   3.832943023029998*^9}, 3.832943208468114*^9, 3.8329459367499323`*^9, {
   3.840290215076096*^9, 3.840290218445939*^9}, {3.915532349291685*^9, 
   3.915532366347644*^9}, {3.915532460400592*^9, 3.915532464024015*^9}, {
   3.9155325144463043`*^9, 3.915532515343853*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"4059f013-0f35-47b2-90d2-e7d3ff9b3d52"],

Cell["\<\
next: should be the step sizes shown in the cube file, in case you want to \
cross check that\
\>", "Text",
 CellChangeTimes->{{3.832944499931115*^9, 3.832944518531228*^9}, {
  3.840289053067849*^9, 
  3.840289060246715*^9}},ExpressionUUID->"c32b1ea1-4dc3-4091-b5c0-\
6937aebe03d9"],

Cell[BoxData[
 RowBox[{"step", "/", " ", "0.529177"}]], "Input",
 CellChangeTimes->{{3.832944441275854*^9, 3.8329444550800257`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"68c918ce-63b5-4c56-8450-f01531dd422a"],

Cell[TextData[{
 "create interpolation function for the array with the phases (this step can \
be a bit slow)\nThe idea comes from\n\
https://mathematica.stackexchange.com/questions/105623/color-a-single-contour-\
from-a-listcontourplot3d-using-values-from-a-list\n(the second option from \
that posting uses ListSliceDensityPlot3D, but there seems to be no easy \
option to set the opacity of the surface, and the plot takes longer to make)\n\
Note that Mathematica 12.3 gives a warning(?) with that example\n",
 Cell[BoxData[
  TemplateBox[{
   "Function", "fpct", 
    "\"Too many parameters in \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \\\"}\\\"}]\\) to be filled \
from \\!\\(\\*RowBox[{RowBox[{\\\"Function\\\", \\\"[\\\", RowBox[{RowBox[{\\\
\"{\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"Hue\\\", \\\"[\\\", RowBox[{\\\"func\\\", \
\\\"[\\\", RowBox[{\\\"x\\\", \\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\"}], \
\\\"]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"[\\\", \\\"0.3`\\\", \\\"]\\\"}]\
\\).\"", 2, 4, 1, 19669549334942268867, "Local"},
   "MessageTemplate"]], "Message", "MSG",
  CellChangeTimes->{3.840289769698585*^9},ExpressionUUID->
  "6831283d-2e5b-4aae-966e-b36846d027db"],
 "\nwhen you execute the example from that web page, but the result looks \
exactly like the one on StackExchange. We get the same  warning below, but \
the plots definitely look OK. "
}], "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.832944523625387*^9, 3.832944545265695*^9}, {
  3.832945580689694*^9, 3.8329455907853947`*^9}, {3.832960243732936*^9, 
  3.8329602947209883`*^9}, {3.832960334984439*^9, 3.832960341994803*^9}, {
  3.8402897974210253`*^9, 3.840289875042897*^9}, {3.840289947776074*^9, 
  3.840289973458085*^9}, {3.840290007087887*^9, 3.8402900396700897`*^9}, {
  3.840290475223834*^9, 
  3.840290477339531*^9}},ExpressionUUID->"e33e0ff0-1fb7-4d30-a7ab-\
7d213f30cad4"],

Cell[BoxData[
 RowBox[{"cfunc", " ", "=", " ", 
  RowBox[{"Interpolation", "[", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"min", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "1"}], ")"}], " ", 
           RowBox[{"step", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"min", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"y", "-", "1"}], ")"}], " ", 
           RowBox[{"step", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"min", "[", 
           RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"z", "-", "1"}], ")"}], " ", 
           RowBox[{"step", "[", 
            RowBox[{"[", "3", "]"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"volArg", "[", 
          RowBox[{"[", 
           RowBox[{"z", ",", "y", ",", "x"}], "]"}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "1", ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", "1", ",", 
         RowBox[{"n", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", "2"}], "]"}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.832944591341467*^9, 3.832944598482201*^9}, {
  3.8329450586507463`*^9, 3.832945059716545*^9}, {3.832945378761032*^9, 
  3.832945391949483*^9}, {3.832961587196768*^9, 3.832961590019479*^9}, {
  3.9155325233038597`*^9, 3.915532525664336*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"a39d6e61-3523-4bf4-856d-787e2937c0d7"],

Cell[BoxData[
 RowBox[{"cfunc", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8402895037651854`*^9, 3.8402895066303997`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"af719434-148c-4339-bf91-dd95d5313b6d"],

Cell["\<\
Define the desired contour (iso-surface) values on the next line, then \
\[LineSeparator]create the isosurfaces and combine with the molecule plot. \
\>", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.7937996314286413`*^9, 3.793799687744438*^9}, {
  3.832946152055131*^9, 
  3.832946156720809*^9}},ExpressionUUID->"b4c99cf1-82ae-4e94-b367-\
3057457c2ff2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"contours", "=", "0.03"}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"combo", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ListContourPlot3D", "[", 
     RowBox[{"volAbs", ",", "\[IndentingNewLine]", 
      RowBox[{"DataRange", "->", "volRange"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Contours", "\[Rule]", 
       RowBox[{"{", "contours", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"ContourStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"Directive", "[", 
         RowBox[{
          RowBox[{"Opacity", "[", "opa", "]"}], "\[IndentingNewLine]", ",", 
          " ", 
          RowBox[{"Specularity", "[", 
           RowBox[{"White", ",", "spec"}], "]"}]}], " ", 
         "\[IndentingNewLine]", "]"}], "}"}]}], ",", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunction", "->", 
       RowBox[{"Function", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
         RowBox[{"Hue", "[", 
          RowBox[{"cfunc", "[", 
           RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ColorFunctionScaling", "->", "False"}]}], "]"}], ",", 
    "molplot", ",", "\[IndentingNewLine]", 
    RowBox[{"Lighting", "\[Rule]", "\"\<Neutral\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
    RowBox[{"BoxStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Gray"}], "]"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", "None"}], ",", 
    RowBox[{"Ticks", "\[Rule]", "None"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vv", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7937990723524637`*^9, 3.793799080098485*^9}, {
  3.7937998159920197`*^9, 3.793799816859408*^9}, {3.8329438547029676`*^9, 
  3.832943866712695*^9}, {3.840289160591155*^9, 3.8402891640074663`*^9}, {
  3.840289436959077*^9, 3.840289463005772*^9}, {3.8402895129229097`*^9, 
  3.840289516102377*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"139d330c-4226-49eb-90ee-a0f134807f33"],

Cell["\<\
Rotate unless you are happy with the display, then export. After the Export, \
white space should be removed from the plot, e.g. with an ImageMagick tool:\
\[LineSeparator]mogrify -trim <filename>\
\>", "Text",
 CellFrame->{{0, 0}, {0, 2}},
 CellFrameColor->GrayLevel[0.75],
 CellChangeTimes->{{3.79379970204949*^9, 3.793799782878089*^9}, 
   3.8329461467848673`*^9},ExpressionUUID->"9ab0f25e-7954-448a-8a9f-\
4ec44af7ecbc"],

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{
    "\"\<orbitalplot.png\>\"", ",", "combo", ",", "\"\<PNG\>\"", ",", 
     RowBox[{"ImageResolution", "\[Rule]", "300"}]}], "]"}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.793799253432899*^9, 3.793799271795611*^9}, {
  3.840290562981266*^9, 3.840290567324835*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"aeacd7ce-a4c5-4eaf-a9c8-dfa032746856"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{864, 756},
WindowMargins->{{Automatic, 49.5}, {0, Automatic}},
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"914baf3b-d5ba-4f7f-9b8e-9aa9e9f80043"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 192, 3, 68, "Section",ExpressionUUID->"591a96e9-6889-463b-a964-d4ed9ea63afc"],
Cell[CellGroupData[{
Cell[797, 29, 246, 4, 45, "Subsubsection",ExpressionUUID->"1cfd3fc5-bc47-48e9-a604-32577550b3bf"],
Cell[1046, 35, 878, 17, 196, "Text",ExpressionUUID->"f9287a52-28eb-43bc-adb4-e1220728bccf"]
}, Closed]],
Cell[CellGroupData[{
Cell[1961, 57, 162, 3, 37, "Subsubsection",ExpressionUUID->"c32274a1-e573-4253-8e9f-f21b7678a822"],
Cell[2126, 62, 2554, 37, 472, "Text",ExpressionUUID->"761e6b16-d363-4a49-b406-2a15b5b9a45b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4717, 104, 155, 3, 45, "Subsubsection",ExpressionUUID->"e1efe1a9-39c9-4f65-b08f-bde45d14ed8c"],
Cell[4875, 109, 249, 4, 29, "Input",ExpressionUUID->"724f81ef-ce85-4e6f-a7c6-06c24428f6a6"],
Cell[5127, 115, 247, 5, 45, "Text",ExpressionUUID->"299d2c9b-ca86-428d-acce-8407b531457c"],
Cell[5377, 122, 3900, 103, 422, "Input",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9"],
Cell[9280, 227, 467, 12, 68, "Text",ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-7e8276321f48"],
Cell[9750, 241, 951, 18, 71, "Input",ExpressionUUID->"e8d26155-3751-4148-8776-504e91cced23"],
Cell[10704, 261, 675, 14, 206, "Text",ExpressionUUID->"37e843be-621a-410a-93f9-0fa96f5b3db7"],
Cell[11382, 277, 1724, 41, 174, "Input",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2"],
Cell[13109, 320, 418, 9, 68, "Text",ExpressionUUID->"a89d7ad2-c502-49d3-82e0-1a8cdf7ac4b7"],
Cell[13530, 331, 1056, 23, 133, "Input",ExpressionUUID->"2ba2820b-fd39-49be-8ed9-f10e92417047"],
Cell[14589, 356, 403, 9, 45, "Text",ExpressionUUID->"ccf8069d-6f0d-485a-8f22-c88358d029dd"],
Cell[14995, 367, 3386, 97, 287, "Input",ExpressionUUID->"4059f013-0f35-47b2-90d2-e7d3ff9b3d52"],
Cell[18384, 466, 292, 7, 35, "Text",ExpressionUUID->"c32b1ea1-4dc3-4091-b5c0-6937aebe03d9"],
Cell[18679, 475, 211, 3, 29, "Input",ExpressionUUID->"68c918ce-63b5-4c56-8450-f01531dd422a"],
Cell[18893, 480, 2040, 35, 249, "Text",ExpressionUUID->"e33e0ff0-1fb7-4d30-a7ab-7d213f30cad4"],
Cell[20936, 517, 2141, 54, 133, "Input",ExpressionUUID->"a39d6e61-3523-4bf4-856d-787e2937c0d7"],
Cell[23080, 573, 240, 4, 29, "Input",ExpressionUUID->"af719434-148c-4339-bf91-dd95d5313b6d"],
Cell[23323, 579, 413, 9, 68, "Text",ExpressionUUID->"b4c99cf1-82ae-4e94-b367-3057457c2ff2"],
Cell[23739, 590, 2528, 55, 298, "Input",ExpressionUUID->"139d330c-4226-49eb-90ee-a0f134807f33"],
Cell[26270, 647, 434, 9, 91, "Text",ExpressionUUID->"9ab0f25e-7954-448a-8a9f-4ec44af7ecbc"],
Cell[26707, 658, 427, 10, 29, "Input",ExpressionUUID->"aeacd7ce-a4c5-4eaf-a9c8-dfa032746856"]
}, Open  ]]
}, Open  ]]
}
]
*)

