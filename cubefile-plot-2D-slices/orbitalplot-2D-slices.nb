(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198870,       3827]
NotebookOptionsPosition[    194055,       3732]
NotebookOutlinePosition[    194685,       3756]
CellTagsIndexPosition[    194607,       3751]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Orbital Plots in 2D Slices (Cut-Planes) from Cube Format Import\
\>", "Section",
 CellChangeTimes->{{3.897726730675234*^9, 3.897726760235175*^9}, {
  3.91416238963443*^9, 3.914162408482318*^9}, {3.914170575940013*^9, 
  3.91417059842293*^9}, {3.914773272811502*^9, 3.9147732860893097`*^9}, {
  3.9153626979562473`*^9, 3.915362699197007*^9}, {3.915362845796365*^9, 
  3.915362848798174*^9}},ExpressionUUID->"9f8841a8-8249-4f47-9d55-\
d95cc146c0e1"],

Cell[CellGroupData[{

Cell["Copyright, License, relevant Literature", "Subsubsection",
 CellChangeTimes->{{3.914773101401758*^9, 
  3.914773112368757*^9}},ExpressionUUID->"519384ab-5ac3-490a-ad9d-\
5bb2de8040a7"],

Cell[TextData[{
 "\[Copyright] 2024 Jochen Autschbach\n\nLiterature: \n\n[1] Pierpaolo \
Morgante & Jochen Autschbach, ",
 StyleBox["Molecular Orbitals",
  FontSlant->"Italic"],
 ", American Chemical Society, Washington, DC, 2023.\n\nPermission is hereby \
granted, free of charge, to any person obtaining a copy of this notebook file \
(the \[OpenCurlyDoubleQuote]Software\[CloseCurlyDoubleQuote]), to deal in the \
Software without restriction, including without limitation the rights to use, \
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of \
the Software, and to permit persons to whom the Software is furnished to do \
so, subject to the following conditions:\n\nThe above copyright notice, the \
textbook reference cited above, and this permission notice shall be included \
in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS \
PROVIDED \[OpenCurlyDoubleQuote]AS IS\[CloseCurlyDoubleQuote], WITHOUT \
WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE \
FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR \
THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}], "Text",
 CellChangeTimes->{{3.874491401677493*^9, 3.874491484594095*^9}, {
  3.874491975049707*^9, 3.874491984906625*^9}, {3.914773121878868*^9, 
  3.914773123538113*^9}, {3.9147731617833443`*^9, 
  3.91477317812821*^9}},ExpressionUUID->"014379ae-42bf-4be7-bb3c-\
9629767445a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization cells", "Subsubsection",
 CellChangeTimes->{{3.897727948030819*^9, 3.897727962379978*^9}, {
   3.914418866458927*^9, 3.914418870939124*^9}, 3.914420238925591*^9, {
   3.914773239959224*^9, 
   3.914773251233214*^9}},ExpressionUUID->"94e934e5-f4d3-4966-865f-\
84d12904cdeb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.15"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.80"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<GreenPinkTones\>\"", ",", "0.15"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<SolarColors\>\"", ",", "0.70"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vp", "=", 
    RowBox[{"ViewPoint", "/.", 
     RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vv", "=", 
   RowBox[{"ViewVertical", "/.", 
    RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"customImporter", "[", "path_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"textmol", ",", "goodmol"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"mol", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"path", ",", "\"\<Molecule\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"textmol", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "mol", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"goodmol", "=", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"textmol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\\\"Double\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Triple\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Aromatic\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<]\>\"", " ", "~~", " ", "EndOfString"}], " ", "->", 
             " ", "\"\<, ValenceFilling->None]\>\""}]}], "}"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "goodmol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Create contours (may take a while...) \>\"", ",", 
     RowBox[{"NotebookEvaluate", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"EvaluationElements", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Tags\>\"", "\[Rule]", 
          RowBox[{"{", "\"\<make-contours\>\"", "}"}]}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], "  ", 
   "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.793798633045143*^9, 3.793798633638342*^9}, 
   3.7937990332118587`*^9, {3.793799423835637*^9, 3.793799424429448*^9}, {
   3.793812876199871*^9, 3.793812900248032*^9}, {3.793976150994787*^9, 
   3.793976165907461*^9}, {3.794059191446529*^9, 3.794059194288357*^9}, {
   3.864745050559181*^9, 3.864745067185685*^9}, {3.864808832517955*^9, 
   3.864808834174582*^9}, {3.914165312024158*^9, 3.914165327972855*^9}, {
   3.914165379930373*^9, 3.91416539992756*^9}, {3.914165607973052*^9, 
   3.914165615118895*^9}, {3.914174052076466*^9, 3.914174065044384*^9}, {
   3.914187579686805*^9, 3.914187585540912*^9}, {3.9141882653084583`*^9, 
   3.914188269047246*^9}, {3.914241946626474*^9, 3.9142419570866413`*^9}, {
   3.914242521536366*^9, 3.9142425240892563`*^9}, {3.914242629807714*^9, 
   3.914242632505574*^9}, {3.9144188017020607`*^9, 3.9144188222826443`*^9}, {
   3.914774247185214*^9, 3.914774260811167*^9}, {3.91502128921075*^9, 
   3.9150212973280497`*^9}, {3.915041331769065*^9, 3.915041332488504*^9}, {
   3.915041409407631*^9, 3.915041415648554*^9}, {3.915041495819022*^9, 
   3.915041519787924*^9}, {3.9150428105189657`*^9, 3.9150428111287127`*^9}, {
   3.91536297279874*^9, 3.915363002484666*^9}, {3.91536899663515*^9, 
   3.915369001339213*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Make a list of cube files from the current directory (use \[ShiftKey]+\
\[EnterKey] to evaluate cells after placing cursor in them). \
\>", "Subsubsection",
 CellChangeTimes->{{3.793799563306443*^9, 3.793799591542831*^9}, {
   3.793800247320668*^9, 3.793800274450728*^9}, {3.793811232515476*^9, 
   3.79381124830521*^9}, {3.853931060129483*^9, 3.853931103966256*^9}, {
   3.853931466272396*^9, 3.853931472178119*^9}, {3.897727982035624*^9, 
   3.897727986653781*^9}, 3.897728605369555*^9, {3.914418885632975*^9, 
   3.914418887218624*^9}, {3.9147762392607317`*^9, 3.914776244829646*^9}, {
   3.9147762835849237`*^9, 
   3.914776304329876*^9}},ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-\
7e8276321f48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ext", " ", "=", " ", "\"\<cube\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flist", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.\>\"", "<>", "ext"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "flist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"flist", ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", "n", "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], "]"}], " "}]}], "Input",\

 CellChangeTimes->{{3.7938042412340126`*^9, 3.793804266695205*^9}, {
   3.79380956574901*^9, 3.793809567368286*^9}, {3.7939761838798842`*^9, 
   3.793976217010746*^9}, {3.864571166434132*^9, 3.864571169008116*^9}, 
   3.864708210767799*^9, 3.864808779728314*^9, {3.914171137737555*^9, 
   3.91417122723062*^9}, {3.914171264975856*^9, 3.9141713111266627`*^9}, {
   3.9141713966457453`*^9, 3.914171400580159*^9}, {3.9141714715995626`*^9, 
   3.914171484428393*^9}, {3.914171544739452*^9, 3.914171566057569*^9}, {
   3.914171668652194*^9, 3.91417166965993*^9}, 3.915020647718474*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"27727f97-7dd2-4d31-a480-915518d89fa6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["1",
       HoldForm], "\<\"c1-c2-pi-bond.cube\"\>"},
     {
      TagBox["2",
       HoldForm], "\<\"c2-h6-bond.cube\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   OutputFormsDump`HeadedColumn],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2}, {}}, Null, TableAlignments -> 
    Left]]]], "Output",
 CellChangeTimes->{3.915370422819371*^9, 3.915379300599102*^9},
 CellLabel->
  "Out[9]//TableForm=",ExpressionUUID->"3cc085d3-b204-436d-b078-83f6e607b940"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pick cubes to plot", "Subsubsection",
 CellChangeTimes->{{3.9144202164039187`*^9, 3.914420262100553*^9}, {
  3.91504211203482*^9, 
  3.9150421137058496`*^9}},ExpressionUUID->"75efccdb-433b-44b3-bce7-\
04474ffb7b28"],

Cell["\<\
Pick one or more cubes that we will work with later. These cube data will all \
be plotted in the same plane.
A list like {1} or {1,3,7} will do. An array scale = {s1,s2,s3,...} can be \
used to scale the data in the different cubes, 
in case that is needed for a good combined plot. Here, by default, we just \
set all scaling factors to one.
If you want to make a plot of different cut-planes in the same combined \
graphic, the code below would need to be modified suitably.\
\>", "Text",
 CellChangeTimes->{{3.914172446085261*^9, 3.914172461813362*^9}, {
  3.914172522188727*^9, 3.9141725363156147`*^9}, {3.914241132269258*^9, 
  3.914241158750023*^9}, {3.914418830004662*^9, 3.914418839018828*^9}, {
  3.914418914703516*^9, 3.914418929451605*^9}, {3.91441901116256*^9, 
  3.914419028218847*^9}, {3.914420204698544*^9, 3.9144202114536653`*^9}, {
  3.914420272614128*^9, 3.914420284266567*^9}, {3.915362751158574*^9, 
  3.915362842378339*^9}},ExpressionUUID->"1a733974-8874-4389-ae0e-\
5d50ad9526c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pick", "=", 
    RowBox[{"{", "2", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1.", ",", " ", 
     RowBox[{"Length", "[", "pick", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.914170991065123*^9, 3.914170992606335*^9}, {
   3.914172431451913*^9, 3.914172442326302*^9}, 3.914172543632738*^9, {
   3.9141852971053*^9, 3.914185305792345*^9}, {3.9141855367914753`*^9, 
   3.914185537779334*^9}, {3.914186209336732*^9, 3.914186217005657*^9}, {
   3.914186524975808*^9, 3.914186526413625*^9}, {3.914187011971311*^9, 
   3.9141870122930403`*^9}, {3.914189124474348*^9, 3.914189124588093*^9}, {
   3.9141891608904138`*^9, 3.914189175380157*^9}, {3.914189358218112*^9, 
   3.914189389841939*^9}, {3.914241165459306*^9, 3.914241172735518*^9}, {
   3.914241479997654*^9, 3.914241484054421*^9}, {3.914242378903613*^9, 
   3.914242385003089*^9}, {3.914242436131738*^9, 3.91424243619189*^9}, {
   3.914243320937148*^9, 3.914243333595868*^9}, {3.914244241784571*^9, 
   3.914244242482314*^9}, {3.914245175616069*^9, 3.914245175960833*^9}, {
   3.9142456825114727`*^9, 3.914245683401372*^9}, {3.914248615186262*^9, 
   3.914248619769117*^9}, {3.914248701108873*^9, 3.914248704251461*^9}, {
   3.914248741245998*^9, 3.9142487442336197`*^9}, {3.91441853794597*^9, 
   3.914418560147522*^9}, {3.914418971689688*^9, 3.9144190005511427`*^9}, 
   3.914419039349093*^9, {3.914419168828843*^9, 3.914419169458785*^9}, {
   3.914419205945063*^9, 3.914419206648527*^9}, {3.914419636678521*^9, 
   3.9144196368473673`*^9}, {3.91441966887571*^9, 3.914419669393982*^9}, 
   3.914420288550414*^9, {3.915020657770932*^9, 3.9150206586425467`*^9}, {
   3.9153666101941643`*^9, 3.915366610667747*^9}, {3.915366956368499*^9, 
   3.915366956481216*^9}, {3.915369062838112*^9, 3.9153690637882023`*^9}, {
   3.915383196540963*^9, 3.9153831966315107`*^9}, {3.915383661381021*^9, 
   3.915383661476568*^9}},
 CellLabel->
  "In[154]:=",ExpressionUUID->"7c93945d-8de1-46ed-a1a4-c61b48e539fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show the molecule (atom positions, too )", "Subsubsection",
 CellChangeTimes->{
  3.915035753861682*^9, {3.915035829555431*^9, 3.915035860186743*^9}, 
   3.915036148962057*^9, {3.915042120220427*^9, 3.9150421215296707`*^9}, {
   3.915362663826988*^9, 
   3.915362665363122*^9}},ExpressionUUID->"9c626022-0b9e-44c8-a361-\
6a98114ac4e3"],

Cell["\<\
Available PlotThemes are: HeavyAtom, BallAndStick, SpaceFilling, Tubes, \
Wireframe.

If you want to see an isosurface plot of the 3D data together with a molecule \
plot and numbered atoms, please run the notebook \
\[OpenCurlyDoubleQuote]orbitalplot-from-cube-interpolation.nb\
\[CloseCurlyDoubleQuote] from the folder \
\[OpenCurlyDoubleQuote]cubefile-interpolate-then-plot\[CloseCurlyDoubleQuote] \
on the selected cube.\
\>", "Text",
 CellChangeTimes->{
  3.9150429812139463`*^9, {3.915365962236721*^9, 3.915366058435883*^9}, {
   3.9153663700566883`*^9, 
   3.9153663747984867`*^9}},ExpressionUUID->"59599e13-d1cf-462b-bbe8-\
32509a143740"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mol", " ", "=", " ", 
   RowBox[{"customImporter", "[", 
    RowBox[{"flist", "[", 
     RowBox[{"[", 
      RowBox[{"pick", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plottheme", "=", "\"\<Wireframe\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"molplot", " ", "=", " ", 
    RowBox[{"MoleculePlot3D", "[", 
     RowBox[{"mol", ",", 
      RowBox[{"PlotTheme", "->", "plottheme"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "pick", " ", "the", " ", "first", " ", "cube", " ", "in", " ", 
    "the", " ", "list", " ", "for", " ", "plotting", " ", "the", " ", 
    "molecule"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MoleculePlot3D", "[", 
  RowBox[{"mol", ",", 
   RowBox[{"AtomLabels", "->", "\"\<AtomIndex\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.915041454225462*^9, 3.915041456158354*^9}, {
  3.9150415356240063`*^9, 3.915041536698441*^9}, {3.915042798764885*^9, 
  3.915042800118904*^9}, {3.915363230970422*^9, 3.915363251190378*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0abb2362-608b-45fe-815c-a471151abbce"],

Cell[BoxData[
 Graphics3DBox[
  {EdgeForm[None], Specularity[
    GrayLevel[1], 100], 
   GraphicsComplex3DBox[{{-0.666200289147064, 0., 0.}, {0.666200289147064, 0.,
     0.}, {-1.2382313701255818`, -0.9293670143790009, 
    0.}, {-1.2382313701255818`, 0.9293670143790009, 0.}, {
    1.2382313701255818`, -0.9293670143790009, 0.}, {1.2382313701255818`, 
    0.9293670143790009, 0.}, {0.9522158296363229, -0.46468350718950047`, 
    0.}, {0.9522158296363229, 0.46468350718950047`, 
    0.}, {-0.9522158296363229, -0.46468350718950047`, 
    0.}, {-0.9522158296363229, 0.46468350718950047`, 0.}}, {{{
       {RGBColor[0.4, 0.4, 0.4], SphereBox[1, 0.34]}, 
       Text3DBox["1", {-0.292200289147064, 0., 0.374}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.4, 0.4, 0.4], SphereBox[2, 0.34]}, 
       Text3DBox["2", {1.040200289147064, 0., 0.374}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[3, 0.24]}, 
       Text3DBox["3", {-0.9742313701255818, -0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[4, 0.24]}, 
       Text3DBox["4", {-0.9742313701255818, 0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[5, 0.24]}, 
       Text3DBox["5", {1.5022313701255818`, -0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[6, 0.24]}, 
       Text3DBox["6", {1.5022313701255818`, 0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}}, {
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 2}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{2, 7}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{7, 5}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{2, 8}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{8, 6}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 9}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{9, 3}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 10}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{10, 4}, 0.15]}}}, 
     {Opacity[0.7]}}]},
  Boxed->False,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->{0, 0, 3.38}]], "Output",
 CellChangeTimes->{3.915370431962276*^9, 3.9153793107493143`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"0edafa16-9b4f-434f-8643-5484231bb676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", " ", "@", " ", 
    RowBox[{"mol", "[", "\"\<AtomCoordinates\>\"", "]"}]}]}], ";", " ", 
  RowBox[{"TableForm", "[", 
   RowBox[{"points", ",", "  ", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.915041722499442*^9, 3.915041723039847*^9}, {
  3.915041903530758*^9, 3.915042021094922*^9}, {3.915042173334169*^9, 
  3.915042177870572*^9}, {3.915042209679873*^9, 3.915042251663*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d5124485-bfe2-49eb-b48c-48b720893e62"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ]},
     {
      TagBox["1",
       HoldForm], 
      RowBox[{"-", "0.666200289147064`"}], "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "0.666200289147064`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["4",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], "0.9293670143790009`", "0.`"},
     {
      TagBox["5",
       HoldForm], "1.2382313701255818`", 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["6",
       HoldForm], "1.2382313701255818`", "0.9293670143790009`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2, 3, 4, 5, 6}, {}}, Null, 
    TableAlignments -> Left]]]], "Output",
 CellChangeTimes->{3.915370434857449*^9, 3.915379310889744*^9},
 CellLabel->
  "Out[16]//TableForm=",ExpressionUUID->"e6ea8916-0335-4c8c-bf3c-\
48f76ff808e8"]
}, Open  ]],

Cell["\<\
We can append the list here, for example, to add a dummy atom position for a \
linear or planar molecule, to specify a plane later\
\>", "Text",
 CellChangeTimes->{{3.915042264491892*^9, 3.915042292589387*^9}, 
   3.915042631786625*^9, {3.9153660754592953`*^9, 
   3.9153660828382473`*^9}},ExpressionUUID->"c8055252-4875-42f7-b31f-\
d9e8aeecb6c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"points", ",", 
    RowBox[{
     RowBox[{"points", "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
     RowBox[{"{", 
      RowBox[{"0.", ",", " ", "0.", ",", " ", "1."}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"points", ",", "  ", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], " ", "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.915042697748472*^9, 3.915042735228066*^9}, 
   3.915042835955639*^9, {3.915292140344232*^9, 3.9152921457172956`*^9}, {
   3.915294007613091*^9, 3.915294022819935*^9}, {3.915294103375976*^9, 
   3.915294110353182*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0aa3a6fb-5d26-479b-aa05-222f6112b3f9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ]},
     {
      TagBox["1",
       HoldForm], 
      RowBox[{"-", "0.666200289147064`"}], "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "0.666200289147064`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["4",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], "0.9293670143790009`", "0.`"},
     {
      TagBox["5",
       HoldForm], "1.2382313701255818`", 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["6",
       HoldForm], "1.2382313701255818`", "0.9293670143790009`", "0.`"},
     {
      TagBox["7",
       HoldForm], "0.666200289147064`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {}}, Null, 
    TableAlignments -> Left]]]], "Output",
 CellChangeTimes->{3.915370437287168*^9, 3.91537931266263*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"899c891f-3949-47ec-8610-\
2783d6dd6c80"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set specifications for the plots", "Subsubsection",
 CellChangeTimes->{{3.91504212966811*^9, 
  3.9150421329148417`*^9}},ExpressionUUID->"e635bf7a-668d-49ba-91ee-\
1e6894635051"],

Cell[TextData[{
 StyleBox["The If you want to plot multiple cube files together, they MUST be \
for the same system, different orbitals, otherwise expect strange (wrong) \
results  !",
  FontColor->RGBColor[1, 0, 0]],
 "\n\n",
 StyleBox["Set the main plot parameters and options in the next input cell.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 "\n\n",
 StyleBox["s",
  FontSlant->"Italic"],
 " = start point for the plane\n\nplane selections can be \
\[OpenCurlyDoubleQuote]xy\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]xz\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]yz\[CloseCurlyDoubleQuote], \
and so on, with the first letter being the horizontal direction.\n\nAn \
alternative plane setting is  \[OpenCurlyDoubleQuote]3-points\
\[CloseCurlyDoubleQuote]. In thes case, the array \
\[OpenCurlyDoubleQuote]vertices\[CloseCurlyDoubleQuote] must also be given, \
with atom numbers corresponding to the content of array \
\[OpenCurlyDoubleQuote]points\[CloseCurlyDoubleQuote] listed above. The atom \
numbers are shown in the molecule plot earlier, in case you need to know what \
atoms should be used to define the plane for \[OpenCurlyDoubleQuote]3-points\
\[CloseCurlyDoubleQuote]. With \[OpenCurlyDoubleQuote]3-atoms\
\[CloseCurlyDoubleQuote], the first atom selected in array vertices will \
define the point ",
 StyleBox["s",
  FontSlant->"Italic"],
 " on the plane.\n\n",
 StyleBox["r",
  FontSlant->"Italic"],
 " and ",
 StyleBox["j",
  FontSlant->"Italic"],
 ": the value ",
 StyleBox["r",
  FontSlant->"Italic"],
 " for the lowest contour and the number ",
 StyleBox["j",
  FontSlant->"Italic"],
 " of contours.\nWe use increments by factors of 2, but that can also be \
customized (",
 StyleBox["base",
  FontSlant->"Italic"],
 " value)\n\nopacity value for the plot plane: You can set it nonzero (0.05, \
for example) to see the plane.\nThe resulting graphs can be rotated because \
they are 3D, if that works better for export. The default setting\nis a \
viewpoint along the plot plane normal"
}], "Text",
 CellChangeTimes->{{3.914172555193645*^9, 3.914172589880731*^9}, {
   3.91424205797431*^9, 3.9142421016015387`*^9}, {3.914243000102604*^9, 
   3.914243000618596*^9}, {3.914243037452736*^9, 3.914243039900666*^9}, 
   3.914418707227929*^9, {3.914419048977206*^9, 3.914419070221856*^9}, {
   3.914420393018765*^9, 3.9144204440650377`*^9}, {3.914773310467698*^9, 
   3.914773318862602*^9}, {3.915027332014656*^9, 3.915027358947116*^9}, {
   3.9150275619823437`*^9, 3.91502757380987*^9}, {3.915027848149273*^9, 
   3.915027863454949*^9}, {3.915041060938849*^9, 3.915041082472279*^9}, {
   3.915042870678677*^9, 3.9150429717916927`*^9}, {3.915303371613111*^9, 
   3.915303493582808*^9}, {3.915366112485409*^9, 3.915366119305285*^9}, {
   3.915366157267502*^9, 
   3.915366175318657*^9}},ExpressionUUID->"4e4e8640-33d1-4448-8d54-\
e01fb24bb6cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", "0.03"}], ",", 
      RowBox[{"j", "=", "6"}], ",", " ", 
      RowBox[{"base", " ", "=", " ", "2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"contours", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"r", "  ", 
          RowBox[{"base", "^", "n"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "j"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"2", "^", "n"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "j"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"opacity", "=", "0"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"plane", " ", "origin", " ", "for", " ", "xy"}], ",", " ", "xz", 
    ",", " ", 
    RowBox[{"...", " ", "option"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plane", " ", "=", " ", "\"\<3-points\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertices", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "7"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.914241295923602*^9, {3.914241596962008*^9, 3.914241625576193*^9}, {
   3.914241867985268*^9, 3.914241885772975*^9}, {3.914242122446246*^9, 
   3.914242123635881*^9}, 3.914418613958151*^9, {3.914419083150938*^9, 
   3.9144190898049726`*^9}, 3.915020670610561*^9, {3.915020898252022*^9, 
   3.915020899053855*^9}, {3.915024916608809*^9, 3.915024923882312*^9}, {
   3.915025106785612*^9, 3.915025113161029*^9}, {3.915027279549786*^9, 
   3.915027291032295*^9}, {3.915027366090732*^9, 3.9150273944719276`*^9}, {
   3.9150274705933*^9, 3.915027471195737*^9}, {3.915027548632556*^9, 
   3.915027553873263*^9}, {3.91502795362831*^9, 3.9150279542242327`*^9}, {
   3.9150355410545607`*^9, 3.915035559305345*^9}, {3.915036297146056*^9, 
   3.915036350070981*^9}, {3.915042775934312*^9, 3.915042777708313*^9}, {
   3.915042851943712*^9, 3.915042852543467*^9}, {3.915042994771986*^9, 
   3.915043043834421*^9}, {3.915282270614493*^9, 3.915282272800004*^9}, {
   3.915289999339601*^9, 3.915290020126258*^9}, {3.9152909725394487`*^9, 
   3.915290977492269*^9}, 3.915292022289921*^9, {3.9152922758329697`*^9, 
   3.9152922830310373`*^9}, {3.915292612265418*^9, 3.915292612746057*^9}, {
   3.915297246575378*^9, 3.915297247178918*^9}, {3.915297789679446*^9, 
   3.9152977897501287`*^9}, {3.9152978697008333`*^9, 3.91529787039277*^9}, {
   3.9152985837048492`*^9, 3.915298599996543*^9}, {3.9153669777879543`*^9, 
   3.915366980387546*^9}, {3.9153670447522583`*^9, 3.9153670457848063`*^9}, {
   3.915367090247465*^9, 3.9153670907020397`*^9}, {3.9153677136334467`*^9, 
   3.915367718399036*^9}, {3.915368787279161*^9, 3.915368790882012*^9}, {
   3.915369072130516*^9, 3.9153690750311737`*^9}, {3.915369391343936*^9, 
   3.9153693943377*^9}, {3.915369608567012*^9, 3.915369608753796*^9}, {
   3.9153699960357313`*^9, 3.9153699978393373`*^9}, {3.9153700692513943`*^9, 
   3.9153700832601767`*^9}, {3.915370179871509*^9, 3.915370184493146*^9}, {
   3.9153713886934967`*^9, 3.915371389675909*^9}, {3.915371475873643*^9, 
   3.9153714763283978`*^9}, {3.915379391857399*^9, 3.915379392846087*^9}, {
   3.9153798044422483`*^9, 3.915379805051922*^9}, {3.915379835768285*^9, 
   3.915379836425167*^9}, {3.915383182606865*^9, 3.915383187442541*^9}, {
   3.915383238782144*^9, 3.915383239439054*^9}, {3.915383287685401*^9, 
   3.915383290270053*^9}, {3.915383667564872*^9, 3.91538367340162*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"b27ef285-598a-4623-a18a-d795fbaa85fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Code to generate the plots (no need to open this, click the button in the \
next section)\
\>", "Subsubsection",
 CellChangeTimes->{{3.914420186630795*^9, 3.914420189273237*^9}, {
  3.914774193935643*^9, 3.914774197692464*^9}, {3.914774291571957*^9, 
  3.91477429991182*^9}, {3.914775838068705*^9, 3.914775847489383*^9}, {
  3.9147763429013586`*^9, 
  3.914776347524042*^9}},ExpressionUUID->"b226dcc2-666f-4203-ac2a-\
2c8e7321c55a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plane", "==", "\"\<xy\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<xz\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<yz\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<yx\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<zx\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<zy\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", " ", "\"\<3-points\>\""}], ",", " ", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", " ", "n2", ",", " ", "vecs"}], "}"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", " ", "=", " ", 
          RowBox[{
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "  ", "-", " ", 
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], " ", ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n2", " ", "=", " ", 
          RowBox[{
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "  ", "-", " ", 
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"vecs", " ", "=", " ", 
          RowBox[{"Orthogonalize", "[", 
           RowBox[{"{", 
            RowBox[{"n1", ",", " ", "n2"}], "}"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"vecs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"n1", ",", " ", "n2"}], "}"}]}], ";"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"v1", " ", "=", " ", 
          RowBox[{"vecs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
         
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"vecs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<n1, n2, vecs: \>\"", ",", "n1", ",", " ", "\"\<, \>\"", ",", 
             " ", "n2", ",", " ", "\"\<, \>\"", ",", " ", "vecs"}], "]"}], 
           ";"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"s", " ", "=", " ", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ",
             "3"}], ",", " ", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<ERROR: vertices array must have 3 values\>\"", "]"}], ";",
               " ", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], " ", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"vertices", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "<", " ", "1"}], "  ", "||",
               " ", 
              RowBox[{
               RowBox[{"vertices", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", ">", " ", 
               RowBox[{"Length", "[", "points", "]"}]}]}], ",", " ", 
             RowBox[{"Block", "[", 
              RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{
                RowBox[{
                "Print", "[", 
                 "\"\<ERROR: one or more vertices entries out of range\>\"", 
                 "]"}], ";", " ", 
                RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], " ", "]"}], ",", 
           " ", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", "True", ",", 
      " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<ERROR in plane selection\>\"", "]"}], ";",
          " ", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"v3", " ", "=", " ", 
     RowBox[{"Cross", "[", 
      RowBox[{"v1", ",", " ", "v2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"plane", " ", "normal"}], ",", "  ", 
      RowBox[{
      "will", " ", "also", " ", "be", " ", "the", " ", "default", " ", "view",
        " ", "direction"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"view", " ", "=", " ", 
     RowBox[{"2", " ", "v3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vert", " ", "=", " ", "v2"}], ";", "\n", "\n", 
    RowBox[{"SetSharedVariable", "[", "field", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"field", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cube", ",", " ", "vol", ",", " ", "volRange", ",", "data", ",", "n", 
        ",", " ", "min", ",", " ", "max", ",", " ", "min1", ",", " ", "max1", 
        ",", " ", "min2", ",", " ", "max2", ",", " ", "step", ",", " ", "f", 
        ",", "  ", "plotSlice", ",", " ", "a", ",", " ", "b"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParallelDo", "[", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"cube", "=", 
           RowBox[{"flist", "[", 
            RowBox[{"[", 
             RowBox[{"pick", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "pick", " ", "a", " ", "cube", " ", "in", " ", "the", " ", "list", 
            " ", "for", " ", "plotting", " ", "the", " ", "molecule"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vol", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{"cube", ",", "\"\<VolumetricData\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"volRange", " ", "=", " ", 
           RowBox[{"vol", "[", "\"\<DataRange\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"Normal", "[", 
            RowBox[{"vol", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Dimensions", "[", "data", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"min", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"volRange", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"max", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"volRange", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"step", " ", "=", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}], 
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<min and max :\>\"", ",", " ", "min", ",", " ", "\"\<,  \>\"", 
            ",", " ", "max"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<vector basis for plot: \>\"", ",", 
            RowBox[{"{", 
             RowBox[{"v1", ",", " ", "v2", ",", " ", "v3"}], "}"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"\"\<min, max in plot vector basis: \>\"", ",", 
            RowBox[{"min", ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}]}], ",", 
            "\"\<,  \>\"", ",", " ", 
            RowBox[{"max", ".", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}]}]}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Now", " ", "we", " ", "make", " ", "an", " ", "interpolation", 
             " ", "function", " ", "from", " ", "the", " ", "3", "D", " ", 
             "volume", " ", "data"}], ",", " ", 
            RowBox[{
            "so", " ", "we", " ", "can", " ", "plot", " ", "slices", " ", 
             "easier", "\n", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"note", " ", "the", " ", "use", " ", "of", " ", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"z", ",", "y", ",", "x"}], "]"}], "]"}], " ", 
                "below"}], ",", " ", 
               RowBox[{"and", " ", "the", " ", "gymnastics", " ", "with", " ", 
                RowBox[{"n", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "in", " ", "the", " ", 
                "\"\<step\>\"", " ", "array", " ", "above"}], ",", 
               RowBox[{
                RowBox[{
                "which", " ", "is", " ", "because", " ", "the", " ", "z"}], 
                "-", 
                RowBox[{
                "loop", " ", "runs", " ", "fastest", " ", "in", " ", "the", 
                 " ", "cube", " ", "spec", " ", "Fortran", " ", "code"}]}]}], 
              ")"}]}]}], " ", "*)"}], "\n", "\n", 
          RowBox[{"Clear", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"f", " ", "=", " ", 
           RowBox[{"Interpolation", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"z", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"scale", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"z", ",", "y", ",", "x"}], "]"}], "]"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"z", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "2"}], "]"}], "]"}]}], ";", "\n", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Now", " ", "we", " ", "plot", " ", "a", " ", "slice", " ", "in", 
             " ", "3", "D", " ", "to", " ", "add", " ", "it", " ", "to", " ", 
             "the", " ", "plot", " ", "of", " ", "the", " ", 
             RowBox[{"molecule", ".", " ", "The"}], " ", "cut", " ", "plane", 
             " ", "is", " ", "defined", " ", "parametrically", " ", "via", 
             " ", "a", " ", "startpoint", " ", "and", " ", "two", " ", 
             "vectors"}], ",", " ", 
            RowBox[{
            "somewhat", " ", "like", " ", "the", " ", "grid", " ", "in", " ", 
             "the", " ", "cube", " ", 
             RowBox[{"file", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Determine", " ", "data", " ", "range", " ", "in", " ", "the", " ",
             "cube", " ", "corresponding", " ", "to", " ", "our", " ", 
            "slice"}], " ", "*)"}], "\[IndentingNewLine]", "\n", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"sol", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Off", "[", 
              StyleBox[
               RowBox[{"Reduce", "::", "ratnz"}], "MessageName"], " ", "]"}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"min1", " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"min", "+", 
                   RowBox[{"0", " ", "s"}]}], ")"}], ".", "v1"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"min2", " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"min", "+", 
                   RowBox[{"0", " ", "s"}]}], ")"}], ".", "v2"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"max1", " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"max", "+", 
                   RowBox[{"0", " ", "s"}]}], ")"}], ".", "v1"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"max2", " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"max", "+", 
                   RowBox[{"0", " ", "s"}]}], ")"}], ".", "v2"}]}], ";"}], 
              " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"sol", " ", "=", " ", 
              RowBox[{"Reduce", "[", 
               RowBox[{
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v1", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", " ", "t", 
                ",", " ", "Reals"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"min1", " ", "=", " ", 
              RowBox[{"sol", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"max1", " ", "=", " ", 
              RowBox[{"sol", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"sol", " ", "=", " ", 
              RowBox[{"Reduce", "[", 
               RowBox[{
                RowBox[{"{", " ", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "<=", " ", 
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}]}], ",", " ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"s", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                    RowBox[{"t", " ", 
                    RowBox[{"v2", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], " ", "<=", " ", 
                   RowBox[{"max", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", " ", "t", 
                ",", " ", "Reals"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"min2", " ", "=", " ", 
              RowBox[{"sol", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"max2", " ", "=", " ", 
              RowBox[{"sol", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<plot limits: \>\"", ",", " ", "min1", ",", "\"\<, \>\"", 
               ",", " ", "max1", ",", "\"\<, \>\"", ",", " ", "min2", ",", 
               "\"\<, \>\"", ",", " ", "max2"}], "]"}], ";"}]}], "  ", 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "\n", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"m", "-", "1"}], ",", "2"}], "]"}], "==", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Use", " ", "the", " ", "first", " ", "two", " ", "colors", " ", 
              
              RowBox[{"(", 
               RowBox[{
                RowBox[{"red", "/", "blue"}], " ", "by", " ", "default"}], 
               ")"}], " ", "for", " ", "even", " ", "numbered", " ", 
              RowBox[{"pick", "[", "]"}], " ", "values"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"plotSlice", " ", "=", " ", 
             RowBox[{"ParametricPlot3D", "[", 
              RowBox[{
               RowBox[{"s", " ", "+", " ", 
                RowBox[{"u", " ", "v1"}], " ", "+", " ", 
                RowBox[{"v", " ", "v2"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "min1", ",", " ", "max1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "min2", ",", " ", "max2"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"FaceForm", "[", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}]}], 
                 "]"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Lighting", "->", "None"}], ",", 
               RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
               RowBox[{"MaxRecursion", "->", "6"}], ",", 
               RowBox[{"Background", "->", "None"}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"MeshFunctions", "->", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}]}],
                  "\[IndentingNewLine]", "}"}]}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", " ", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Mesh", "\[Rule]", "contours"}], ",", 
               RowBox[{"BoundaryStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Opacity", "[", "0", "]"}], "]"}]}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Use", " ", "the", " ", "second", " ", "two", " ", "colors", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"green", "/", "dark"}], " ", "orange", " ", "by", " ",
                 "default"}], ")"}], " ", "for", " ", "odd", " ", "numbered", 
              " ", 
              RowBox[{"pick", "[", "]"}], " ", "values"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"plotSlice", " ", "=", " ", 
             RowBox[{"ParametricPlot3D", "[", 
              RowBox[{
               RowBox[{"s", " ", "+", " ", 
                RowBox[{"u", " ", "v1"}], " ", "+", " ", 
                RowBox[{"v", " ", "v2"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "min1", ",", " ", "max1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "min2", ",", " ", "max2"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"FaceForm", "[", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}]}], 
                 "]"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Lighting", "->", "None"}], ",", 
               RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
               RowBox[{"MaxRecursion", "->", "6"}], ",", 
               RowBox[{"Background", "->", "None"}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"MeshFunctions", "->", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}]}],
                  "\[IndentingNewLine]", "}"}]}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", " ", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{"0.02", ",", " ", "0.01"}], "}"}], "]"}]}], "}"}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{"0.02", ",", " ", "0.01"}], "}"}], "]"}]}], 
                   "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Mesh", "\[Rule]", "contours"}], ",", 
               RowBox[{"BoundaryStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Opacity", "[", "0", "]"}], "]"}]}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{"Combine", " ", "the", " ", 
            RowBox[{"plots", "."}]}], "  ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"field", ",", 
            RowBox[{"Show", "[", 
             RowBox[{"plotSlice", ",", 
              RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
              RowBox[{"ViewPoint", "\[Rule]", "view"}], ",", " ", 
              RowBox[{"ViewVertical", " ", "->", " ", "vert"}], ",", "  ", 
              RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", 
           RowBox[{"Length", "[", "pick", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", 
        "\"\<... done with creating contours. You can now evaluate the next \
cell to show the results if there are no errors. With plane set to 3-points, \
you might get some warnings about Extrapolation being used. This is perhaps \
harmless.\>\"", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.793787936129014*^9, 3.793787955586397*^9}, 
   3.793788244943744*^9, {3.793788279455273*^9, 3.793788281379185*^9}, {
   3.793797231399516*^9, 3.793797248189386*^9}, {3.793797359673271*^9, 
   3.793797372207142*^9}, {3.7937974347534847`*^9, 3.7937974409241133`*^9}, {
   3.793798894276332*^9, 3.7937990136937447`*^9}, {3.793799210256448*^9, 
   3.793799232274712*^9}, {3.793800290795893*^9, 3.793800294939698*^9}, 
   3.793809625961751*^9, {3.793811454231839*^9, 3.793811542477461*^9}, {
   3.793811583516202*^9, 3.793811589204122*^9}, {3.793812480725964*^9, 
   3.793812482677903*^9}, {3.793822941215563*^9, 3.793822941651073*^9}, {
   3.853862411299104*^9, 3.85386243042754*^9}, {3.853925763218968*^9, 
   3.853925766173764*^9}, {3.853925810939453*^9, 3.8539258111215878`*^9}, {
   3.853931504821154*^9, 3.853931504971962*^9}, {3.8647220062718167`*^9, 
   3.864722007032493*^9}, {3.8648087328805237`*^9, 3.864808761078828*^9}, {
   3.864808809941865*^9, 3.864808815585608*^9}, {3.864809172740831*^9, 
   3.864809173118518*^9}, {3.864809410555665*^9, 3.864809411264662*^9}, {
   3.86480968171535*^9, 3.864809693250341*^9}, {3.86481049641626*^9, 
   3.864810496450425*^9}, {3.864810583408517*^9, 3.864810583489043*^9}, {
   3.8648107995038548`*^9, 3.864810799564011*^9}, {3.864811471296981*^9, 
   3.864811472114854*^9}, {3.864826964426809*^9, 3.864826964769217*^9}, {
   3.8977265642338753`*^9, 3.897726568514516*^9}, {3.897728618908751*^9, 
   3.897728627364645*^9}, {3.897728757427329*^9, 3.897728765781805*^9}, {
   3.914071090584407*^9, 3.914071092490871*^9}, {3.9140777465271606`*^9, 
   3.914077746950813*^9}, {3.914162468783587*^9, 3.9141624688693457`*^9}, {
   3.914164286256906*^9, 3.914164286891412*^9}, {3.914164808991652*^9, 
   3.9141648100864577`*^9}, {3.914172626303006*^9, 3.914172712911684*^9}, {
   3.9141727712627587`*^9, 3.914172781494815*^9}, {3.914174477697906*^9, 
   3.914174478189829*^9}, {3.9141747663906736`*^9, 3.9141747777003117`*^9}, {
   3.914174864366918*^9, 3.914174959988058*^9}, {3.914185320275083*^9, 
   3.914185335645569*^9}, 3.914185403235224*^9, {3.914185813488426*^9, 
   3.914185926643965*^9}, {3.9141859742354107`*^9, 3.914186013387237*^9}, 
   3.914186309986964*^9, {3.9141863603228807`*^9, 3.9141864054684763`*^9}, {
   3.91418643835917*^9, 3.914186446766232*^9}, {3.914186529017734*^9, 
   3.91418656268108*^9}, {3.914186634367724*^9, 3.91418674304177*^9}, {
   3.914186776679329*^9, 3.914186815221946*^9}, {3.914186900916335*^9, 
   3.914186903978241*^9}, {3.9141869488524437`*^9, 3.914186994832337*^9}, {
   3.914188066345008*^9, 3.914188070538456*^9}, {3.914188121499324*^9, 
   3.914188149597844*^9}, {3.914188351275371*^9, 3.9141883517434607`*^9}, {
   3.9141884159384727`*^9, 3.914188417752088*^9}, {3.914188847828933*^9, 
   3.914188920543178*^9}, {3.914189020366275*^9, 3.914189032231335*^9}, {
   3.9141894755876217`*^9, 3.914189476798005*^9}, {3.914189623556363*^9, 
   3.914189624761038*^9}, {3.914189818557254*^9, 3.91418982846539*^9}, {
   3.91419010187681*^9, 3.9141901229348593`*^9}, {3.914240890743246*^9, 
   3.914240897875329*^9}, {3.914240957172438*^9, 3.9142409865126123`*^9}, {
   3.9142410705951347`*^9, 3.914241101480776*^9}, 3.9142412338335743`*^9, {
   3.914241586496808*^9, 3.914241700361767*^9}, {3.914241762369725*^9, 
   3.914241832181808*^9}, {3.914241895657686*^9, 3.91424190790658*^9}, {
   3.914242143065642*^9, 3.914242164362455*^9}, {3.914242206032741*^9, 
   3.914242304488638*^9}, {3.914242391724386*^9, 3.914242407599369*^9}, {
   3.914242452195548*^9, 3.9142424570306*^9}, {3.9142428387826757`*^9, 
   3.914242869433759*^9}, {3.9142429291717973`*^9, 3.914242930400611*^9}, {
   3.914243642560371*^9, 3.914243653644383*^9}, {3.914419443158938*^9, 
   3.914419466817256*^9}, {3.914419572806915*^9, 3.914419581763941*^9}, {
   3.914420051076097*^9, 3.914420098928849*^9}, {3.914420142450053*^9, 
   3.914420155355466*^9}, {3.914772560030212*^9, 3.914772650658999*^9}, {
   3.9150208448565283`*^9, 3.9150208913854523`*^9}, {3.915021360433525*^9, 
   3.9150214069798107`*^9}, 3.915021438054056*^9, {3.915024641413219*^9, 
   3.9150246594788523`*^9}, {3.915024877044697*^9, 3.91502489600065*^9}, {
   3.915025064417856*^9, 3.9150250654447927`*^9}, 3.9150276140330553`*^9, {
   3.915027653924224*^9, 3.9150277679663067`*^9}, {3.915027798388928*^9, 
   3.91502782104603*^9}, {3.915028172970783*^9, 3.915028177453154*^9}, {
   3.91502820757296*^9, 3.915028209849493*^9}, {3.9150286842478123`*^9, 
   3.915028699722267*^9}, {3.9150287484359713`*^9, 3.9150288375146837`*^9}, {
   3.915035710786497*^9, 3.91503577057535*^9}, {3.915036254466956*^9, 
   3.915036268993222*^9}, {3.91504306006068*^9, 3.91504319059792*^9}, {
   3.915043469166698*^9, 3.915043474037402*^9}, {3.915043528561636*^9, 
   3.915043587111868*^9}, {3.9150451484407187`*^9, 3.915045152249617*^9}, {
   3.915093199498542*^9, 3.91509320115985*^9}, 3.915282782857814*^9, {
   3.915282835040751*^9, 3.915282848889865*^9}, 3.915282988187518*^9, {
   3.915283105057571*^9, 3.915283124335822*^9}, {3.915283338214898*^9, 
   3.9152833769086514`*^9}, 3.9152835174642973`*^9, 3.91528357271682*^9, {
   3.915283623148677*^9, 3.9152836256415358`*^9}, {3.915283704401581*^9, 
   3.915283717670445*^9}, {3.915284874795827*^9, 3.915284885154233*^9}, {
   3.915288031556447*^9, 3.9152880659641953`*^9}, {3.915288096970759*^9, 
   3.915288118184758*^9}, {3.915288233708865*^9, 3.9152882773107347`*^9}, {
   3.915288381409382*^9, 3.9152884857148657`*^9}, {3.9152887025245867`*^9, 
   3.915288754550565*^9}, {3.91528894519648*^9, 3.915288969407414*^9}, {
   3.9152898217293997`*^9, 3.915289900085268*^9}, {3.915289949779977*^9, 
   3.9152899538926773`*^9}, {3.915290081362068*^9, 3.91529009378784*^9}, {
   3.915290783599557*^9, 3.9152909409144697`*^9}, 3.915291195078335*^9, {
   3.915291236045583*^9, 3.915291259777197*^9}, {3.915291308935597*^9, 
   3.915291318526898*^9}, {3.9152914518210287`*^9, 3.9152914726865807`*^9}, {
   3.9152915740650053`*^9, 3.915291580590239*^9}, {3.9152919516300583`*^9, 
   3.915291951739912*^9}, {3.915292618155095*^9, 3.915292643631661*^9}, {
   3.9152927906122913`*^9, 3.9152928005259666`*^9}, {3.9152928372770042`*^9, 
   3.915292844868662*^9}, {3.91529290272114*^9, 3.91529291339478*^9}, {
   3.9152934628239403`*^9, 3.915293489098131*^9}, {3.915293876393415*^9, 
   3.915293886662567*^9}, {3.915294236907674*^9, 3.91529424263561*^9}, {
   3.9152944006265793`*^9, 3.915294402329117*^9}, {3.915294445527192*^9, 
   3.915294465698763*^9}, {3.915294599903234*^9, 3.9152946068169003`*^9}, {
   3.915294815035718*^9, 3.915294824024768*^9}, {3.915294861553637*^9, 
   3.915294870449786*^9}, {3.9152951624713717`*^9, 3.915295196498453*^9}, {
   3.915295249276204*^9, 3.915295270942437*^9}, {3.915295307022731*^9, 
   3.915295310077055*^9}, {3.915295369808148*^9, 3.915295376474937*^9}, {
   3.9152956416639757`*^9, 3.915295655151771*^9}, {3.9152968616173077`*^9, 
   3.915296865327284*^9}, {3.9152968986415777`*^9, 3.9152969001503*^9}, {
   3.915296973187355*^9, 3.915296974544855*^9}, {3.915297178561157*^9, 
   3.915297184397003*^9}, {3.9152974002430487`*^9, 3.915297404105103*^9}, {
   3.915366936206109*^9, 3.9153669438171167`*^9}, {3.915368474670342*^9, 
   3.915368503310589*^9}, {3.91536860677288*^9, 3.915368655177916*^9}, {
   3.9153688856621323`*^9, 3.915368921895014*^9}, {3.91536901681994*^9, 
   3.915369026323443*^9}, {3.9153690910878363`*^9, 3.915369123040506*^9}, {
   3.915369164040691*^9, 3.915369340026894*^9}, {3.915369510770157*^9, 
   3.9153695940378637`*^9}, {3.9153696494316473`*^9, 3.91536966168717*^9}, {
   3.915369970222269*^9, 3.915369982185473*^9}, 3.915370055607396*^9, {
   3.915370264165188*^9, 3.9153703025385017`*^9}, {3.915370377822809*^9, 
   3.91537038022265*^9}, {3.915379642521049*^9, 3.91537976790082*^9}, {
   3.9153798298733377`*^9, 3.91537982998507*^9}, {3.915379888418569*^9, 
   3.915379893754575*^9}, {3.915379944719606*^9, 3.9153799461264544`*^9}, {
   3.915379980684816*^9, 3.915380130513917*^9}, {3.915380228812847*^9, 
   3.915380242447548*^9}, {3.915380793573279*^9, 3.915380797780851*^9}, {
   3.9153809128077602`*^9, 3.915380915674172*^9}, {3.915382141518277*^9, 
   3.91538214729876*^9}, {3.9153824009453583`*^9, 3.9153824991971483`*^9}, {
   3.9153826604640827`*^9, 3.915382665332999*^9}, {3.915382750594797*^9, 
   3.915382752487844*^9}, {3.915383081996888*^9, 3.9153830987469788`*^9}},
 CellTags->"make-contours",
 CellLabel->"In[1]:=",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate and view combined plots", "Subsubsection",
 CellChangeTimes->{{3.91442047680878*^9, 3.91442048494007*^9}, {
  3.914774097653467*^9, 
  3.9147741029742193`*^9}},ExpressionUUID->"fd91ba99-4141-41a5-8a4c-\
9a02c7c502ae"],

Cell[BoxData[
 ButtonBox["\<\"Create contours (may take a while...) \"\>",
  Appearance->Automatic,
  ButtonFunction:>NotebookEvaluate[
    EvaluationNotebook[], EvaluationElements -> {"Tags" -> {"make-contours"}}],
  Evaluator->Automatic,
  Method->"Queued"]], "Output",
 CellChangeTimes->{3.914776168181922*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"db76cb3e-4de3-4ab2-873e-ee787b0c7771"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"min and max :\"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3.3338166686999995`"}], ",", 
     RowBox[{"-", "3.0427691817499998`"}], ",", 
     RowBox[{"-", "2.116708996`"}]}], "}"}], 
   "\[InvisibleSpace]", "\<\",  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
    "3.3338166687000004`", ",", "3.0427691817499998`", ",", "2.116708996`"}], 
    "}"}]}],
  SequenceForm[
  "min and max :", {-3.3338166686999995`, -3.0427691817499998`, -2.116708996},
    ",  ", {3.3338166687000004`, 3.0427691817499998`, 2.116708996}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9153836838577127`*^9},
 CellLabel->
  "(kernel 12)",ExpressionUUID->"554622e9-4229-49ef-b23b-d50641c10e65"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"vector basis for plot: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.`", ",", "0.`", ",", "1.`"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.5241724734461579`", ",", "0.8516121288951543`", ",", "0.`"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8516121288951543`"}], ",", "0.5241724734461579`", ",", 
       "0.`"}], "}"}]}], "}"}]}],
  SequenceForm[
  "vector basis for plot: ", {{0., 0., 1.}, {0.5241724734461579, 
   0.8516121288951543, 0.}, {-0.8516121288951543, 0.5241724734461579, 0.}}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.9153836838718367`*^9},
 CellLabel->
  "(kernel 12)",ExpressionUUID->"5df18dc8-e2b8-47a2-ac1a-75257b8369ef"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"min, max in plot vector basis: \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2.116708996`"}], ",", 
     RowBox[{"-", "4.338754069855193`"}], ",", "1.2441828624541182`"}], "}"}],
    "\[InvisibleSpace]", "\<\",  \"\>", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{"2.116708996`", ",", "4.338754069855193`", ",", 
     RowBox[{"-", "1.2441828624541191`"}]}], "}"}]}],
  SequenceForm[
  "min, max in plot vector basis: ", {-2.116708996, -4.338754069855193, 
   1.2441828624541182`}, ",  ", {2.116708996, 
   4.338754069855193, -1.2441828624541191`}],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.91538368388595*^9},
 CellLabel->
  "(kernel 12)",ExpressionUUID->"fd236fb9-a1ef-420a-a630-0d40b68814cc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"plot limits: \"\>", "\[InvisibleSpace]", 
   RowBox[{"-", "2.116708996`"}], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", "2.116708996`", "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", 
   RowBox[{"-", "3.572951909101577`"}], "\[InvisibleSpace]", "\<\", \"\>", 
   "\[InvisibleSpace]", "3.572951909101577`"}],
  SequenceForm[
  "plot limits: ", -2.116708996, ", ", 2.116708996, ", ", -3.572951909101577, 
   ", ", 3.572951909101577],
  Editable->False]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.915383689143771*^9},
 CellLabel->
  "(kernel 12)",ExpressionUUID->"52bc212f-b284-41b5-98e6-19c8064d9c49"],

Cell[BoxData["\<\"... done with creating contours. You can now evaluate the \
next cell to show the results if there are no errors. With plane set to \
3-points, you might get some warnings about Extrapolation being used. This is \
perhaps harmless.\"\>"], "Print",
 CellChangeTimes->{3.915383689432609*^9},
 CellLabel->
  "During evaluation of \
In[1]:=",ExpressionUUID->"3e6254ff-4ec9-4eff-93cd-16e011d6081a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vp", " ", "=", " ", "view"}], ";", " ", 
  RowBox[{"vv", " ", "=", " ", "vert"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"combined", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"molplot", ",", 
    RowBox[{"field", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vv", "]"}]}], " ", ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", " ", 
    RowBox[{"Background", "->", "None"}], ",", " ", 
    RowBox[{"Lighting", "->", "\"\<Neutral\>\""}]}], " ", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ7d+kdni75lvH0p0KR0C02aLTt0B0b+XkhyD63FEj
8R1A+vGfXDB9Y7WzOohOXuGrCaI/JDEb7gTSSjuzwPSPuNAKEJ3NMBFM+zwp
XAWi1y72WQuiI8w2P70EpJOuKj4H0Yu4H6y7DKQdJklvBNEHIv/xXAHSR5/y
8oLoazZ59iDay6kJTMfdWu4KogNtmNxBdPVulkIQPU+7HEynb522SFPrraOO
21kwvXZ5F/M1IG2x+guYXnTRRwRE74npAdP/lU8vuw6kAzm8l4PouBLXKyC6
SyAZTAs+1tEP1H7r+IzZCkxP15oWegVIX7M8AaaX9Z5X/wGkP159AaYfOXJ8
/gekf11QANP37x9T+g+kv8pbqYDoPFsOFgadt44i5eJgGgBOPr+K
  "],
 CellLabel->"In[2]:=",ExpressionUUID->"9ac83f03-5ba4-4c63-9948-ab4f1efd4b57"],

Cell[BoxData[
 Graphics3DBox[{
   {AbsoluteThickness[3], Specularity[
     GrayLevel[1], 100], 
    GraphicsComplex3DBox[{{-0.666200289147064, 0., 0.}, {0.666200289147064, 
     0., 0.}, {-1.2382313701255818`, -0.9293670143790009, 
     0.}, {-1.2382313701255818`, 0.9293670143790009, 0.}, {
     1.2382313701255818`, -0.9293670143790009, 0.}, {1.2382313701255818`, 
     0.9293670143790009, 0.}, {0.9522158296363229, -0.46468350718950047`, 
     0.}, {0.9522158296363229, 0.46468350718950047`, 
     0.}, {-0.9522158296363229, -0.46468350718950047`, 
     0.}, {-0.9522158296363229, 0.46468350718950047`, 0.}}, {{
       {RGBColor[0.4, 0.4, 0.4], SphereBox[{1, 2}, 0.]}, 
       {RGBColor[0.65, 0.7, 0.7], SphereBox[{3, 4, 5, 6}, 0.]}}, {
       {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 2}]}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{2, 7}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{7, 5}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{2, 8}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{8, 6}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 9}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{9, 3}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 10}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{10, 4}]}}}, 
      {Opacity[0.7]}}]}, {GraphicsComplex3DBox[CompressedData["
1:eJyE3XdwVNXfx3GaNJHeQUCKdCkiTeAsRUB670iVjlKlKURAKQIKIr0qICDS
q5Qbeu+h91QIEBICIYT2qLuf48z7/naev5x5zZ17TzabNzdnr9+81/XLZp8n
SZQoUYsMiRIl/fu/F3pG/dirUaxTKs+PTWa3Thl4pPWKrG89ShRIX3QwKCpD
B7ff65F8WtUZbxz6rBrdqrXu99rlNfMERg2o/crl0c9zL56c76XLF14Y0XhZ
QoLL6224+GZ30HOXP5vy4fpLa+NdvqzXT51jJj5zedNaD9O/3S3O5a/z1ttb
sOpTl//xYsXAatmeuLzNpaT528Q8dvlbmzqfG3g8xuUbp+0e+8PyaJfvCSrX
o96bKJdnnxJ16JtND1w+qObKwht6Rrr8REKXiaG57rr8/Y257mU7E+bygN4X
Pq0/PsTlV/P9uHp0xTsu77V+etbuV264PHfety4fq37F5WemDp9bZnWQy8e/
vN9uTsYzLh9wcU/F108PuXx9z/rDZk/d6fJEn5RN6P7Zry7v7HVDv+09j8sn
eq/r8p+863T5de/X5fIi3tfB5UO8r5t7Pd7X2eXfe78vLi/h/T66/Jz3++7y
4d73icvzeN9XLj/gfR+6fIv3fevylN73ucvbe38uXL7W+3Pk8sT5/v25c3kL
78+py3/3/ly7PMHbAZc39HbD5Uu8nXF5rLdLLq/t7ZjL53q75/IH3k66r+vt
qsdPhz1NIksP+azeYyfT9aaH245PYftMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz671+PpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz67r+vrs
p8OeE/0Gt2lRO8Z5Njdztdwbkts+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6rNrPb4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6rPrur4+++mw
p+6jLVXq1Yh2rrW+tPnmjbdsn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPXZtR5fn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPXZdV1fn/102PN9
SHT1gK+jHCfLvOJLU//XZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX12rcfXZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX12XdfXZz8d9oy+OzR1
vyEPnN/Od/i1W4Vkts909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r67FqPr8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67Lqur89+OuwZ8jDhXOt+
kc6E6XlzvN89qe0zXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPrvW4+szXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPruu6+uznw57+j0eM79m97tO
38bBP979KYntM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj671uPrM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj67ruvrs58Oe7o+S9a9VIdwp/E7
y5P/sTux7TNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+u9bj6zNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+u67r67OfDnvavZxUIleLUOfD4z2/
6R+ZyPaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn13r8fWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn13X9fXZT4c9zRKne5q8QbCTbVKxJ6Wy
/ddnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfXatx9dnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfXZd19dnPx321E0+c/fjmredZ1OvXgid8Nqx
zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3
zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3
zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3zz/D7fPPcPv8M9w+/wy3
zz9zPXr+GW6ff4bb55/h9vlnuH3+GW6ff4bb55/h9vlnuH3+GW6ff4bb55/h
9vlnuH3+GW6ff4bb55/h9vlnuH3+GW6ff4bb55/h9vlnuH3+mdfV88//u8Oe
gKxl0+wedt1xUnXe3/vOS9tnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfXatx9dnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXZd19dnPx32DMhX
ZeHMnpedid+FrY+q/ML2ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV59d6/H1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59d1/X12U+HPZ2L1f6g
X+sgp2nivosGz3xu+0xXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPrvX4+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPruv6+uynw54m5Zo4Neuc
cXJ+E/1D/MNnts90O78ObufXwe38OridXwe38+vgdn4d3M6vg9v5dXA7vw5u
59fB7fw6uJ1fB7fz6+B2fh3czq+D2/l1cDu/Dm7n18Ht/Dq4nV8Ht/Pr4HZ+
HdzOr4Pb+XVwO78ObufXwe38OridXwe38+vgdn4d3M6vg9v5dXA7vw5u59fB
7fw6uJ1fx/Vofh3czq+D2/l1cDu/Dm7n18Ht/Dq4nV8Ht/Pr4HZ+HdzOr4Pb
+XVwO78ObufXwe38OridXwe38+vgdn4d3M6vg9v5dXA7vw5u59fxuppf9787
7An4evOS8l8ccULih474pk7cf/vPcLv/DLf7z3C7/wy3+89wu/8Mt/vPcLv/
DLf7z3C7/wy3+89wu/8Mt/vPcLv/DLf7z3C7/wy3+89wu/8Mt/vPcLv/DLf7
z3C7/wy3+89wu/8Mt/vPcLv/DLf7z3C7/wy3+89wu/8Mt/vPcLv/DLf7z3C7
/wy3+89wu/8Mt/vPXI/2n+F2/xlu95/hdv8Zbvef4Xb/GW73n+F2/xlu95/h
dv8Zbvef4Xb/GW73n+F2/xlu95/hdv8Zbvef4Xb/GW73n+F2/xlu9595Xe0/
/+8Oezr/dGRfWMNAZ82QFz2SLH3y3/4G3O5vwO3+Btzub8Dt/gbc7m/A7f4G
3O5vwO3+Btzub8Dt/gbc7m/A7f4G3O5vwO3+Btzub8Dt/gbc7m/A7f4G3O5v
wO3+Btzub8Dt/gbc7m/A7f4G3O5vwO3+Btzub8Dt/gbc7m/A7f4G3O5vwO3+
Btzub8Dt/gbc7m/A7f4G16P9Dbjd34Db/Q243d+A2/0NuN3fgNv9Dbjd34Db
/Q243d+A2/0NuN3fgNv9Dbjd34Db/Q243d+A2/0NuN3fgNv9Dbjd34Db/Q1e
V/sb/7vDnoC6O44Wbb/eGRod0GJCwuP/7p/h9v4Zbu+f4fb+GW7vn+H2/hlu
75/h9v4Zbu+f4fb+GW7vn+H2/hlu75/h9v4Zbu+f4fb+GW7vn+H2/hlu75/h
9v4Zbu+f4fb+GW7vn+H2/hlu75/h9v4Zbu+f4fb+GW7vn+H2/hlu75/h9v4Z
bu+f4fb+GW7vn+H2/hlu75+5Ht0/w+39M9zeP8Pt/TPc3j/D7f0z3N4/w+39
M9zeP8Pt/TPc3j/D7f0z3N4/w+39M9zeP8Pt/TPc3j/D7f0z3N4/w+39M9ze
P/O6un/+3x32JPIMuPPOxMpO1X7Ja6RpEWP7TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u9fj6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u
6/r67KfDnviecX/meH+9eedMtk752z+yfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13p8faarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13V9
ffbTYU/ufBGbO34YaBYfzl+5RNoHts909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67FqPr8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67Lqur89+
Ouypkub8jLXNj5gyTsks5ffetX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ9d6fH2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ9d1fX3202HP
B1932v6m0hmzb2vFaDMkzPaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn13r8fWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13X9fXZT4c9VQe1
LFykXpBpsbbm8U8LB9s+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6rNrPb4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6rPrur4+++mwp2Gv+rOa
tLtsTtRf2OD3zTdsn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPXZtR5fn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPXZdV1fn/102NPxs+pvjehz
3TyqvCnJzpyXbJ/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T12bUeX5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T12XVdX5/9dNhTYXWuv5pUvW0y
Fju6/VTAGdtnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfXatx9dnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXZd19dnPx32mOWzYrp/Emz6lN1z
48DJ/bbPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+uxaj6/PdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+uy6rq/PfjrsqbMkQ9ERDUNNYI1/vn+r
bZ/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T12bUeX5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T12XVdX5/9dNjTeP6UzlNbhpuitf51oz7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
s2s9vj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqs+u6vj776bCn9awUc5Z2vGsOeO+rbZ/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T12bUeX5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T12XVdX5/9dNjTafrY01s+jzTGuy9t+0xXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPrvX4+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
ruv6+uynw56eU14lP9b/gcn98b/Pddg+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6rNrPb4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6rPrur4+
++mw58sJw6vdHBplnnufi7Z9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1WfXenx9pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1WfXdX199tNhT5W9
zys/rxZt+nj/v0LbZ7qdjwS385Hgdj4S3M5Hgtv5SHA7Hwlu5yPB7XwkuJ2P
BLfzkeB2PhLczkeC2/lIcDsfCW7nI8HtfCS4nY8Et/OR4HY+EtzOR4Lb+Uhw
Ox8Jbucjwe18JLidjwS385Hgdj4S3M5Hgtv5SHA7Hwlu5yPB7XwkuJ2PBLfz
keB2PhLczkfiejQfCW7nI8HtfCS4nY8Et/OR4HY+EtzOR4Lb+UhwOx8Jbucj
we18JLidjwS385Hgdj4S3M5Hgtv5SHA7Hwlu5yPB7XwkuJ2PBLfzkXhdzUf6
3x32BFbb1ippzRhzxTuXw/aZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn13r8fWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13X9fXZT4c9NXcN
GfROncemjneune0zXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPrvW4+szXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPruu6+uznw57DlcqOy1b/Viz
xTsX2vaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn13r8fWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn13X9fXZT4c99bc9WvVe4yemgPfvqtg+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6rNrPb4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6rPrur4+++mw53S5Pw8Wb/7UfOr9u4S2z3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vnuvrs
Wo+vz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09Vnuvrsuq6vz3467Gm+sc+dj1rHmQDv3/W2faarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13p8faar
z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09Vn13V9ffbTYc+lUkVemfbPzLYhL3okWfrE9pmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFefXevx9ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFefXdf19dlPhz3t/wzLXq9TvImKHzrimzpxts909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67FqPr8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
7Lqur89+Ouy5Wey3ci26PTeFvon+If7hM9tnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXatx9dnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXZd
19dnPx32dF3ZuclnPRNMh8R9Fw2e+dz2ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59d6/H1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59d1/X1
2U+HPRGF8vTr1feF+fm7sPVRlV/YPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqzaz2+PtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqz67q+Pvvp
sKfvb9cmDPrypTmeqvP+3nde2j7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqs2s9vj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqs+u6vj776bDn
Ub65v309+JVJOu3qhdAJr22f6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909dm1Hl+f6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909dl1XV+f/XTYM2RR
K+f7Ya/Nu5OKPSmVLZFHfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09Vn13p8faarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13V9ffbTYU98rszX
fhr1xlQ63vOb/pH/9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFefXevx9ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFefXdf19dlPhz17TvQaddIk
8rR8Z3nyP3Yntn2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ9d6fH2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ9d1fX3202FPwA91Jp3bm8gz
sHHwj3d/SmL7TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8+u9fj6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u6/r67KfDnpr13p99qWZiz9Tp
eXO83z2p7TPdzn+G2/nPcDv/GW7nP8Pt/Ge4nf8Mt/Of4Xb+M9zOf4bb+c9w
O/8Zbuc/w+38Z7id/wy385/hdv4z3M5/htv5z3A7/xlu5z/D7fxnuJ3/DLfz
n+F2/jPczn+G2/nPcDv/GW7nP8Pt/Ge4nf8Mt/Of4Xb+M9zOf4bb+c9wO/8Z
buc/cz2a/wy385/hdv4z3M5/htv5z3A7/xlu5z/D7fxnuJ3/DLfzn+F2/jPc
zn+G2/nPcDv/GW7nP8Pt/Ge4nf8Mt/Of4Xb+M9zOf4bb+c+8ruY//+8Oe95K
9dby6wcTe1ad7/BrtwrJbJ/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T12bUeX5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T12XVdX5/9dNhz+HDI
xjt1kngOZplXfGnqt2yf6XY+P9zO54fb+fxwO58fbufzw+18fridzw+38/nh
dj4/3M7nh9v5/HA7nx9u5/PD7Xx+uJ3PD7fz+eF2Pj/czueH2/n8cDufH27n
88PtfH64nc8Pt/P54XY+P9zO54fb+fxwO58fbufzw+18fridzw+38/nhdj4/
3M7nh9v5/HA7n5/r0Xx+uJ3PD7fz+eF2Pj/czueH2/n8cDufH27n88PtfH64
nc8Pt/P54XY+P9zO54fb+fxwO58fbufzw+18fridzw+38/nhdj4/3M7n53U1
n/9/d9gz+ft9geFHk3jutL60+eaN//pMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz671+PpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz67r+vrs
p8OeBp8sPXW/flLPq7mZq+XekNz2ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59d6/H1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59d1/X12U+H
PWmTBVyPPpnUk+N608Ntx6ewfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13p8faarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13V9ffbTYc+J
fZ9FPm2czFMqz49NZrdOaftMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfaarz671+PpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz67r+vrsp8OeTKvS
je124rHz3r9zR1MEbvr39U8USFe36Zu9x7vOo/P37/Zlt9i0yTwFve7R+ek6
P13n5/rlF3pG/dirUazjc7t+ur/z/D/r8QxJ+SZlj3dinZUnTdTh/CkDq8Vu
aFD3WKJAP+55N1PEiiGlknlWed2j4/246/x6Hbh+Hc/1+zu/1u/nPK7163g/
53H9u6z1FNz+VYOIkrHO/aE9F5eqmjJwXKE1G1ZcTxToxz1PI3+tu8Uk8zz0
ukfH+3HX+f29Pjqe6/R3fn+vj7/163g/53G9PlrPyx/LRhWuFuukqfdiWLd6
KQNXVCsaeiEsUaAf99y5GDD3Qp1knrRe9+h4P+46v7/XR8dznf7O7+/18bd+
He/nPK7XR+u5Nyq9qVs71slT7pPur5qkDKzg/f/nAv245+KJR3vD6ifz+Nyj
4/246/z+Xh8dz3X6O7+/18ff+nW8n/O4Xh+t59bAMT3b1It1Chft065ei5SB
ARlS1NvxIFGgH/ecq1P44sOGyTw+9+h4P+46v7/XR8e77uv8nN/f6+Nv/Tre
z3lcr4/WM3berPPfBu02Q354UezKzw8c3QfmzhexueOHgWax9++hO0sOjcqc
96OLzgeTrgRcDN1mXn8w8LPhRx46uj/8K2PeT/I+3GTmXA8o6syKcnR/GN6o
XJGsPTeYFXd3d3mc45Gj+8MzZmPjduXXm2TXHve60PqRo/tDuu4PeR7dH/K6
uj/kOnV/yK9X94f8etd4v14zeWS/b9fU328ih6Qb1eFEpKP75yppzs9Y2/yI
KeOUzFJ+713n8aCBMxutvu7weN1n8vjX3uNN53y1+5XfccyUG1Xnm6RHIhzd
t3/wdaftbyqdMfu2Vow2Q8KcGlk/zL982S2Hx+t+lcc38h5vqg5qWbhIvSDT
Ym3N458WDnYet0/ZLlOe286nXVrf3DPtvBnRYs2yCU6w/X7x+LlrdsT/UvqY
0zj9wcn3K5wz+Wbn/OStiyH2+1i7fq+ZkxadNXl2vDN9UbNQ+32k6/vI8+j7
yPXo+8j1bPCux+Xx3q/LNOxVf1aTdpfNifoLG/y++YaTotSIeeNibjqLDt97
vLrkRdPrcJbO4xbdtu9bHv+464kPd719znW83j88/rX3eJdn8l7XnHCGTxj0
3lVzYNcv4z86e9V+fzt+Vv2tEX2um0eVNyXZmfOSs/ra4aU5Xl9z+frwH8a+
W/W8y3d53XV+vR94/Fbv+c2p3d9uLZDjljmxJeKtPM45+36usDrXX02q3jYZ
ix3dfirgjJNyc4r40csuuVyvT82syU6smXfT5Kzf/fbMKeft+4HH38pY8Zfk
DfY5c7MklGtT4IaJzvfTuE5RF+z7hG6f58f59T7h+Z95z+9yfV/49ernkcdn
9n69pnm1HqOT9btjxl+f0G1As6O2hwm/nX/Y7cAdc7hJ76zvZT5s3z9m+ayY
7p8Emz5l99w4cHK/0+CzdSVm9jzn8rNDOv62ZfQpl6cLHPT6x10HXF7Y64bX
1fuQx9/znt+1fvWNx7fxrtMUT3O4+8E8IWZZ+nvrys7YZb+uRJEbnCJFQ03x
JI8Lrsm21vahzpIMRUc0DDWBNf75fXW1UzZ9xY/z9j3q8pv//p0c9/H9oqu2
yNJgr9Nj4oovZp0LNjVzLZhepmKgfT/w+IPdt9cocHuT63i9T3j8U+/xhutX
T3h8nHedLh/vXafr9dHrz+PreV8Hs3bmF3kabQo1LRfdTjEr/RL7utWdWLTq
nYgw8yDVwyY/TFpk5+AFZqpR9qc1YaZMwQPx67+ZYb1X/RTrBhQIM1Pnl9w6
b+tY+/NVenezi49KhpvgpQuLhXVZYefmLXrn0fo9v4eZtJVqdyw1brr1xvOn
dJ7aMtwUrfXvOk2T78YN+bjjBpcHfZa15/iCq1zn1+vM88v5dennlF+XnF+X
nOsJ8K7T5eU6/btO1+us72+r29caN58QbjKOMOknD11nX4faM1JsfN0r3AS1
GBeco8sa6zxeXxePl89be/6nufP3mBNnt3br0/eBc/WnxTUeFL/ghGfbOO/j
VzvM48HbWk1q/9C5OHDumZ7BZ52C/SclLV9+q+nVs9GUB3mjnCXZS3bOsv2E
U21ehdyrGm0yq8v0nvRwa5QT/+GjIhlLHnTK5HwSv6DuBpO1XM11+fM9cnIV
al7M88lfrvuir25XLb2ykvt+KXLV+wfeG/er6XHi4kd3528wDU4crF4x3SMn
24ODkzKW222aLXudLtW9zWZm8lo1ZnWLcv748POk51YcNVEZS55r/NYuE3ou
+4zImAfOxtUL6rfsf940KBV9vsyAg6b0lSYzpz+85+zLWr3p2pCrzojojTPv
Zt9n7s5Kcvhp3ftO2TN/nO9V6rKzvUvUsk9rnjIp931Q93XrcGfGz/27e7Le
chaGZ64S8/lR02rgqaVnmt51PCtn/Nqz2g3XfUWVEiOvtsx+2xm0Kqz6hyfO
m3btds+dPzXYWXIntOWWjEecal+vD/7993Nme638QZ5RIc6BMwlvHx2+18ly
JUfXleFnzZGdr8akzB7qlFhf6ur6F5ucLwaveVx32lnjmbq097lOoc6Dsc+X
Tugxyfm86K95Ch86a9J0L1RmQNlQJ3Xdbo8LfbDeVBn29FX9DOfNzS5dgr4s
FOLkq5Mn1YmyB0z2toV712p0zgxq3vjFjf0hTs/TRwNH5bhtGjx/0Pv6zoum
fL/XbyUuftu5HJ119+k/bznR+TqlytPokomvML5vt163nEzbqqXZVv2ssz3s
2741ml0wpYfdqe80ueN4ZmcOLXfmpHM1aZNE9bJcNAu+iy3YdONtZ9aukjsb
3b5lug7KOHn9kyumUOzgTA9zXHNGZz9eoOvVc87qTb3n5MpwzUx6XHXYxfpX
nEV3Nm27VuC8Wbl27SZn5DVztsSuYeWWXHbi6xU+OPjYdbOz6ZUXN19fNvkO
3O/TcNV1Z8DDuKBOP980Ye3TFMl78YZJHX4tPPJ4kJOsd87vy6Q776R8WuJW
jz63zKh+7/2U7eNzTnidf16fQOfiiY3dK1y/YWKS90+WbF+Qk31S+xmpkm9x
Du1LPiZdhhumyp7rxTKnuej82TJ3rabxc5wi+ePeytjs7/vTd6v1GPrrBaf0
ygUx/aesNmMHbb6Z6MxN87JYzt+iPzrv1Ao/syfpkXPm1+OeH24euWWGRPa5
umDpWafF3Jk9g4dfNmtDI5Ks3n7DJDsce+nQiyDn4pGOQWN2XjXlsxxtuzXi
tpnzYYHrnrUnnMqVk0z7PXa/82Xrz/INP3rHDNrzbHje2ENOvSuPSjsHD5iD
a3adnpw22MRPb7mlStmDzshmK7qWL3na5P09Y9eMZ+6Y5A2zPS9/5JCTtc2C
w6+XnDcZmg2YfejcbTNmzfU+TcqfdL7/onrHAd3PmnULKz87deO22XUjdv7C
qBPOpqiDIc8zXzTNhox3tl4NNjuPNSjVNWmgkzhvUKWYZgecP+6VGDK6f4jp
36bI4kQ/b3dO1L0yom32Dc7YPCk2x28MNj+tz95v5Vt7nTJrJrbbVf0XJ+7H
JL1LVA41e525Dbt1XOM4PXNe2b3okLk+bkO3VgEhpkKSkRezLNrmJM9RItH8
VvtNSGDm+VeXhZhq69YlHbZ/i3P3XN3WIcVOmq13Tk4qUjrETP59a+WP1u90
cicpVKt5ruMmx6tO86rvDjbLGq2JPbsv0EnTtdWaie+dNT90WFL/Qd8wM3jX
P79HDDVdX1/q/SZ8r/Pjy2etq74XbuZElkx2Idty86DLhHpd069wOh7Ln3/a
R+Hmero616IK/26uZ+k99XCuJaZXi7Orql/8+9+Fv3ptbPx0nsmyo+qEe4Ez
TIoLE4Z0TR1uVi0p83jbwV/N7QL5bz0O226StKi7bvTdMLM23eA741ctMnWH
rK4wYdM2c3No8no3loeZ1+3e7tn3velmWljfUZnabjE1Uo+tuCB7mCm+MiBm
Q+4JzpLYXB+Gt19vdk8b+u381mGmyKf/3Oc0N8t+WjX98Yh9ZvzNki0vFgoz
E3+efrr97m+dPbO7rY2Zs9cEPxs2os3OUFNszu6N749Z5FStGZQ4+ZeO2Tat
3eBuE0PNsAJrkn3Yb5kzeF1kdKtER0yNEzuWDP4x3MzquOdEt4LrTenCCS8D
py1wyj5bFJmxf7gZOzP8k/zH15ioldGF396yxInYkCNVhYBw8/GtohU371pr
/hpf7Yc7XZab/Nu7rajQI9zsCs3ZLjz7GpMv7bVf9/7wm6lrnFo/Jwo2nUMb
vp946kFHnx/x/u1Yq5Pbu+d94Hqf63OlX8b8OrrCjjsmoNOsqns6HHbs3xWt
WWXgnLN3zIP+K7M22XPI0edK/LnQ50q8bqI2lWKm77zlOl6fj/D4NN7jDa+r
z024Tn1uwq9Ln5vw9dHnJrzuGe/rY3bOOVMl15YQk7//oJGVojc7+lyP9295
TOjvj9rFOHNHJlmZ6XGw+eL7pvdyXdrj6PO+do3eT5eta7BJm2fW5LqZ9jv6
vG9s7piy9RKHmhp1CqRIlXGDfZ15/lcZe394u3KEw/Xo9d9Z8Z2Py80PMWPS
lpga4tlqX/+Dv3bJ/PaGELN6997rKQttsb8/LinTbED0oGBTYMbxXEeX77P+
bryz/924ELO5+zcta/62wf5+N2nRkOydXgab5E2vxTVsuuc/T17xre/WhZjr
oxYvvVhxi/19h+t//1Bgk7cCL7j887lFrhdpeNZ1Hv3eweMHeo83XKd+L+M6
5a7fO7zrMXx99PsvXx85X2e9b/l90fuT31+9P7mepJn+/f4avk/0+R3fV/r8
jtfV53c8fz7v+9PVT32uzfvkTt99dqlokVjHZJ3WptCOULOs5D/7EYscfd5d
7J1WdQ40DTNDs/zx9/Gp7Rxynqd235Khfcc/cNhDdeb15G+WeGqEmyKHtyZ+
M3ClnTfO83zWsdLyzt/ccTqdvpE88niYiezV8tDCa3PsHPKTVXPUq7g4zAwp
0HNvzI8/2jnk89+ulXnSpjBT63rYtBJ3f7ZzyAOe1plQrV+omfIgV7JTdX63
79tFxaflqJY43NTfemJbxstL//v7mDNyLK2cIcwEXMu5qnTuyfb33JQF03Tu
/UOoGf3517EL3l1mneu/d3TOF+d7HXW5p2bt+68mBbq8VqpihZtncv9e08Z7
vOE67d/HxDrlXKec50987N91Gr5uds4MXjc5X3/93PH7pZ8jft/1c8T1dPd+
313/nqrnfB+q5zxPA+/70PD9rM+1+XOhz7V5nq7enwtTeffEx51ORJi2g4fc
PvpuoP27AK1npZiztONdc8D774h50CFZcLHPnzgFQgu2b5X6rvmsUoYPhq3f
a+f88/iVHVrF7+j0yEl3tWPPuC/DTdL26wpVyvqnnf//8a/PzybPEmEig/6c
8t2DrXZuP8/TJDY48r0dYU6B8V3afhkdYdb32lwwf8q99v3M4wukT7Hwk6+D
nNyLL/T96XKEKdDvfmyi/oF2Dv++euFJEw37+/u1q/+Joif/tN67WG5P2MMI
8/3iFy2XPgu0+w+Pe9++cjgq3OQ/PTZTvxebra/8evqu1OPCTWTCsJ2lk6+z
zvPo93qeR87zyLl+/V7P9cv5+ujngq9PKe/rY/j6q/M8vpX39Tf8PqrnfD+o
5zzPeu/7wfV+0/MVPD7a+34zqzrUWFKlTqSp8e/xZ+zfs+g0fezpLZ//fb/j
3bc0vcf0CFxc1+11Si0dl35etFP8XkLDyC/vmie/R4+cXeuA/fsRPD7plN1F
lh2IcC4vWlpv2uR75kiTOtO6DzxuO8zjt3cveOr629ecZQP73U/S46458yrv
zsrJDtg+09UZnt92Buc/4D2/4fr17y+PT+Vdv8vreV8H1+up51h4fD/v62l6
TnmV/Fj/Byb3x//un5s622I3tb331Hl7V5nCZmKk6bhlQ+8UMWfs3wHh8Uka
bag1v0yMk/v4nJh99yLNhDlTt4WUPGf/rgePH93zn766fe6ROXs7xV93+XKv
G55fXeXx473nN1y/7jd4fDLv+l3+qfd1MF9OGF7t5tAo89z7eYdp0WbG8Phm
cQ792K6Wy65NjHH5kzktvj7Y4Z7L+w0u0aZX3hsuH+5113UTvOdx+UnvdV3e
xrtOc7n4ts0r7kaZjUMePl5c9Jb9OzJV9j6v/LxatOnj/VzJbB3leP6Y5vbh
B+a22LM2xuXjW11K0bf/PZdv7rX39bFh110e6HVDn+w9j8u/9l7XtX49f8Xj
t3vXbwKrbWuVtGaMueL9fND0eW9UmkEL4hx6qz9y5/9xeYzLZ5Su1i5boXsu
Dw04surQrGsuj/a667pzvOdxeTvvdV3ez7tOU3PXkEHv1Hls6ng/PzXb641q
tHBsnEN/8ir3irCBMS6v+92jN08m3nV57r05Ci785arLi3jddd1G3vO4PM57
XZf/5V2nKTp6xpPAoMem8ydNy6+YGmnfb4crlZ2WrX6s2eL93Nmke39Opnke
t6f66kWmrzLEOGVrjSyecOixyZ36Zd/gzpG2Jzy+VdoGJbbPinCOrW35rFz+
WJO/+vnvm026b3vO40OrLM6Q/9Fl1/H2/9PH8dHe4w3XY///ehzfwbsel6fx
fl2u18f+/+w4PqP39TH1tz1a9V7jJ6bAmWyd8rd/ZGbOT71g0vmnTu7IOe22
ZHpitp5dnjfNvCjbZx4/q83Sgx8HuD1j5aqjJpQOd/kPr2YELL9/weWzve5a
T3bveQzXo97y+Dne9bh8lvfrMlmu9VyztMlT87pSm7QPGsfY+4HT5f48WLz5
U/Npv+Q10rSIMVe/Trj6+mO3p1958sc6ox45iRvEXv12whPz17B3bhZJFW3v
B3j8gxwvv1hXKdQJrJ2rerk5T8ycj975/NOC0fbfdx6/4t99vzOu4/XvPo/f
6D3ecD36953HP/aux+XZvV+X6/XRv+88/rr39THNN/a581HrOBMQHdBiQsJj
06hq0Qpdhz5xWjQvm+/9WU/N1qvZf7kRGGPv83n8ipYz8mQY9NBpk3vZmqCF
T021uUGz25yMsffzPL7LwJtpGvW/4zR4fOR0qRZPzanw7Ls3toyx9/Plr9z/
+MnBp2ZZwAe/TEz72N6fN52R73pAqjjzsvmoqXW+fmzvt2t0m5wzoGicqdGz
+saa6x/bz7Po+tyK59H9Nq9r//9ErFP31fx6df/Mr7en9+s1fD11n8zj13hf
T5c39X5fzGrzqtmqXXHm4tet5rRbHGt/X7tUqsgr0/6Z2TbkRY8kS5+YKo9j
JscMjXVOpk751rPf4/5e9+4pf30Ta3//4vEBobUfND4b6fT/I/voJz3izNj2
eY/kyhxr9zFuXzj4wYE3cWZm5eN/dU7zxO5X8DwzOhRqd3vAVdfx+n2Zxy/y
Hm94Xf0ezfXr9w6e53vv+l2vj36/4PHVvK+Pqdh40YT0Z56ZnKPrrj/+2VO7
j9T+z7Ds9TrFm6h/PxePM4PCL5/9pdJjp2DfJs0mfvPMLM/1R74tl5/Y/aJ2
Dz/L8nXxeDPnp8NPmsU+tf8e8TzdP7t9rH+rCCdziSxp//zqmVnZOarL9JNP
7L9Hzeb0+e3auWcmReOdY1t2e2o78/28vp0+zBFv6sWObLjowlP785J64cU2
r+rHmzx3srbOXyTO/rzwusc+bZx4apJ9ruP1Pufxwd7jDa+r9z/Xqb7x69K/
m3x99O8jr9vH+/oYvs7aD+H3S/sbPM9X3u+XuTq5fpGka+NNXLppO7sdjrN/
x/Bmsd/Ktej23BT69zntZ+bdqCvfJt8Q7WyLOL3l413xpvT+n74afTPO/rtw
6tq+/os+em7uxq6/t/m3Z7ZvPM+Mr5MVe2tysLOrQaMFo/vFmxVleuyI6RBn
ezWzYOpqztfx5u6VqX3aDouzvaKrVzyPesX1qD9czxzvegy/Lv37wtdH+0g8
Tz7v62MatP181IA+z82+iwPvfff8mb2vONBg/Pao1Ammw5ArNz95HW//veDf
u78/Ycq4L8c/dH52Vny+ef5zcyrNoMo/fRpvO7P/QeDWFDHPTWnP2AWlg+Jt
Z9rcrDt0SYUEk3Vc8uQhtZ/bnxee/8HpLfm//OaC63i9D3l8vPd4w+uqV1yn
usSvVz3n+WO8X6/rddP9T79Bw4vnnp1gfh1zunyy4Oe2z7U+GXE3UYYXZsHD
4RHvrEzw+/fl9yUedWD2sLvO5NK91icbmGBqTZ1X6r1lz203cu8r0X/rwgTz
ev7hVnsePLfdODVw2foKexLM9w+y7pj6XoLtxuVr8ZPSBiWYReULpkv1SYJ9
345+L/eT7TcTTJqqPXJ1bJVg37d0vW95Hvu+xXXVH67TzmnB16XO8PXx93fV
j3hfH9frrH9HEuc9kbLwqBdmZvS4guNavLDdzlXxwOp5l1+Y7PGFO7V+8MJ2
oOWXX56/UfSl6VM9KqjjAP9/D3pzbL/0Xc0d1/H+/k7xX97jDa+rn1OuU/28
2/nZ9K/+Pm+T8YOqpQ/57+9Qf/XuhZACa16awvmjXyar9cr+HM0rvePqmpsv
TbuBh3vmnfXK/hwN6VVxdFDKV+ZIw9rtF1x9Zd8/BbOv39uy6CvTZNEvu/um
++/vnN699unmrdVfmc05m9ZJUeG/v3MauOmtVs+avjLx+4bHf9H0v79zumZx
yIps7V6ZnLPTnP31s//+zild7x+eR+8fXlfvH67T/h09fF16//B1UB/4uqkD
fJ3VgWbPyyz8KlWwaVjwcLNqzQ86564nqdL/j0jX58sJSy5nO7jorvP15WKb
6uy8Y9JWWfJLy8aHnba3K2Qu0y/c9fn1mSJH326fPtS5EnhzdJ/kwSYgeFm2
ND0POit+uzxwzZg7zoY58/L9kTXYDKqevHn/VwectmdM3XVJ75hf516+nPj6
HbPn1MbOK0Yecqa+ne7DUu+EmB+GZvi9zu47ptq2L6a0qnHYKdKwX/vq5cPM
2L4Bp1vvvWMS0v7z3MJhp3P+mJ+Xfx9hxhdPcb7Q0ztmYf+pR2pdOujUuJ85
y5s0keZI17vZroSGmMcjG23bPG6jE3B7X+s/bkc7exb+8N6w+iHm4ryArz5t
+JfTve2CIYMyRP/dh+mpvjgSbO6bMSfKjQx0BizO1KZM3ygnVVT86d3tg01c
5u4/Tq6y33n+fdaXH8974NzZ2Xbr6LShZvK3S1P07LHeeVzu8/WfZAt3sm4a
ENT6QIgp8ubI0VLFNjsrBwbtrpM31HkWVL7eXwtCTIMmjY5kKbnVmZx0fbnq
iYIdPgcyvuaVg5Nb3XI+yZcs/42wEHNmxV83A77a6KTNN6rT6+JXnfuFBsV1
DAg2FxNyL/yu0T5n+J7uX2ZtccP5Y1LvQbObh5gjz+9sWB2yw1mS7fvKKW9d
dJz4zk3bXgsxm+8um1b8zUbns9NX+ldaed7s+LBZq8vJQs3x2+9OPx+y3rn5
amKZxQsvm3q1Eydp1jDEPFk2um7Jj/5yokyxaodfXzRdbsauOOiEmMBKXbPP
/XyzczPkUJasc6+bwVVDg06dDTb9Lo3cVqNqoFM4RfT+UmOuGn69pat9kW/X
gNum7uRHMfN6B5tWtfoGDgze58T9nKJCteI3zcKc7TZ3/z3EROb+57mjLU7Q
tvgNs/7+fkz5asmk2tEh5qtepweVfLTBiXieftG+HmGme8q5PRP6BJvnHdNt
++7KPuezfAPTx994YLb8nPDphMYhpkm9MplHZv/LiQ+7+k7qrNFm2/g320KK
hZtsq97PtjbjCtOs0pTkQ1LFOofmJG/7Q/Mws2XhP12ubFL/GpzJdHzsvA6N
u3piRqg5uOJCiSkdf3NOZUo6ptayGKdd5QFzsv0eZs5Un5fT02W6yfDsl743
S9x3pnZpX7pukjCzccI/f6/wJ6d0UN1kreffcyavytGz/shQk6/rxj3Try53
ir2M+KjKvQjnScCDI01qh5vy/35Ot9IkrKtUdNund5wzf3576vmtMNPi1j/P
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
5Z/Gv+Wfxv8HX2waBA==
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        EdgeForm[None], Specularity[
         GrayLevel[1], 3], FaceForm[{GrayLevel[0.5], Opacity[0]}], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXf81vP3/6/X67re83qvdqRpJLL3FqWhJZWGSkRShGypSIpSRGZoqSgl
ZJaKylbIJluozJAyfo/75zy6fX9/PG7nOs/z3M/zfJ1zrtd4Nj5zaJcL0kwm
80S9TCYrWq0ik4E/VpghnC2cI0wTzhIGCMOF44TjhdnCIOE8YarQTzhDmO68
lJ/pOgYKV7tuyj8lXOW0WZafKzxoSr33Cn1d732uu7/wgHCm+/SkcKXrWiRc
IlwqPCoMM/+wcL5wAWMVLheuEB5z3suEx02R3e92aKOB5qSmUEOY47EOFh4S
hrjeuU6D7yzUEGoKnYTq5jsyv+ZbCkVCsXCiUGj+BKHAfCvLS4S2QplQLpws
qCuZSqGNkLesN30VGnp+WUfWtJdQ37KTXF+p0NqU8guFiz1fx7tcTmjnNmnv
VKG2UEfoItQyf4rHCt/V8rpCD0FqldlF6CBUefynCTtb1t7jQNbCbTL+ni5H
v7u5vp2E7qaUXyBc5H7P89oOFeabXih8mkh3henCh8JU4T7hfeEe4V7hA1Nk
nwgPuMxHznu/8LEpsokeM3Pwk/jHhMeFg4U/lbZVOFS//xLdJhySRBr8zdYP
yr+j9DuEO4V1pncJXwoPCrOFzcKjwiLhe2G+8IiwSVho2Q9OWyBsNEX2uTBT
mCW8J9ztMb8tTHHb77pNZJ8JM1xmvecM/nTrVCNhgnWaMdxinWDNx1pX0M3R
1jP06zrrMfyNXm904QbrNGWud150eYwpske8hqzxtZnYM9R1j9AnE9eFu6z3
9PFuU2STvD70b1Qm9hjlR1jP2Gd3WM/YH5OtZ+jXrR4T/PhM7FvGPMU6TZnb
nBddvt0U2UjXTXvXZGIv0d44zw3jv9Nt0u+bPB8drbMHCgdZlw8wz/Vlf/M7
oaPotVAXvcwEv3MSaeutZ0uEpUJ99ED0C9YQ3RL9SthVv78V3SA01u+vRb8R
dkEPMlGmURJ5kTVIog7KN0kiL+XR6+fcXr0k2qf87vr9nej3QnP9/kn0Z2Fv
/f4xE/ye6KvoJmFf/f5F9FdhvyTob8yFfv+RiX3VFF3PRJk9kqgbfrckxkF7
B+j3FtHfmbskKOX3T6I+ZM2SaHOz633WY3gjEzp9q/kRXs+l1iF0cFkmdHq0
xzzSsvcyoX/o5nLL0esXMqHT6PuLpuyV510fda2yfrA/VpuiFytcxxiP4Rn3
9SXL0c1XMrEnua686b6jy69l4jrFPnjdlLGtsRz9XWuK/r5lio6/m4l9xXje
ycQ+QWdfdpu097bzInvV7dPeOuel/Hea53m+Zu2VxHyz9rW5Fot+lAmbfUwm
fAL2c2OhSSb2cCPz2ODdWfNM+BRNhT0z4SPsLTTPhB+wh2VPZ8KnwE/p5/p2
zYQP0kzYKxO+xl4uf7bra+Y5phx7F/u/m9se5Hb2yYS9OUQ4NBPXpoPNc606
yPwwyw/LhD9xpHBUJvyD/TKxn/E1jrDsPNe9byZ8nF3d9mCnUeYS13d4JnyW
w12+ThJzybXgWfcd3S1NQqfRi38zoU/o4z+Z0FF47BP6jT7+Zzl6mkmCrhRy
Segc61+YhM6x5rWwnZlYy+2ug/2RJqHT6HI2CUr5JIn6kOWT6Bf6+LfL0aei
JOpGf8uT0FF0syyJvPAlSeg0Y6tIQo4+ViZB0dkaSezJ94XiJOqjTM0k0uh3
QRJjYjzVktBddL96EpTyVUnUh2yDfj9snf5WeMj8V7bVc5LwIfoJZyThL/QX
zrTd7SP0TcKnOMMy7Pcw4RLjMOFw4eIk/Ab8iHZJzAVjfcD1nSW0TmKNmcu2
ScwR+do4Df5kl2Nu7nX79O9St3NEEr7DhcJF3qtDzS9wGn3BDzhbOCcJv2CA
+WnuCzz+Sy+hdxL+RQ+hZxK+xeke/+3CaZbd5bzI7nBeys90OwOF9u4763BK
EuuH3h2XhJ6hXy2S0FHWs2USOsSaH285slOTuO6wV7qaYj+7mWJXzxP2ScIW
neD6Ct0XbAbXsHOTsGHN3b+9zHdwH9GjY5PQdfp3dBL7iv3U0XL0q3MSOsp4
TkpCp1nLTpYj6+Kx0u9WHhP5TnS/GOdRSext2jgmiXYSr+12760jk9jz5GO9
//Y1YLDHir1d6HVGF9Hp84ULhG/l+F+uYGSi6GLRK4QrhW/EXyY6gcBAQcqL
Cl5WCg3lwH+p4OErob5+fy76hTA2CT1GH2/0ujJn81XHUOFCYZzlyG5IQqcp
MyYJnYa/yeWYy4Uqc7EwTHjU9BJhpTCW+oQXhRvMvyCMMf+yMJ7+C0uFUcK1
wkvCTZatch03Cl9WRN3jRReIXuS2nxNGCCOF1c5L+SVOo955nkv21Xj3nXW+
Pok9zNhGWI/Ru2usu/Ajncaa32rdRWcnm3YXbjNlX82xHrO2XJ+GeC2vsw6h
a3MtR8Z1a5DLzLJOo+OTrH/sm1Fun711tfWb/Xez9Zh9OcFjgp/oNMrf4jro
92i3z5ivdX306QrrMXvlqiT0mDaGux3m4krLkV2ehE5T5rIkdBoe24JvhS81
xHqN38c1jNiM62ntNOJAYrt6acQ5xD110kgjzts5jbgRWd000ogLd0qDIiPm
u9Ttr0xCv9HfWmnEk7Sxymno+89JxIhPCD8mEc9Rx4tJ6Drlf7F8sVCVRnxI
XLhXGnEg5RqlYW++FvZOI40YdM80Yj/iwmZpUMo0TCOepEwD/f4iCb56GrEf
cWG1NNqBr5lGbMwYdkljbogja6SRF1nTNGJO2lvt8bEvX05Cv9GF5V5vdPx5
rzc6+GwS+o2+L7VuIXvOaej7ElNka5LQ9ds8ZvQb/X3G+kFd3zgNfV/rvNiZ
t0yxRS+5j/Tv6ST0eLjnG31CB19I4lrDeryRhO6y517xmND315PYG8hedRr6
/popsjddbrLXkrrR36eS0G/aftJp8Cs8T7S9zPPE3LFv0V9imj3SiP+Z993S
8EXwr/EjiOWIgbCjxHjEbf2dRhyGzSfGI27rZ0oZfI1t9t3QR/wPdDpJQ6fR
3z6uj/JpGmmsObp8mecum0Yac5xLg6IL2PYG7hPXJmJUYsQLPCbiM/wMYjz2
J/4EMSG2dqjlyPAtmlqGr7GH+TM9Pniufzu5DWzYoR5fD7dJXNvTlJi4lyn9
2z2NuWR+C9LoO2telMYas7bbk9Bj1udfrxn68rfT0Pe/ktBd9HqbKWXK09BL
9LEiDcp/MI3T0Gn0d2sSe4DyTdJIw8esTCMv14Jd00hj7QvT6CP9+zOJfUX5
35PQb/ZHaRp6jD7yZyDXGtY1n0Yae6s4jfGh1yVpUMqUpSGn3/95rJT/NQmd
Rn//cDu0/ZvT0PF/PB/M0Ran0acVsoXX2wY3T+O6xXWR+IH/jvl/916l9xX6
CQ8K5wqDhFnCQPP3CH2cb7bl5wl3C6dbdotwqtBVuFnoLJwiTBA6mZ/otC7C
JFPKTHX7ZwhzXPdgYaZwjvtxo9Be6CBcJhwhHClcKhxu/ibLOwrjTWn7AeFM
4SzhfqG/+RnC2W7jfGF/4QBhujDAsvvcL8pMcx3IbvVYuwm3Cd2F04S7hN6e
l5PSWGP0ok0aesA6H5vGnmd/t7YcWbs0dBedPSYNHSLfUWnsAfTioDT0AB1s
6/rK3fffvP4HpqGX5GM8W6ynl3vOqK9VGrpI/05MQ7/Zf7d7HD2EO4VeHs9k
j5Vx3iH0tGyu12qIsZ/7whruI+wrnJDGPqeNlm6Hto/zHHA9a5HGtYx8xzsN
/irPBXN2hft+tHCJcJjX/i35u7cLU4S3Te8QPhEeEKYJa4XbnO8l4SZhvPCy
6QRhtXCjZa847WbhY+F+14V/PVOYJazEzxbGCatMKf+aMFGYJHzq9qcL601n
CC8IY4QbhOXCaOF64RHhQuEi4UXLaeM94W7hHuFd4S7z64Q7zX8k3Oe+vuM5
QPahMNWy913HvcIHpsgOTkOnuC6uET/Z8/WmcKv5ccpzsvfhGOs0Oni99Rj+
aq8Va3ul14r1uzAN3aWdoWnoKPww4VCv5Q2uj31wsXCIZdwwO8BlLnIdyF71
+jDXw90mujPae48+NZXsB9GNwhv6fYvH87rXB34P4fs08u2u39+lwY+07rI/
RlhH4a/z/qGNse4v83Kt9RvZNe4LZUa5jpbu91bbLsb2l20X+/If27pd1Ydv
xW8QdkKPRT8VdstGGv1rrN9fi34jNMkGpUxd9DWNMnXQiTT4PGspukZoRLyY
RvkK/X5L9G2hNrqSRpmybORdK5QwX8yf0FC/v0yjfH32g+gXwhbhKeFp9Eh4
VnhO+N1pzwi/CouFJ4XfTClTyH5jPYWibNDXhJ2zMe71QoNstEPb9bKR9plQ
nI289G+XbKTRp1+EJ9xeaTb6zvgrszHWd9y/EV7n1WnYGGzIC2noN/q4Kg29
R/ai01jzlabjPNZrXNejaeg016cVaewN6lqYhk4P81wMdxnm5mrz6N8jwgJh
eRp6TPkl7iN6VJWNvq8TarGH01izatlIe1eoyT5PQ1Y9G2nvCTWyQZGh3/Pd
3lLXjf4uS0O/aft5p8Gjc/NcBh18eAevOof6mvWz+Mc97z8Ki4TH0rCvxEjE
VfgTxFH4I/gT+GT4XwMtR4Y/0cgy7GhD89ihBuax7cRRxFWDXB/2Bj+D2Im4
6hRTYsQupsSjnVyOfNj4Pd0/bDt+P/EW16Nt9kPxLf62n8X17D/7d9ie7fZJ
2f/YbfzH9qbElB1M6Ss+x+5uY4Dboe1+ngP8TfyM3ZzvDKfB/+S5ZH6xt9hV
bC02mZiZWDmbDT1+SfjLesPa5rKR9rKQZEN30es0G5QyBdmQsw+3prE3KM91
E31Ef7lJzR6g/Canoe9/pKHT7IPNTmPtT/V8E+v/l8a+ovw/aeg3+wM/g/8F
iH27Oi/jwbeo7/Xu7vHxP8FpppR5KA2fA9/tYVNsxTaPG/391+3Q9nanoePz
nBdb9LfT6NMC296LhUXCJcKlwkKnDbN/0EHoaHvf3jw2spvQ3b7AyZZhw9sK
7WzL21l2jtBM2CsbvkYnobPtLnWcZlvV1fWOd5udbPfIe4pt2KnOd7vL9bC9
P0Pobz+gl9A7G74C9PRs+BythTbZ8Bd6Ot/dlvfJhr8A7ZsNfwHaLxv+0JnC
WdnwOfqbn+L2qWuq89KPac47IBv+zklue6LH0SUb/hHys4W9s3EdQfcPzoZd
QTcPzYZ+s87MHTpHPuZyk3WweTbKcU3ax9cmbMIh2aiD8idmw/Zgcw7Khh7T
xr7ZyIu92i8bFHs1yX1kro/Pxn5jb7UwZQ8dmQ39Ru8YK75FU49nT6/3EdnQ
OfIdng29hD8qG+XYK0dng7LnDsvGWMl3XDb2LW2f4DYZwzHZyMv+PtaUfAdm
wwYztuv0u5Xn/QLhAMu5n83zPdMycT95eiaeRfrUafAfOV683/e97ncZ7uvc
63jyM5ebmYl72Dy7w3M63Lfm2R2eCfrccp4/+sKU54++cV7yfek0nnXa4HI8
b8L9ZJ494jkm7kPzvALPpGw05ZmaTaY8i7TZlGeUfjTl+aOfTHn+6GdTnlHi
Hvhit/Gd2+TZli1uk/ucv5ty3/J7y+nHUM8levSV+874sUnE3PzXeK51Gt0c
ZIpucl1BL9HrgdnQafKdZzn6ONgUfRxiun827C5tsj8usa6gU8NcH/z5zst6
X+S8tNcgF/cKuH9wrdDS+nGN9Ru9vtw6jW5eYYpuYnt+9f8Ql1mnyXel5ejj
Vabo49Wm6O9I6y77b4Tbgb/Ufaeu4c5LP0Y5L/3jXuI91jnGxL7E90TGPsYf
rMhFTEgsWJkLSjxUlQtKzFSQi9iPOK8wF5R4IpeL+BBZmou4jriwJBcxAzHE
zrmI64jninJRjpgvm4u8L3lOHxRmC+W5iD/p0065iEspXy0XfSGeS3IRT9Ie
D2UR+8H/l41YEb5mLuI34rYauYgJ4avnog74WrmQE/Ptot+fZSNmrZeL/sLX
zUVMSz9q5yIvsWOdXFBkG7NhC7F7xbkYH+MvzcUcEBc+5jVj/Zdl4/rCdX2J
15h1e9S6iG7OyYZOD/a8DDLPPJ1rfl42rk3sp+esH9T1cDb0GNlc18E+eMgU
WVkuYlfmeqnbR6+fN6V/6Psst0kcjw1mz+VzMaY1nqMZlj+ZDZ1GlxdnYw/A
P5GNvQH/bDb2DH193POB7Jls6DGyp1wH++BpU2TsSfSXa/QP2Yj/mfefPL/U
h69AnEbsgo0nriPO62ZKjNjecuID/Ityl8G+Ev8Q/7UxJbbDhtV2Xd1dB/EW
vgUxA7ECdhjbhd3q4LqJMzqakg+7TrxKbNrflBgaH4L4kLgNe1PifnB9KTaP
f7CL8+Ev1DPf2+WINU83JWY9zX0kHz5FE7d9ptvE1vZxXuLjvqbk25QNXUYf
seG1PH78jprmf8yGz8e8/+y5Z53/FVZkYx9+kw39Q+++zoZOw3P/dbb5by1H
Zze7Terdlg29RB+/z0bsxHpvcF50/ztTZJ29DvTvr2zsK8r/4n6hj+gy+sv+
QWfxM87xmm20n74lG/qH3v2WDZ2G/9V1wP9uOTr7dzb2M/9LbXd/4bdmY0/S
jz+cF93/0xQZsQL/0RDrPu97vNcJy4XR/j/6Iu21g4VDhAuEA4QDhaGmBwkX
W36ocKHTKDPMaYcJVwpHC8cIlwlHCEcKVwhHWXa+sL/buMTlDhdqF+i6x/VO
qFMQ9GOhbkHQT4QX9HuMcIPwoulY4Q3hFuFW4ZUK7WXR80SfER0uXCM8JVxV
ELLFwhXClcJzwghhpHC5+0tfn3U5ZE86L+XfEm4XpsB7rMcKQ4T9PLbzhH2E
fYWJwilCF2GS6anCLaZdhVtNuwmTTbsLt5meJtxu2kOYYtpTuEY4Xmgh3Cn0
EnoLd5meLtwsdHY/Xle/J3m+hos/zuUHCnsJewv9hCbCrsIZprsJ/U13F840
3UM4y7SpMMB0T+Fs02bCOaa0cbXnjLbPdZvNhUGmzN1gzx9z+qbXdrKw0ms+
TljjtNuEt70md3h9ThN6CH8Ly4TlwlrnRT5XGCwMEeagL+ZnC4PMzxeGChcK
24XnXdc84QLLHnId5wsPmyJ7VBgmXCL84/ZXCJdWhB5fxXMjhaHHjCkpDLpK
yBfGmBnffwWRn3x/FIROo5u/C0+b/806io5vE5a6r38JS8y/UxG6PlT0rYrI
e77oO56zO6HWKXToQfHnei4e8RxcJDwuXMZeER5jPObvF/oLZwpPWM4ee0m4
SRjP/Ku9G5mvihgnawj/mjDRenmfcIbrelW42bKXXccE4RVTZAuFiz3XD7j9
s4RppgOEWcJAj2eR14R+L/CYKD9DOFs4R7hL6C2c7nnpZZ556ml+qtDPfZ3p
crRxr9DXsrtdRx/hHlNkEzS/nbwnxwsdzd8kdDD/o7BIeEyY6j3JXrxX6Gt+
k7BQeFTYKCww/5PLPS78bPqE8IPwiPPdI/RxXX8Iz3DNE35x3sXCr6ZPCr8L
Tztf21z4dvjR7Uzx8Vvmwv/GPz0xF348fPtc+P34+yfkwtcv9HUHHz3n61fO
Mq5ZPEfVSDgpF74+fm6bXPiFtH2y26TeVm6TfK2dN++5pE38+t88jqeEPz3W
55CzN0TXCduEpcLzwl/CEvPVCkL+rlBLvz/Iha2qqd/v54KvXhDy94R/hOXC
CmGr26Gu/4QXhBeFGgWRl/L/Oi+yLe4jc/21MEeYK3xj+pCwXpguzBA2CA8L
84Tvhfle40+Fac6H7XzA/GcuN1P43HSW8J3roPxXwmy3/a3bpI0vnPdB4UtT
8pUWhg3mmtXR800MhL0iNiPWwd5vsV+DT/G7fRZsVAOvN7YTf4h8+Bd/2JfB
z/jT/g4+yFb7X9jqf+wP9rG+NM6FzfjVvhW+yV/29bDr5CWGw+/YZn/qbusc
ddyQC/1Gr0flQo/R6+usZ+jjtU6DH5EL3UWvR5pSpq/7gh0d7XLo5rhc6C57
Yqzbgb/ecnR8jCn9uNF50eUenkviSHym7fYNsZO/2H/ExhOXEnd2MSWmxNYS
P7PfuO7UcL5TLSfW7GpKPNrNlPi4p9vkeUbsduK6Onmdqau787LevZyXdcXn
Y76JofGVMi6PX7DRcQBz9I39dHyNb+2D4wv8ZN+fufza/j4+yAb75vgg39l/
xweBErfhZ2x2DIHfscm+P77Fz/bZ8VPISz/wQchLe2WFYXvxF9bZVl0mWl4Y
afiA95RKX4S+pfHcx29+NqR6meZF6FgWz1b94mc88Cf2Efa1TW1uHpu0t3n8
hgOEA4VqrqNDWfgU+1s22HXsVxB+x36WYcMOEQ4VaqhMZ/ejpnCK+VpCF/O1
hVPN1xG6mi8T2gpthHKhnfm801oLJcJJQiuhyn1sL1SanixUmFK+1OUoUyS0
FE4UGgt9hT5lYTv38lwM9RwcZDt9uHCE7fZh5rG7uwq72f9AfiTzqXXqwDxV
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
NBZ6CrsI9YXThJ2FekIPU2QHCr/TnnC6fjd0+d5CA/OFwislce08QL+3lESZ
PyuDL1Jferkdypwq1BbqCF2EWua7Oq2u0F/YTdhdGCLsJ+wvnCvsLTQXBgv7
WjbIafsI55kiO0PY1XV1F3byOAuEl0ui393cJrKfKiN/WhXvUjJPTYR/quIa
sV7yotIYK3bjv6qwDZ8p/W+unSVhoxLlWVkS9mF7VdibT5SnqjRsJDawWmlQ
rmfVS4NyrdqjNOzZD0Kz0rB/XF+3c611G19Vhv37uTLmCDtKGcaJHYUfqN97
eb62iV/q8luF54QlQnlp2DPsUkVpUOx2qX6/URJ2KV8aFPtWVhqUMpWlkZfx
pKUx1tVe+6eFZ9B3t7PUOkTaswIHHb5YEnP0p9Po06+VMeac5uxMrz/zcZZp
U2GKfOgeQk/hDtNewp2mvYUJQiehs3Cz6SnCeKGjZTcK7YUOwi3CqUJXYbow
QDhbmOhyXYSbnLej46dzhUHC7cRR7tM04SyXv8t9OV0YJ5zs9sYK7czfILQ1
f6/QV+gn3CP0MX+364CfavkZwkzhHGGgMMP9hX9AONP9uM95+wv3myJDL9Ap
fIpJHh/jv9Vz0E0orhY6/R3PzpTG+rFWB5cGRY/y1WLtNyrP0aL/eW2PZM/o
979c+0uDIhvgNdxTOF7IstZCZ6GGUFPoWBp7gz3RyRTZbepTd891h9LYS+Rr
Wxp6iS6XV4v9uVn9aa7fC9nb0qXJHhPlT/D+57rVSigWSoSTTNH91qbo/sml
sTfQ93ZuB76F+05dbZyXfrR33ipfe/Bl2ZPf8j+v6G+VsSeZ+5+EazwX1Fen
WvQvUZ9vdF2M9RLhMOFw4VLTI4RhwqGWVa8Wa/MX97xEj3O94zwG6rrM5Vif
i4VDXH6C55p1uFo41uVvcvusyXhT8j0iXChcJCwwpb4PhHuFqcJ8Yajzjfb8
Mq/Xed7hrxVamh/r+aWvo4QTLbvBa4zsetfBfI8xRfZ+abwDT9u1qoUu/qt5
+K0kfL6nhFtLw8Zwvb+tNOwBdm9Kadg87OFky5FNKg37hL26w3Ls2F2lYf+w
h3ebYldvd3093A/sRz8hWxV2qEr0TtdB+auEYzzX95eGzeOa91Bp2LzzhcKq
uI7XIFZwXxjDROEU92+GcLZwjjC9NPYY/OzSsIvYwzmm2My5prTxgNvk+vqw
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
M35sJDEw8eXj1sXLrcv4Sbtbx3c1/5h1mnyLrNPwT7gc+rjYFJ191LpOPr4Z
2sR1Pee1ZY896bxXCU+Z0ld8IPrFemDXiV2J3bH/UP4PwKcgPicux4fgvwB4
7D//ETA2/Av+R0CGX4i+8D8BPggUGb4M/hT+EH4H/wUQg+JTECfTNj4HbVIv
fgxtkg8fhLzk6ys9bmx7PNA2Fvs6yDZ2H9v8nYSd7VPUEmqXh89R0zy2v0Ko
tE9Q12VOdd469hfqWIYtSoWsfYUargubkRfKbI/LXW9bp5XbhlEuVx6+RnWX
x4+pEqrZ5m/UODeVhU+xQfS7svA5vi0LnrFuFv2xLHyCH8qiDH4Heb8vC38B
iqyj66a99h5rlf2PfyX/TzhCv/8W/acsfBMoMub3m7JoG3ucePzY54z538tC
77mubLFuwf9mnYP/qyyu9Uvd70XW8a3WUWR/uI5nPR7sCnbpV+s6dW22rlP+
T+el/DbXje3Fn2JM9O8nt8Oe+8X7h7qw+YVCkf0S1qRA2EX4jH1bFr5Aqdf1
BMsL7TeUWNbSdRRbb/Az8Gt+dpu0V0/p68ui3lbOS/nTrJvIvygL+4pd5Rr9
FfukLHxMZF+WxdnDD/kcTs7o5Sx5zornzN5Z5jmHmPPXOY+d84rnusxXzsvZ
71+bIuO8Xs5Z5+xxzvSd6bo415Zz6zk3nrOK73O9HzoNfo3LcTY7ZwLPcHnO
E+Ycd8545+xhzhfn/F3OVeVcec5I5+xSzu/lbPnHTJFxXvGVLvOE83Im+WJT
ZOtdN+194rHSHmca3yxMTOPs1l/8/faX/a7wBKF+eawtc8p5xbd4/JxtPMn8
YeWhT9uFg8pDL9G1A63r8M2tW6zzoeWh35Q5uDzyoteHlAdFhu1lDVnXA8pj
n1AX/v0m6/Xh5dEm+5BrGfuENl7zmOjf/uWxryi/b3noNPuD84o5M57z5Nd6
TThn/hWPm3nhTOJ7vK6czzzFZTiv+G7L1rmOu4T9yqNu2uN6+rP3EO8E85w4
7wW967yU530kvsXAc+T4gsQbh3ovzbR+f2kdxx98ozxiPGKy18sj9oN/rTxi
Rfg3LSeee1uYUh5xwEvlETcS871VHvEhslXlERMSI75sObHdaqdRZo3rIy5c
a0r5leURE1L+FZcjTn2qPGISYpQHyiPGIya7vzxiP/j7yiNWhJ9mOfHcrPKw
T8R/s8vDPp0nzCyP+BDZk+URB9LGq26T8S8uj1gU2XTXR1w4w5TyvGfQpzzs
4XPlEQcSGz1bHnEX/NDy0F10+YLy0D/4weWhQ6zzhZajvxeZor+XlodeHuF+
7+MylzkNWzHEdaCbw8pjP7CHLjGl/MWuD9kS95HY63yXo093lkdsR2x9lyl+
6zPlEQcynqe9DvBLXQfx37LyiOuI+V4sj9iYtXzecmTEjlzfuQagKz2ctqI8
Yj9ixxdMKb/c9SHj2j3Denyv55v/Ax702rKu+AHEMMQH2HViM3jsLjEbPD4E
MTB2Ap+AmJAYEf+CGA8Zfgl1EM9hY4gZiIew4cSK1IVNIo14ET+FvJTH1yCN
erHNxBjEAfgitEPMiu0n/qQu7PpDZREvYm+Izeb6OjXbPD7EI7bHm2yTscH4
F/Mt2+A6iDXxHYhhiF3wNWjzHV/Xlln2nfPO93X2ecumel7ZS/gZ9J246l/X
R5y0wDqKTj1i3YWfb12HX2g5+vi49ZX/XeZa79HZx6zfyOZYv5E9ZDm6+YTL
sQ8fdX3o9SJTyuNnEO8x1w+73AXWZXQNG47fxziI1bD5+Aj4BP95TJTHvyCe
JB7FPyBuZO3xTSiHDN+BOBAZ+lvPOj3PbTJ+6p1ufcVfoT7iRfwUKOVH+H9l
3mkhVuF/OuJh4oFjzVfLxDtRHTL/+9zf/96JOjlug/7vHSrei6pwWrt4ZPF/
aSfFXz//ez+KfI0y8c4S7x4d4vdweD+mSSbeNeLdrMamfWI6/1df23hd4H/1
8S5XsSnve/G5vROEFkKNTLxbxTtPDTLxvhPvNu2cifeseL+qvtN4j6peJt6t
QraL0+Abuo+U55M0J7qNg91f3isqcvvIqrtN5qjK88QcHeS8vBt0aCbeNWLM
h2XifSr4vTLxThTvTu2ZiXefeKcq5zEdL+ybiffczhOaOS/59nHaIGHvTLwT
RV3VtRjVhGP0e7dMvB91RuZ/R1b/r77jhOYud6553k3ifaadPE/cf9jV5Vib
pu4X73Ud67y853REJt6b4v2qw00Z24EeN+9jHeO8vEd1ZCberaJMjYr4fZSw
h+vm3bLdTen3fpl4B4zxH+D6zhf2N0VW1/3lmf06prw/VzMT78KhE63k/10n
XCu0EcYI1wsnCaMtO1EYJYwUWjov/GnC7cJtQg9hivnBwlxhjnCCy40QhggP
WdZTuMNlzhcetuwCYZ75Fi53jXCcMFy4Wugq3CrcIrQTxgo3CN2EyZZ1ESYJ
E4VTnRe+u/tLvrYux5iPFq4UrhCOd5u0d4xwlWWtPTfMy7HuC7LvfW3lWjtU
/HyP4SJhgfCIcIZwnzBVOFuYIUwX+gv3WzbAadOEM4UHLDvLafDPa822C9uE
Wpl4v5G17Oe67xVqe52RLXXevzJxrwy6lf3nftHXy5M4t+lxoZdwp9fmEmGR
8KhwntdztnCp8JhlFwsLPc5hzgs/yHkfFAYKs4SZwunC3cJdQm9T2uvrvt8j
nOO8zFEfp1HmO1/HmesN5WFL4H/w3GP3eO90pfBiJt49hb6QiXdQoSsy8X7q
KuebILwivJyJd0NfE17NxHuhpL2U+b/z5jl/nvdUl2ViHe5z2oeZeK91teu9
yeXgec/zE5fnPdflLn+z26Ft3i99R3g7E++vQt/KxHut0LWZeA91nfPx3iln
3nMOOe/hvCG8nol3Xkl7LxPvvL7u8VzvcdP2VPeX8rzj+q7rvdvl4Lm3+qbr
3XFWPWfX7zjPflMm3hl+3vo1XVgvfJqJd1s/9Zh5D/VL4YtMvMP6dSbOpZ+X
ibPtN2TivdavnG+U60NPec/1M9f7kPCt8E0m3l/dYH6u06h3kftI/2a5zc8z
8e7p926P905/E37NxDur0F8y8S7rzx4n76ducT7sP3vlz0y8B8u4N2bCJyDt
j0y8v/qD25jpNun3AudFxnutv7veZ1wO/hRfn25O4p72Gs87NpV72/gg68sj
tiGm+bQ8Yif4T8oj1oL/0n428dPX9tXw474oj/gK2Weug7jq9/KIE4gbPi6P
OI26tpRHLIfsc+el/G/lEYMhK66I+JN49IPy8PXxST8qjxiPujbbF8QH3GRf
E36j9yj8L/YdieG+tU/Jfv65PPxRZD+6DvzQrzw+xvah26S9bzxWyv/kvJT/
1XXTb94dX+v5LaqIGJIxlFTEOIizt5dHLEScpFD9f7Yfe/5necSKxI7/lEfM
QzyUVEQ8TDz9t8shw+EjvkLWwmvIu9F/eL6p63in4Vv86/qIq/4zpXxhRcTY
9HWr2ycu/MuU2K6sImJ1YvR8RfwXAF9aEWOC30W/6wjr9LugImJ+6q2siP8L
3hHKK6IO/idIK2JM/B+wze0wL9mKSON/hYqKyEv5XEWkUW9n6/IEoZPpeKGj
6U3CTrbB2OrCJHwLfIQCU2z+zkn4FuSrl4RvAb9fEj4E/sW+ptilA5Owu/gO
RUn4KNR7gNPwL/ZxXuzS/k6jroOSsIWUL03CxuP75NwXfIG67i9+R60kfAv2
bk1Txp1Pwn+ifInrwLfKJOFD4F/8lwl6lJB13fg1xc5Lv1On4V/8m4m8RwqJ
06irdhI+Df04LAk7je091BSbvHsSPgT+xW6m+CB7JOFPIDs8CVtO+b/V1hFO
w184zPVhfypEy5OwPVWilUKTJHwO7Db2ijTysc/IW5bEfivz3OwtnJuEL9A0
CV+HfjR2Hdj5vSzH/h/iceBDHWzKOjWzHB9qT1PqapiEb4FP0cj1wf+Tiflj
bLt6Duh3/SR8HfzQBi4Hv4vT0DnsYrUkxsw42nqNa3jN0XHuG/HcD8+SsJf4
743/abh3yzM6PPfB/WmeL+GZFO5t8xwSzxxxD7u7ee7jdjPPvWue4+GZI+4D
7+O6uAfey7IproPnj+4wRcY9V+5vca9siNvn2R/ub3PuHM+eDDXleYQLTXkO
4iJT/pfkfjbPIfH80TmmPH/EfdOmlnFvmftyPI/Dvevm7iv3vfc2P9Dl4M9y
Xspzz62F566O9xY6zX3frp6Luz0HPJPF/bC5vk/JfVyereEZJe7rdjC/znPP
f2Pvl8d/f9gndLO9cLJ1FErcUN1ryPVpguvjGahqTutgvW/nta9yGnVxf7uv
55p7yDx7tOOMxPbuE/eheVZsx9mMp3ps93hMlOf+9CnOxz1snjfacX4jlOeJ
uL/d2rId5z7S3s3uL+VHWQfRs+usazzrNNqU8tzP5L49/1/g5zF+xorPwR7l
+kds97ywNIk4Z7mwLIk46UXhhSRiwmXOR/z2NteJJGKGd8zj068zT4zxvfBd
EvHTCtdLvPet8E0S8RLyDUnEfhssI0b5weVHuV9LkogLnxOeTSK2e0N4PYm4
bg1jEsYJq4SVScSEbzrf7e7v2iRix5Ue2xiPj/5d47qfSSJ+XeL2iPeeSuL8
2+GWP51ELPi0Zbe5bvpBXLTRYyC+4lzcn5KIbT4T1icR430sfJRE3PO5ZcR8
nwqfJBEXrjfP9YyY7bIk4tXFScRvJ3vMjOkBl/vY+nqjZZe5H8Rv6PJNlhGz
bXJf73NfPkwi7npPeDeJ2G6z8z3mcfyYRDzPGn6dREz4o/PNcdpXScSC0C+T
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
a46shftFXw90OWz+/tmw69jzVtnwG/AvjvJ64gedlA0/A9mJ2fClGGdL54Vv
LVzvfEe6HGPex/OLvhzgNmlv32z4FsgO99wwL/u5L8g25yI+biZ8n4v53l3Y
oN+7FUSsS5zZOBfnQrNOhaIFuVg/aC4XulgqWpKL9SvKRT50ukw0nwudhZKP
PVAhWp4L3YeSD72pzIUMParKBY/OUndxLnQEShvoXbVc5EN3dxbdKRd2BVo3
F/YGWicXulsvF/mIsRsS5+fCL6wpWiMXtoi0+rnQ8eq5aKOJ0E/om4s9QV5k
7IldclEv+4Zy8Lvm4kxkyuyWi/OF4TmfmDOSOa+Y83g5l5czezlHmbOWOVeZ
84dnmOds3gedb8cZvfCc0TvHPOc3c64z5zlz1i/nNHP27zmum7oGO40ynJnM
2cmcHX2+y1EGH7lWLuZiqOXUy1m+nOnLGeCc6/yEx8A5ypzxzLnKl3pMi3Jx
bvRi59tx/jQ8508/ZX6E6+PcYM405mxjzq/m3OYF7t/VTqPMxW4H2TUuRxnO
GF7q/uHv187FGLj2oJvZXOhXO6FtLnSwjdBa+DYb69TEa9xR6JAL3WopnJgL
vWzrMujlya6L/2Ao19hAL/rkQl/bO1+V64MvdH0n5EJ/W7mNUvflpFzsMeo4
PRc61FPokQvdgp7msXURTsmF/pK3dy70rpfLNHAafInrpj3+W2rkcuhuJ4+5
puvrnAu97mwZceCfwh/ZiGOhv2cjfoVuyUb8tFH4IRsxDfT7bMQ20O+yEddt
cj7ioZ+Fn7IRJ/0q/JKNGIm0H7NhM1i3NBcxEOvEfBP7kZbkIl7c7HoXuRw8
MRJ7HT0gltrg8k+4Hdomrtsm/JWNeBW6NRtx7FaPmbhuu/MR2/2/ps477svx
/f/Ufb/3+31ddxPZGdFACe2p0BINe2SnbNmJKCFCw2iRCmVmS8uelZFsskL2
pvR7PX/Hy+Pz/eP1OK5z7+s8zvM4ruvgo4GNtePcTrt/qR3nPfz+rR3nwl/c
nnluN2VzdqW+pOe8uN75LnW6DbXDBvkiz+P/bL3jxrY3NsJXeg6OqQq74fuZ
XuFxw074eM8j/EZ7jlzvsH2d72Weg6yZSz3OpLvWc3SccJXn91iX18P5kf7g
qrAzfr3nKTbPb/EchGLvfFBV2AO/0fN1ot3dXT5lD3T4DZ7XkxyPuTvZbubu
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
uCvmXvhpU+r6pOvIHgv/xL0NvAJnyPVOw1mO9m0i/JUGX7I2ifMifvAm69Pg
Xb5Nghe733kha/1MWCM0qglZ0WZp3BvV1XqtU/adi2hSjjuYmnK4uachHDdn
aPaEf0txB1avHOm5l9ngsV/qcNzcn9UvRzzusxqUw80ZHvne5uWQ/fT2WqmY
8r4pm/JuQPb7DX1fivujSjn2AO7JGpYjX+7mNiuHm3sm2kE87u0ohzDk9q39
npvv/NaWQr7Eu5v9DVkN+xN7F/Lgr4QvSyHzhn5RCln35+5T5Kaf+r0zz/mR
Zrb7m7DNi7Efk+/9nuPflkJONdhhyJzYO3n3p34v0C91XC/2YWRd/V3X+5wH
/VLjcNLUdx7Ea1YMfoF324NeT6yxhm4f5THX4UGQFaxL4py1MY33Cn7IH24T
VgvvCNtUVFehfiXuqu4V5vsuCjrPd1LQe4TtFG8roU4l7mjvF+7zXdd9Ts89
7gMOexb+RXE3EZ5jv62E+ynGT/hDWCj8ZfdU5pbrt0TYIKxnrsK/sIcLz5Qj
P9xL7Ue85+E1KlHG03r+2/kiS3nQdRrudtxdDjnG7cLMcshA7rAbGckcYXY5
ZC13CXPLIQ/B785yyD9IN6McMhL8ZpVDpjLLeSHbeUR4uByyEeJOL4e8ZJrb
ep7DF5RDlvOQ6zrCfriRKT3qvIa57tTpaOfBeB7rvMl3qOtLG5BNPeb0i92X
/wgvCFWV6C/q9YHwvvOAvue83vN40NYPHY8++shu6vGF8Lnb/Ynwsdv/sePN
dfhn7vuvhC/d7p+EHz023wnr3P7v7ab9P9hNG34Rfi7HfFzrvGjfrw5b4Px+
cH/97DIWud1/u/++dL0Zt09d7w6IrNQfHUVfljvLf8Y93zevRNgb8k9EK0LD
Sjy/Kb+V5fArCy/quboS/ftSOfLAPcd9sEZYUY64JeF1PRdFC5WYX2tcp8eF
39y2J4Tf7X6yHOsG92vlSJcXlpcjP/J6Rc+5SrTh1XKE477fffxtOeQ0j7v/
kMESj3QDFO9AYb9K8KH3FOO+qYvc+/PvP+H9JPTkf02DB50vzBO6KuwA+rAS
PN0jwsPFyO8Q/jctHFoJmwMLRQcKfXgnqM8PFu0n9BS6O25nob3d+/DPP6Gb
sLfj9rL7QMfvbjf+nYSD+KeS0EPo77L2NXimTdiP4D/H2HTAvgP/LcbWwxGV
sD+wSLRtJdq2l3BMJewbLBMdUgkbCM9Wgq9dKiyB56yEzYSnK2Hzgv/YPy96
bCXsIzxTCTsR/IMZuxVHVsLewWLRoyph32BJJWxP8C9lbExgb4J/NWOTAl77
MeHRYtiw4D+0b1aCP31OeBb+sxK2EpZWwj4F/xV/sRI8+DLX9WLPLeYB/TnY
fccz4/F2OeTqL/qdcbUp79pxprzXkVXyzuVdfpnXG27k5294fVziuUt5lzou
+8BIU8ImOi7rAxn/Sy77Os9N1uV4U8ImeA0wd9EveN1uZP/L7UaP4E3Xg3vY
t+y+yeUQj/nDvE8rofPI3riqHLJb9hj2ov08z7p7Lh/o+H08t5jDfT3n2vt5
kNdDD8/Dro4/0GtpkP2Jj8x7sftusMeA/q8rWo/1tEnIz+lv9tXRrhdpxtqP
vRGZ8zLXe4z9cPd0nqyP8zaJfMlzi0o8t9sk9vyvy/FuZS//xu77/M7A/Wgl
/j31dyXmGP/BX+I5zH/eF3kO8/935vMCYZ3i/+W1w7/1mZP7lEInBh26e+T+
OhM2YuZW4r89P3gN8r/1p/3e4P/y2H/A/gv/18R2TIdS6IShC9beFJ0ybNDw
z7fvRJ+shG2afyuxNvlvO++fxythm2Y97Xc6dMewBcN/O7Ev06YUumXUlfXO
v/hZvwcl8U+nq9I4w7/J+Qw+LIn/KV2dxr3IcuF13glJ/HPpBsup+TfUlXoe
aDnvtWmcUd9yXtjZQb/3+0rc46wUVhTjzuUNu9u6vtRvfiX+TfQz/aewHeW3
g/BAJf4b9rvoV8Xwa1wK2Tr/Yhqrcg+oiX868W+nL4sRvr1wSBL/fbqOu69S
6IfR111LoVeE3u7gUsjjkY0fUgrZMG5s9/CfXez4HFoK+TFhPUoht0b3k39f
8O/KL1lXpdDFRAdqX4fj3qMUOp3oqx5WCrny/8+rEv/D/IJ5VQpZOzL/Qa4L
MmTsc2Db4Fm/e7HlwHv72FLoE5Dm8FLIsMn3iFLI4HEfWQr9ANzYJ+I/t5/Q
h56r00RblkJXlfphV4j/vGI/aK9S6Kei79nNbaK/OpdC7w19uk6m9OmepdCR
RTd2b68J0ndxH5NmN2FYKXR1dy2FDig6tk1KIZM+vhT2j/hf9Grq4vLJt5Xz
pq4tnAd6vs1N0eHdxfmRV9NS6JJSRjOH4+6cxL/pLknjPnKF53e3JP5Bd6nl
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
TThjyR02Y8g9Nmcz8iD9/wPjoE3u
             "]], Polygon3DBox[CompressedData["
1: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
eduDFVnEfMZ+xsTD8d/H/5jY8JNy6BHGeMZ6bRpDTzDnN/c3R7wmCz7wONqO
TfyfMZ2xnTH1iCz4Qdt6Jz3EMenY7F0KvUf9YpvGyNHk3+WbHKuOEceKfWLf
9Eh8nX1sXx+Z+NW38d+QGygHX/gu/jvY75aDD1Rf8lnu4epFn+KvTV+sA57K
Qq/x3Y5Jeoj8bB/s4xP/+gu4knOvks/JQt84mrajEv8qH6t9ZOLP5NO0eyW+
T/5P2xjaWFo+tx/2iUkvke/1WcclPlU9xbYTEl/nmHfsj07fR36zb2O8o/yx
/J7n9k18pzmuuW7/xL+r9/jbjk56jHPauT02fR/5es/tl/hl9SO/td9EPUl+
c3IlYnz5T/liY3ljfGN9cwRzhWVJf3EPdC90j7ko7Z9ytWpwanHyk+YSzRqD
X5Rv1DZHMFdQz/FeS5O+Y05hbvFd0mPky+8qxhyUL/4BlGnbG6xRi/3KuTYB
rG9MmoftnuXe5Zx0bt6Z+E/5Zfn9+xPfLT8t139f4pvlSz3XZ8rPf5rimc6J
fzZnMHd4LPHB8sPakxMfLP//DfbXiZ9XX/K3LE76kHqR9reJj5evX1SJa9QL
5OttW5T4e/l+77Uw8cfyydpfJf5XPlj7y8QPyxdrmxObG6tndSxGzmLuYkxt
bL1DMfSr741vGesjwLtZ6E07FuMa9S/56umVyBHlp82pza2nJ/5aPcx7eY36
lDGgseDEYuhf5jvDG+IZ73D/H42PsC+Q78VfmQeXIWcgdyBnK3drzj8vC85Q
7lDO4JUsOAm5CXN89Uv137MrkdOp38ppyW3JOczJgqOQq/Ac9WFzBnMHYwD1
Kdd8tXo1e/eCJbQ/7Voh/5xFzmHu4R6sPieHIZfhOQuy0PealWIPV980hzCX
8Jh6nzmEuYQavnrbz3ncexZ4Pws9We7inkroy8ZIxkqv1kX8Yz4/H/utuuAn
zU9fx36jLvZD90ftN+sifzWf1fYa83/niHNFTkd9Vb7TexnzGPuob/tsOSO5
I/XbwZXQvNRf5YzkjjymnjsDNGWtXS3tB+rX5v5yUHJRxm+++9y6iNeM37Tn
1UW8Zvym/VpdxGfGa9r+JvPtn/Lom5lpfDg+pzdEzuz4+cF3aIhjjlfrH4yV
zEHNReX05PbkuNRjrL/4qyE4LusR5ADlAv9K9RjmRGq1arbmStY/qKWpqam/
L8Q/gHO7pfGnPm+bMb2xvZyd3J1rknqg7+/YvjB9X7+39kVpPC3Dvwz7cvWD
LMabbRen8aTebixuDr1fmh9TaHscLMyivmPLSnCCcoPGhMaGC4pRr7AI/1DO
PSzNH/U4c3FjJGMlOTq5upfT/ibnL/ffM+2PcnJyc8+n93O++i3s8/eyqEdQ
vzNGsv7EmNXY1WPWJxhTG1ur4VnPYn2Ltvqg9SXWGxiLbFcJPd16C9/dGKpN
+r6uReen56m/e+62lagv+ZL2fWjrmua39SveWw3SehbrUTxXjlSuVD3etcic
z9zPmM7YzjVfPdJ6CWOpWcWoT1HvcGwb48rvyW/n5YiB5ffkvzcsR84hnya/
3aIcHJ/8oPx5q3JwdPKJ6kelcsS08o/y93uV45h6knx5YzlicPlI+fpe5XiG
/Lr8e+9yPEP+XL3k7nJw6OoF6h23lOMc+Xn1k9ux+yT9QP1hJvYFSe9QL+ha
jmfKz6tRqFWcm/QT9YZu5fjN8vnqA13KMeed+9bz2FfmKOYq6nlqG2p0anXq
c2pjw5Kepv6nFqimpramRqdW1yHpeep1jtVmSS9TE1AbUHNRX1Lf6tEQMZyx
nJqf2p8akPqbGpBa0CVJf1EjUiu6Iukz6iHGimOT/qP+4dhpTHqdGqBaYJOk
h6lXOdfzpH+pWapdqumoZ6onea9eSU9R//HZXZP+Ir9uLYKasNqw/PXohpiT
zk35cmPLHkmvk+OW61YjVW9Uz1TrnJjid/l5azGsqbK2Sr3Svp2S+HXXBNeG
JUkPMP732u+SXmANlbVUrhlLs8g3rSWyJsfaHPUQtWtjXmNf9QhrG0Ynvl0+
Xi3066RHqKdYy+Ya5lqmHmZfd0v6lPGZtTzWSFgrYc2ItSMDkh6hHuBa5xx2
LqvfOfa6JP1JfUhtUU1MbUw9zLHcKulR6neO5b2S/qWe4FrqGu1abT7UshI1
Veoh6gFq7dY8WfukHmJtkjUodUnvsBbKGiRrkeSH1fqtCbM2TL3D2jJrXqx9
sabO2rqtUn+q19g3LVP+ZQ2VtVRtU76lHuzYNscy11J/Vns1JlKPVi9Uu1Qz
Vzs3xzPXO7cY+r+avtp+88THW78wnLbzilHfYL2A53rMegb5AmvXrCmytsia
QGsDVyU+QY5GruYY2nrnoenI/6qpqK1Y42Wt1/LEB8lhyWXJ2cqDWvNm7dt9
SW+x3sJ3GVGM+gk5UrlSNTL1GTWuZSnH3T9pZmpnw9KzPVcu+Ow8rlHf26cW
nLHcsfU5pxQjpza3Nh8fn/Yba0nkPOUv5chvqIY+YS2XNRzWcqhfWBtnDZm1
ZPLQHbPIsc21rf/w3c2pza2t/zm5GM+0HkiOS65Ljkuuy5oZa2c+SvqG+r9r
iTmpuan1htZvyKnJralHWhtlzZm1Z+rXasXWEFhLYD2jtR5eY32i9RAflGMN
V/9WLze3vSXp2X6zKSm/8luq31gLZw2JtSTWVFhbMTPpzdZTmNu7Z8xPv8Fr
5RT8berratnWBFgbYD2AubLvYD2GepPajBqZWpn1UwO49qRi1FOZc62XBWdo
Lma9lW32ofVT8iPWnhgTW+tpfYFr6//l7HlouGq56g1qudZAWgs5LulJ8jHW
DhmzW/sqByMX4ztYv2WNo7WOMxIf8j/c7P4M
             "]], 
            Polygon3DBox[CompressedData["
1:eJwtksdKQ0EUhgchyS5lYcECaux7u4KiKOpCcaPEQuIDGCzYsLxAEARLNImi
orGhqJgnMsaStrDhym+Ys/j4z/3/c++cmTtlU/7h6RylVDlYYNuu1L1VqRP0
HT4gAmE4gBuyBBqHZwjCA94Ouiv1GZqElO6Ha8jCG9kRegkXkIFXq/n2olOp
BWh3KFVjU6rfpVQJdVq+l4Yx8jy8XBihjpJZqL/IPuEJqnn3Dj3V65PH0B/4
BRu9MTw36uV9HxzrWfEe7eY739AmM0yiQXr2YRYq8FrwGqEJRvUcECBzSzbE
3IOwhVeJ10fdiV9H7UMj+Ieyz1o8LxriOQwr8Mf653az7w6HObcq+m7l3K7k
HNJy9o/0FdM3h5egDuFFoZd1G/DrwU8WJyuknpe5Wql7XKavWfYzQ/ZCX5HD
/LukzJKS+7BMvuQ0+9GzD/DuBM/jUIqXkVl0naXuRtfJNpzmX+q8C13leQ08
sp6eKx8KYAw8sCnnrecM6PtB357cOX33/gGdQ2I4
             "]]},
           Annotation[#, "Charting`Private`Tag$5496#1"]& ]],
         Lighting->None]}, {}, {}, {}, {}}, {
       {Opacity[0], Line3DBox[CompressedData["
1:eJwl1Hloz3EYB/DHbGxsczPMMbbZnBsb5pxy84f7KApRlLMoiqL4j6IoiqIo
iqIoiuI/iqIcm/ua+z6HOV7f/PH6fX71/I7v8zzv7zdvwYopy+tFRAcv07Mj
kveTnaOooBd5NGeo2jpO8ZFePryEQzyiQ0rEbHZxjaz6EePYwgV+U5EasYYT
vKU4LWIRB7hH2waugx1cIaOha2ET5/hBeXrEKo7xkoKMiPnso5pWjfTANi6R
1jhiBBs4w1dKMyOWcYQa8rIi5rKH1nrtRj+GM4GZ3FCb6hzDYPrQlfbcVLtF
FdXc5g53ucd9HvCQRzzmCU+p4RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb36nl
Bz/5RR2/+cNfItkxKdQnlTQa0JB0MmhEYzLJIpsm5FBEGZVMZBZNmcZYhlBC
Prlc97+7mUPnpGfzPsxSSvhiH6dZTyWpXLS3rUyiJVX2upd55PPC3o+ykjJq
5eIsGxlJOpflZzvTyOGufO1nIUW8kb/jrGYgdfJ5ns2MJZOrcryTWeTyUM4P
spiefDDSk6ylpV4L6cswxjMjmYfaFOdoBtGbLrRLcqQ2iAoGMoD+lFNGP/pS
Sgl96J3ce/SkB90ppohuFFJAPl3pQh6d6UTH5H4nl/a0oy05tKE1rZJ+aEFz
mtGUJv8jFEmUrC6sKqwnrCSsIYw9jDqMN4w0jDBSkt/3pQJKk+cI47L/P2/+
ARY2fu8=
         "]]}, {}, {}, 
       {RGBColor[0.660575, 0.34859799999999996`, 0.3474215], Thickness[0.003],
         Line3DBox[CompressedData["
1:eJwl0LtKAlAAANDrD/gPfZJtPdS0TO255WKC1arSZNLcY2kIIgnT3llbgZBb
DdIUNjQIRdCBhvMDZyy9Or4SCSHEaEVDmOSeDHfM80CeLgs8sswzBdYpsckW
NbZpsMsBnxxyRJMfzvjlhC+OGXHKN/t8sMeQHQbUeafKKxXe2OCFMn2K9Fjj
iSUWyZFljlluSXNDimtmuCLJJQkuiNNhmjZTnDMR/f/7AywkOds=
         "]], 
        Line3DBox[{3786, 3695, 3795, 3704, 3794, 3705, 3797, 3711, 3801, 3717,
          3728, 3730, 3738, 3740, 3753, 3758, 3768, 3836, 3770, 3838, 3765, 
         3828, 3762, 3832, 3747, 3818, 3746, 3821, 3734, 3811, 3733, 3813, 
         3724, 3806, 3712, 3798, 3707, 3706, 3701, 3700, 3791, 3699, 3790, 
         3698, 3789, 3697, 3788, 3696, 3787, 3694, 3786}], 
        Line3DBox[{3802, 3719, 3809, 3731, 3815, 3741, 3754, 3824, 3755, 3825,
          3759, 3829, 3763, 3833, 3748, 3819, 3732, 3810, 3723, 3722, 3805, 
         3721, 3804, 3720, 3803, 3718, 3802}], 
        Line3DBox[{3816, 3743, 3756, 3826, 3760, 3830, 3745, 3744, 3817, 3742,
          3816}]}, 
       {RGBColor[0.433786, 0.670834, 0.793785], Thickness[0.003], 
        Line3DBox[CompressedData["
1:eJwl00lsjGEYwPFvaqdmWgdL2qq6KG21uui+t7pqq1wQEWKXcEDQxIm64WQ7
qZPlRpDQg+WmQeJmOeCGWI5u6vfE4T+/eb5ZMt/7vlO0++jokVSSJB+1IcdD
Jkk2M4ejzHATF3KEaR5gGfezhPtYynEO8RyHeZOHOMHDvMsx3ud5TvIin/AS
X/AapzjB27qjD+ZHfKbn+m5+w8/6ol/6rSzXZ8Rv19LcJMnlIi3XSnMhV2it
KszlXMeKUOsjcy1rWcc61rOeDWxgIxvZxCY2s5ktbGErW9nGNraznR3sYCc7
2cUudrObVaxkJatYzWrWsIalse4siXtgGcuZz0Lmxf2xgEXMcDHTXMIUs5nE
fvKnNfvr+Q9O8xP/8DW/8hW/8WmsMx/yHR/wPW/xLW/wJa/yii7osXmc93ia
p3Qwzo42alBnvTbANVqtveZi7uEqZmuBhs3zOcR58XnOje/gbA5wDnfFPnNn
rAd3MJ/bWcAzsR8c46D7P8l+noh9dP06t5gvc4R96tVxcw+PxTnwvjwt07Y4
Z9wa68xZmqn+OIfsYxZ7mWIPp9P//2f/AAbkXQg=
         "]], 
        Line3DBox[CompressedData["
1:eJwl0j1IVlEYwPEjlFBqavn5ppLp+/pRlFMIEQ2CWA2VfQmFhJGSilGDEglC
hTY0FBQYiKJDkOnkYEMJ5hI4FC5Oatgg1FJBTpn9Dg1/fve5nOHch1vedru5
Jy2EMK2LOSHszQ6hi3Xs5BHe4lE+ZjOHeI6DPM8JdnOK9/mG/ZzhEN/xKRf4
kosc5xInOau3Wjd/4Cd9jrO+6odCbgg/+Us7nNtj3sl07VOxOY8J5rNA5aow
H2QlK5hkJVNMsoopVrOKNaxmLWt4iLU8zCLuZyFLWMxSJljGzHgXZjCPWczn
X3fexS3u5jYz+J1/nPnGLa7yN1e4yUVucI5rfM8vnOEyX8U9cZQf+YLzfBL3
yUd8qD69NnewXWOeb/K0TumBuYkpJXUj7ottcX+8HnfJ1vidvMYDHGAD+3mS
93jGd/XyhHmErRzmBe+f8yyf8ar3x9Vovmuu93yHx5hQoVri/ngl7pOX4355
ibnZ///XfxkTU0s=
         "]], Line3DBox[CompressedData["
1:eJwl0c0rpVEcwPFzDQabi//AnzCGpiwUMXYWWGhqSsPSvdfGpESulZeaiFLE
wstqhqIpKUpRoilRbO5k5XXterfwebL49uk853fqnJ6yH6mmZCyEkFZncQjl
8RBG2MxhtnCRCS4wyRX2cZn9/MshbnGcu5zmP87zt/4oY73BnWhGRzrWuR7t
XfBSt4qVhJBlDu/4gfd80EezcesCFrOQJSxiKZ/M5PKReXxmPl+is3xlAa/5
5MwVn3nDF/6P7sAMszzgBfej+3GTZ1zjCVd5yiUecpZ7nOQ2R7nOQab1U93q
ULsa9DXaM1PPAdaxn7XsZTV7WMM5tnGG3znFJu+ZYCPH+M33X2xllb6oy7qS
KVYwyc9M8FP8/f+/Ad3fUM4=
         "]], Line3DBox[CompressedData["
1:eJwl0LtKwlEAwOHjE5iP4AM1GJQIQeQDZLc917IQEhy0Ju2yeFlyUKipcqkl
yxSdcrP7E/T9afjxnQucwznJbG5pIxZCSKmwEMJKPIQLbvGcOZ5xky3u8Yr7
vOYxb1nlA2tsqKmJeTfa152eNLc24Duf+cEXfnLIL77ymyP+cMxf9vnGe87Y
45Tt6Gy2OGCdjzyJ7mWJNzxgh3m2ucsdXRpvM6t1nZqvscJVlplKeCsXWWTG
+hHTPORy/P///gDmfDx+
         "]]}}},
     VertexNormals->CompressedData["
1:eJztnXl4TVf3x5FoX0IJImZqnhNRQw0RVZLUUITMhpqCSIRItKGCmGKIKTWF
mkPNjbbG1vCKGkKIvKaaawpSQ6igL7+ftW+exzqP9Z697z0n92i3fzzP5/k+
3732yl7r7HP2ufd+2Gdo1/758uTJ080+Tx6b//+/9f3txQe63d3jvuekf/6D
V1rlMf0T5W4a6z049dbiovNye0fmJbnklqx/c+tCK95Oo3kp61SN8+ahFREn
pXff5uLwmrs9C/bl4Z4m3pqTm+vPq/ewEqfiVPNpZZD4JZfcEq5W18p1LtoH
rD0vZfyifUmr/DyzWVniNT8V1t3vTZ6twtMU/DmhN9dfyXP80zn9ReMR1T8j
8mCuXnLJ3yVO1am5dWFpnepd79aa7+frD8K++kToLn9LeCeN9FpxreJX808V
9FHqtcq/5JLrWdei65ZXr3W989ZjZ537m1Z8Wkhb6NsLvs70E+HzBbmov6V8
KhEPxc2dF+U/Tyd/ySU3EuftD9aqR9H+YLR+2KCdF/TtxIzIAEu4i0Y+otxZ
Rb9a0J9Xb635Si65EXjO+l/DWRdqdapV/fKO66yRv7lcmTdKXyLjDPBzwUv9
JRfnZxXcwcTPE9xo8UsuOQ9XrnOt9XrHqaxHysdodfrwQingv6f+J0CEX1Pw
BwSnfB5oxNX8RePRal6UD28+JZfcCFy07kT7hqiPuXWkVT/Rqn55x51s6w18
zojhiE+xMp9tJR+99LEGzbPkkluTq/UfrfqAtfqPpXk4+vLrYq95rSEnA7Xg
NTXy4eVHVLgyHjU9Lzc3Hr3yILnketaXVnVN1SNvnZrrn9v1qNW4J24Wg77t
G30Z9e2TJu5nIU8z08efU39CozhFubl5452X5JK/i9xa9WguV9ZjGsHV9Lz9
QZRn3toGvHTwKfRc+p4KL8XJzfXn5Wr+vPH8IeivxkXzwJtPySXPTU6tZ9F6
VKsLS+tFax/R/mNpPBSv5zkAeMB7vgE8vL4gdzLxQEJvKReNU6v5qvn465RP
ySU3Ahdd//UJbm69UP1Br7pW6z+WzoviE1ukw3vRz7/M7/c2/ozglF4rH63G
VfJJZo4rykXHlVxyI3Nr1a9e44r2AdH6NbfPKPXuzqnQt0Pmb/Tn4Z4mHqrg
HgSnfCh9Dh8q6M8bj1bxU+OK6tXyILnk7xJXq3deLlqnlF60/4jWtei4otw3
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
      "]], {}}},
  Background->None,
  Boxed->False,
  ImageSize->400,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->Dynamic[$CellContext`vp],
  ViewVertical->Dynamic[$CellContext`vv]]], "Output",
 CellChangeTimes->{
  3.915370464728264*^9, 3.915371402123595*^9, 3.91537150552876*^9, 
   3.915379342356983*^9, 3.915379413412171*^9, 3.9153798668209553`*^9, 
   3.915380633436535*^9, 3.915380813219489*^9, 3.9153809309131536`*^9, {
   3.915381019469965*^9, 3.915381026460525*^9}, 3.9153821606890717`*^9, {
   3.915382650801001*^9, 3.9153826789561987`*^9}, {3.915382798221444*^9, 
   3.915382817264655*^9}, {3.915383226306779*^9, 3.915383256048559*^9}, 
   3.9153833048187304`*^9, 3.915383692769946*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"9b933b79-d9b4-4f3a-bf64-c7d3441b9405"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the plot as PNG (transparent background)", "Subsubsection",
 CellChangeTimes->{{3.914420683980445*^9, 
  3.914420694890698*^9}},ExpressionUUID->"338c4151-30dc-4fc9-a058-\
d49712d9d719"],

Cell["Use the following Export command to save the plot:", "Text",
 CellChangeTimes->{{3.914165764071076*^9, 3.914165771702026*^9}, 
   3.914185844576467*^9, {3.914245103566285*^9, 3.9142451618345127`*^9}, {
   3.9142457959897404`*^9, 3.9142458088477097`*^9}, {3.914419697713282*^9, 
   3.914419726590015*^9}, {3.914772994407564*^9, 3.914772994925446*^9}, {
   3.915366772569504*^9, 
   3.915366776091311*^9}},ExpressionUUID->"169bb6c1-81c3-4fb9-874c-\
462926e4a6c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", "\"\<contours\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"fname", " ", "=", " ", 
     RowBox[{"fname", "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"pick", "[", 
        RowBox[{"[", "m", "]"}], "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", 
      RowBox[{"Length", "[", "pick", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"fname", "<>", "\"\<.png\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"fname", ",", "combined", ",", 
    RowBox[{"ImageResolution", "->", "400"}], ",", " ", 
    RowBox[{"Background", "->", "None"}], ",", " ", 
    RowBox[{"PlotRangePadding", "->", "None"}], ",", " ", 
    RowBox[{"ImagePadding", "->", "None"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.914164210082346*^9, 3.914164213960557*^9}, {
   3.914165490031578*^9, 3.914165495337368*^9}, {3.9141656659041023`*^9, 
   3.914165685997884*^9}, {3.914190147565949*^9, 3.914190177542667*^9}, {
   3.914242540085004*^9, 3.914242542539768*^9}, {3.914242668765321*^9, 
   3.914242668862142*^9}, {3.9142427018397627`*^9, 3.91424272498844*^9}, {
   3.914242757367137*^9, 3.914242817782887*^9}, {3.914243072241022*^9, 
   3.914243267348186*^9}, {3.914244296798274*^9, 3.9142443410150957`*^9}, {
   3.9142443880990477`*^9, 3.914244454028988*^9}, 3.914244617102988*^9, {
   3.91424476899011*^9, 3.914244769394414*^9}, {3.914245039929007*^9, 
   3.914245067387306*^9}, {3.914419499279234*^9, 3.9144195018138523`*^9}, {
   3.914419593389606*^9, 3.91441962543116*^9}, {3.915366762547799*^9, 
   3.915366762992525*^9}, {3.915379370431733*^9, 3.915379372591853*^9}, {
   3.91538364967043*^9, 
   3.915383650778513*^9}},ExpressionUUID->"b0b8b407-ec23-4895-8742-\
5e5bdf9a4baa"],

Cell[BoxData["\<\"contours-1.png\"\>"], "Output",
 CellChangeTimes->{{3.915379355677186*^9, 3.915379373371529*^9}, 
   3.915383139823827*^9, 3.915383260013603*^9, 3.915383309592441*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"f79a8988-c47a-4675-8f27-69610c3ff6f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1062.75, 1024.5},
WindowMargins->{{Automatic, 441.75}, {-6, Automatic}},
DockedCells->{},
ShowCellTags->True,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5417a6d3-1cb0-447c-b771-c661a424c523"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "make-contours"->{
  Cell[33313, 808, 43226, 897, 2703, "Input",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2",
   CellTags->"make-contours"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"make-contours", 194451, 3745}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 8, 68, "Section",ExpressionUUID->"9f8841a8-8249-4f47-9d55-d95cc146c0e1"],
Cell[CellGroupData[{
Cell[1062, 34, 190, 3, 45, "Subsubsection",ExpressionUUID->"519384ab-5ac3-490a-ad9d-5bb2de8040a7"],
Cell[1255, 39, 1671, 26, 403, "Text",ExpressionUUID->"014379ae-42bf-4be7-bb3c-9629767445a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[2963, 70, 294, 5, 37, "Subsubsection",ExpressionUUID->"94e934e5-f4d3-4966-865f-84d12904cdeb"],
Cell[3260, 77, 4410, 100, 417, "Input",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7707, 182, 710, 12, 37, "Subsubsection",ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-7e8276321f48"],
Cell[CellGroupData[{
Cell[8442, 198, 1369, 30, 92, "Input",ExpressionUUID->"27727f97-7dd2-4d31-a480-915518d89fa6"],
Cell[9814, 230, 912, 27, 62, "Output",ExpressionUUID->"3cc085d3-b204-436d-b078-83f6e607b940"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10775, 263, 221, 4, 45, "Subsubsection",ExpressionUUID->"75efccdb-433b-44b3-bce7-04474ffb7b28"],
Cell[10999, 269, 1013, 17, 104, "Text",ExpressionUUID->"1a733974-8874-4389-ae0e-5d50ad9526c9"],
Cell[12015, 288, 2126, 36, 71, "Input",ExpressionUUID->"7c93945d-8de1-46ed-a1a4-c61b48e539fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14178, 329, 341, 6, 45, "Subsubsection",ExpressionUUID->"9c626022-0b9e-44c8-a361-6a98114ac4e3"],
Cell[14522, 337, 656, 15, 104, "Text",ExpressionUUID->"59599e13-d1cf-462b-bbe8-32509a143740"],
Cell[CellGroupData[{
Cell[15203, 356, 1212, 29, 113, "Input",ExpressionUUID->"0abb2362-608b-45fe-815c-a471151abbce"],
Cell[16418, 387, 2892, 58, 292, "Output",ExpressionUUID->"0edafa16-9b4f-434f-8643-5484231bb676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19347, 450, 831, 17, 51, "Input",ExpressionUUID->"d5124485-bfe2-49eb-b48c-48b720893e62"],
Cell[20181, 469, 2006, 61, 148, "Output",ExpressionUUID->"e6ea8916-0335-4c8c-bf3c-48f76ff808e8"]
}, Open  ]],
Cell[22202, 533, 357, 7, 35, "Text",ExpressionUUID->"c8055252-4875-42f7-b31f-d9e8aeecb6c4"],
Cell[CellGroupData[{
Cell[22584, 544, 1003, 25, 51, "Input",ExpressionUUID->"0aa3a6fb-5d26-479b-aa05-222f6112b3f9"],
Cell[23590, 571, 2088, 64, 165, "Output",ExpressionUUID->"899c891f-3949-47ec-8610-2783d6dd6c80"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25727, 641, 184, 3, 45, "Subsubsection",ExpressionUUID->"e635bf7a-668d-49ba-91ee-1e6894635051"],
Cell[25914, 646, 2885, 61, 426, "Text",ExpressionUUID->"4e4e8640-33d1-4448-8d54-e01fb24bb6cd"],
Cell[28802, 709, 4029, 83, 195, "Input",ExpressionUUID->"b27ef285-598a-4623-a18a-d795fbaa85fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32868, 797, 442, 9, 45, "Subsubsection",ExpressionUUID->"b226dcc2-666f-4203-ac2a-2c8e7321c55a"],
Cell[33313, 808, 43226, 897, 2703, "Input",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2",
 CellTags->"make-contours"]
}, Closed]],
Cell[CellGroupData[{
Cell[76576, 1710, 232, 4, 37, "Subsubsection",ExpressionUUID->"fd91ba99-4141-41a5-8a4c-9a02c7c502ae"],
Cell[76811, 1716, 392, 8, 41, "Output",ExpressionUUID->"db76cb3e-4de3-4ab2-873e-ee787b0c7771"],
Cell[CellGroupData[{
Cell[77228, 1728, 792, 20, 23, "Print",ExpressionUUID->"554622e9-4229-49ef-b23b-d50641c10e65"],
Cell[78023, 1750, 814, 21, 23, "Print",ExpressionUUID->"5df18dc8-e2b8-47a2-ac1a-75257b8369ef"],
Cell[78840, 1773, 813, 19, 23, "Print",ExpressionUUID->"fd236fb9-a1ef-420a-a630-0d40b68814cc"],
Cell[79656, 1794, 688, 15, 23, "Print",ExpressionUUID->"52bc212f-b284-41b5-98e6-19c8064d9c49"],
Cell[80347, 1811, 411, 7, 44, "Print",ExpressionUUID->"3e6254ff-4ec9-4eff-93cd-16e011d6081a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80795, 1823, 1239, 25, 71, "Input",ExpressionUUID->"9ac83f03-5ba4-4c63-9948-ab4f1efd4b57"],
Cell[82037, 1850, 109047, 1809, 322, "Output",ExpressionUUID->"9b933b79-d9b4-4f3a-bf64-c7d3441b9405"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191133, 3665, 198, 3, 45, "Subsubsection",ExpressionUUID->"338c4151-30dc-4fc9-a058-d49712d9d719"],
Cell[191334, 3670, 467, 7, 35, "Text",ExpressionUUID->"169bb6c1-81c3-4fb9-874c-462926e4a6c8"],
Cell[CellGroupData[{
Cell[191826, 3681, 1918, 40, 92, "Input",ExpressionUUID->"b0b8b407-ec23-4895-8742-5e5bdf9a4baa"],
Cell[193747, 3723, 268, 4, 33, "Output",ExpressionUUID->"f79a8988-c47a-4675-8f27-69610c3ff6f5"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

