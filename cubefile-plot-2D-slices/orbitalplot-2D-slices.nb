(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    202725,       3805]
NotebookOptionsPosition[    198512,       3720]
NotebookOutlinePosition[    199140,       3744]
CellTagsIndexPosition[    199062,       3739]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Orbital Plots in 2D Slices (Cut-Planes) from Cube Format Import\
\>", "Section",
 CellChangeTimes->{{3.897726730675234*^9, 3.897726760235175*^9}, {
  3.91416238963443*^9, 3.914162408482318*^9}, {3.914170575940013*^9, 
  3.91417059842293*^9}, {3.914773272811502*^9, 3.9147732860893097`*^9}, {
  3.9153626979562473`*^9, 3.915362699197007*^9}, {3.915362845796365*^9, 
  3.915362848798174*^9}},ExpressionUUID->"9f8841a8-8249-4f47-9d55-\
d95cc146c0e1"],

Cell[CellGroupData[{

Cell["Copyright, License, relevant Literature", "Subsubsection",
 CellChangeTimes->{{3.914773101401758*^9, 
  3.914773112368757*^9}},ExpressionUUID->"519384ab-5ac3-490a-ad9d-\
5bb2de8040a7"],

Cell[TextData[{
 "\[Copyright] 2024 Jochen Autschbach\n\nLiterature: \n\n[1] Pierpaolo \
Morgante & Jochen Autschbach, ",
 StyleBox["Molecular Orbitals",
  FontSlant->"Italic"],
 ", American Chemical Society, Washington, DC, 2023.\n\nPermission is hereby \
granted, free of charge, to any person obtaining a copy of this notebook file \
(the \[OpenCurlyDoubleQuote]Software\[CloseCurlyDoubleQuote]), to deal in the \
Software without restriction, including without limitation the rights to use, \
copy, modify, merge, publish, distribute, sublicense, and/or sell copies of \
the Software, and to permit persons to whom the Software is furnished to do \
so, subject to the following conditions:\n\nThe above copyright notice, the \
textbook reference cited above, and this permission notice shall be included \
in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS \
PROVIDED \[OpenCurlyDoubleQuote]AS IS\[CloseCurlyDoubleQuote], WITHOUT \
WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE \
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE \
FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR \
THE USE OR OTHER DEALINGS IN THE SOFTWARE."
}], "Text",
 CellChangeTimes->{{3.874491401677493*^9, 3.874491484594095*^9}, {
  3.874491975049707*^9, 3.874491984906625*^9}, {3.914773121878868*^9, 
  3.914773123538113*^9}, {3.9147731617833443`*^9, 
  3.91477317812821*^9}},ExpressionUUID->"014379ae-42bf-4be7-bb3c-\
9629767445a6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Initialization cells", "Subsubsection",
 CellChangeTimes->{{3.897727948030819*^9, 3.897727962379978*^9}, {
   3.914418866458927*^9, 3.914418870939124*^9}, 3.914420238925591*^9, {
   3.914773239959224*^9, 
   3.914773251233214*^9}},ExpressionUUID->"94e934e5-f4d3-4966-865f-\
84d12904cdeb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.15"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<RedBlueTones\>\"", ",", "0.80"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<GreenPinkTones\>\"", ",", "0.15"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ColorData", "[", 
      RowBox[{"\"\<SolarColors\>\"", ",", "0.70"}], "]"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vp", "=", 
    RowBox[{"ViewPoint", "/.", 
     RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vv", "=", 
   RowBox[{"ViewVertical", "/.", 
    RowBox[{"Options", "[", "Graphics3D", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"customImporter", "[", "path_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"textmol", ",", "goodmol"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"mol", "=", 
       RowBox[{"Import", "[", 
        RowBox[{"path", ",", "\"\<Molecule\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"textmol", "=", 
       RowBox[{"ToString", "[", 
        RowBox[{"InputForm", "[", "mol", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"goodmol", "=", 
       RowBox[{"ToExpression", "@", 
        RowBox[{"StringReplace", "[", 
         RowBox[{"textmol", ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "\"\<\\\"Double\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Triple\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
            "\"\<\\\"Aromatic\\\"\>\"", "->", "\"\<\\\"Single\\\"\>\""}], ",", 
            RowBox[{
             RowBox[{"\"\<]\>\"", " ", "~~", " ", "EndOfString"}], " ", "->", 
             " ", "\"\<, ValenceFilling->None]\>\""}]}], "}"}]}], "]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "goodmol", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"(*", " ", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Create contours (may take a while...) \>\"", ",", 
     RowBox[{"NotebookEvaluate", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
       RowBox[{"EvaluationElements", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Tags\>\"", "\[Rule]", 
          RowBox[{"{", "\"\<make-contours\>\"", "}"}]}], "}"}]}]}], "]"}], 
     ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Queued\>\""}]}], "]"}], "  ", 
   "*)"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.793798633045143*^9, 3.793798633638342*^9}, 
   3.7937990332118587`*^9, {3.793799423835637*^9, 3.793799424429448*^9}, {
   3.793812876199871*^9, 3.793812900248032*^9}, {3.793976150994787*^9, 
   3.793976165907461*^9}, {3.794059191446529*^9, 3.794059194288357*^9}, {
   3.864745050559181*^9, 3.864745067185685*^9}, {3.864808832517955*^9, 
   3.864808834174582*^9}, {3.914165312024158*^9, 3.914165327972855*^9}, {
   3.914165379930373*^9, 3.91416539992756*^9}, {3.914165607973052*^9, 
   3.914165615118895*^9}, {3.914174052076466*^9, 3.914174065044384*^9}, {
   3.914187579686805*^9, 3.914187585540912*^9}, {3.9141882653084583`*^9, 
   3.914188269047246*^9}, {3.914241946626474*^9, 3.9142419570866413`*^9}, {
   3.914242521536366*^9, 3.9142425240892563`*^9}, {3.914242629807714*^9, 
   3.914242632505574*^9}, {3.9144188017020607`*^9, 3.9144188222826443`*^9}, {
   3.914774247185214*^9, 3.914774260811167*^9}, {3.91502128921075*^9, 
   3.9150212973280497`*^9}, {3.915041331769065*^9, 3.915041332488504*^9}, {
   3.915041409407631*^9, 3.915041415648554*^9}, {3.915041495819022*^9, 
   3.915041519787924*^9}, {3.9150428105189657`*^9, 3.9150428111287127`*^9}, {
   3.91536297279874*^9, 3.915363002484666*^9}, {3.91536899663515*^9, 
   3.915369001339213*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Make a list of cube files from the current directory (use \[ShiftKey]+\
\[EnterKey] to evaluate cells after placing cursor in them). \
\>", "Subsubsection",
 CellChangeTimes->{{3.793799563306443*^9, 3.793799591542831*^9}, {
   3.793800247320668*^9, 3.793800274450728*^9}, {3.793811232515476*^9, 
   3.79381124830521*^9}, {3.853931060129483*^9, 3.853931103966256*^9}, {
   3.853931466272396*^9, 3.853931472178119*^9}, {3.897727982035624*^9, 
   3.897727986653781*^9}, 3.897728605369555*^9, {3.914418885632975*^9, 
   3.914418887218624*^9}, {3.9147762392607317`*^9, 3.914776244829646*^9}, {
   3.9147762835849237`*^9, 
   3.914776304329876*^9}},ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-\
7e8276321f48"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ext", " ", "=", " ", "\"\<cube\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"flist", " ", "=", " ", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.\>\"", "<>", "ext"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "flist", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"flist", ",", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", "n", "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], "]"}], " "}]}], "Input",\

 CellChangeTimes->{{3.7938042412340126`*^9, 3.793804266695205*^9}, {
   3.79380956574901*^9, 3.793809567368286*^9}, {3.7939761838798842`*^9, 
   3.793976217010746*^9}, {3.864571166434132*^9, 3.864571169008116*^9}, 
   3.864708210767799*^9, 3.864808779728314*^9, {3.914171137737555*^9, 
   3.91417122723062*^9}, {3.914171264975856*^9, 3.9141713111266627`*^9}, {
   3.9141713966457453`*^9, 3.914171400580159*^9}, {3.9141714715995626`*^9, 
   3.914171484428393*^9}, {3.914171544739452*^9, 3.914171566057569*^9}, {
   3.914171668652194*^9, 3.91417166965993*^9}, 3.915020647718474*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"27727f97-7dd2-4d31-a480-915518d89fa6"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["1",
       HoldForm], "\<\"c1-c2-pi-bond.cube\"\>"},
     {
      TagBox["2",
       HoldForm], "\<\"c2-h6-bond.cube\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   OutputFormsDump`HeadedColumn],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2}, {}}, Null, TableAlignments -> 
    Left]]]], "Output",
 CellChangeTimes->{3.915370422819371*^9},
 CellLabel->
  "Out[9]//TableForm=",ExpressionUUID->"26670438-8692-41e7-b4ae-185ab69fd621"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pick cubes to plot", "Subsubsection",
 CellChangeTimes->{{3.9144202164039187`*^9, 3.914420262100553*^9}, {
  3.91504211203482*^9, 
  3.9150421137058496`*^9}},ExpressionUUID->"75efccdb-433b-44b3-bce7-\
04474ffb7b28"],

Cell["\<\
Pick one or more cubes that we will work with later. These cube data will all \
be plotted in the same plane.
A list like {1} or {1,3,7} will do. An array scale = {s1,s2,s3,...} can be \
used to scale the data in the different cubes, 
in case that is needed for a good combined plot. Here, by default, we just \
set all scaling factors to one.
If you want to make a plot of different cut-planes in the same combined \
graphic, the code below would need to be modified suitably.\
\>", "Text",
 CellChangeTimes->{{3.914172446085261*^9, 3.914172461813362*^9}, {
  3.914172522188727*^9, 3.9141725363156147`*^9}, {3.914241132269258*^9, 
  3.914241158750023*^9}, {3.914418830004662*^9, 3.914418839018828*^9}, {
  3.914418914703516*^9, 3.914418929451605*^9}, {3.91441901116256*^9, 
  3.914419028218847*^9}, {3.914420204698544*^9, 3.9144202114536653`*^9}, {
  3.914420272614128*^9, 3.914420284266567*^9}, {3.915362751158574*^9, 
  3.915362842378339*^9}},ExpressionUUID->"1a733974-8874-4389-ae0e-\
5d50ad9526c9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pick", "=", 
    RowBox[{"{", "2", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scale", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1.", ",", " ", 
     RowBox[{"Length", "[", "pick", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.914170991065123*^9, 3.914170992606335*^9}, {
   3.914172431451913*^9, 3.914172442326302*^9}, 3.914172543632738*^9, {
   3.9141852971053*^9, 3.914185305792345*^9}, {3.9141855367914753`*^9, 
   3.914185537779334*^9}, {3.914186209336732*^9, 3.914186217005657*^9}, {
   3.914186524975808*^9, 3.914186526413625*^9}, {3.914187011971311*^9, 
   3.9141870122930403`*^9}, {3.914189124474348*^9, 3.914189124588093*^9}, {
   3.9141891608904138`*^9, 3.914189175380157*^9}, {3.914189358218112*^9, 
   3.914189389841939*^9}, {3.914241165459306*^9, 3.914241172735518*^9}, {
   3.914241479997654*^9, 3.914241484054421*^9}, {3.914242378903613*^9, 
   3.914242385003089*^9}, {3.914242436131738*^9, 3.91424243619189*^9}, {
   3.914243320937148*^9, 3.914243333595868*^9}, {3.914244241784571*^9, 
   3.914244242482314*^9}, {3.914245175616069*^9, 3.914245175960833*^9}, {
   3.9142456825114727`*^9, 3.914245683401372*^9}, {3.914248615186262*^9, 
   3.914248619769117*^9}, {3.914248701108873*^9, 3.914248704251461*^9}, {
   3.914248741245998*^9, 3.9142487442336197`*^9}, {3.91441853794597*^9, 
   3.914418560147522*^9}, {3.914418971689688*^9, 3.9144190005511427`*^9}, 
   3.914419039349093*^9, {3.914419168828843*^9, 3.914419169458785*^9}, {
   3.914419205945063*^9, 3.914419206648527*^9}, {3.914419636678521*^9, 
   3.9144196368473673`*^9}, {3.91441966887571*^9, 3.914419669393982*^9}, 
   3.914420288550414*^9, {3.915020657770932*^9, 3.9150206586425467`*^9}, {
   3.9153666101941643`*^9, 3.915366610667747*^9}, {3.915366956368499*^9, 
   3.915366956481216*^9}, {3.915369062838112*^9, 3.9153690637882023`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"7c93945d-8de1-46ed-a1a4-c61b48e539fb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Show the molecule (atom positions, too )", "Subsubsection",
 CellChangeTimes->{
  3.915035753861682*^9, {3.915035829555431*^9, 3.915035860186743*^9}, 
   3.915036148962057*^9, {3.915042120220427*^9, 3.9150421215296707`*^9}, {
   3.915362663826988*^9, 
   3.915362665363122*^9}},ExpressionUUID->"9c626022-0b9e-44c8-a361-\
6a98114ac4e3"],

Cell["\<\
Available PlotThemes are: HeavyAtom, BallAndStick, SpaceFilling, Tubes, \
Wireframe.

If you want to see an isosurface plot of the 3D data together with a molecule \
plot and numbered atoms, please run the notebook \
\[OpenCurlyDoubleQuote]orbitalplot-from-cube-interpolation.nb\
\[CloseCurlyDoubleQuote] from the folder \
\[OpenCurlyDoubleQuote]cubefile-interpolate-then-plot\[CloseCurlyDoubleQuote] \
on the selected cube.\
\>", "Text",
 CellChangeTimes->{
  3.9150429812139463`*^9, {3.915365962236721*^9, 3.915366058435883*^9}, {
   3.9153663700566883`*^9, 
   3.9153663747984867`*^9}},ExpressionUUID->"59599e13-d1cf-462b-bbe8-\
32509a143740"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mol", " ", "=", " ", 
   RowBox[{"customImporter", "[", 
    RowBox[{"flist", "[", 
     RowBox[{"[", 
      RowBox[{"pick", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"plottheme", "=", "\"\<Wireframe\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"molplot", " ", "=", " ", 
    RowBox[{"MoleculePlot3D", "[", 
     RowBox[{"mol", ",", 
      RowBox[{"PlotTheme", "->", "plottheme"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "pick", " ", "the", " ", "first", " ", "cube", " ", "in", " ", 
    "the", " ", "list", " ", "for", " ", "plotting", " ", "the", " ", 
    "molecule"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MoleculePlot3D", "[", 
  RowBox[{"mol", ",", 
   RowBox[{"AtomLabels", "->", "\"\<AtomIndex\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.915041454225462*^9, 3.915041456158354*^9}, {
  3.9150415356240063`*^9, 3.915041536698441*^9}, {3.915042798764885*^9, 
  3.915042800118904*^9}, {3.915363230970422*^9, 3.915363251190378*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"0abb2362-608b-45fe-815c-a471151abbce"],

Cell[BoxData[
 Graphics3DBox[
  {EdgeForm[None], Specularity[
    GrayLevel[1], 100], 
   GraphicsComplex3DBox[{{-0.666200289147064, 0., 0.}, {0.666200289147064, 0.,
     0.}, {-1.2382313701255818`, -0.9293670143790009, 
    0.}, {-1.2382313701255818`, 0.9293670143790009, 0.}, {
    1.2382313701255818`, -0.9293670143790009, 0.}, {1.2382313701255818`, 
    0.9293670143790009, 0.}, {0.9522158296363229, -0.46468350718950047`, 
    0.}, {0.9522158296363229, 0.46468350718950047`, 
    0.}, {-0.9522158296363229, -0.46468350718950047`, 
    0.}, {-0.9522158296363229, 0.46468350718950047`, 0.}}, {{{
       {RGBColor[0.4, 0.4, 0.4], SphereBox[1, 0.34]}, 
       Text3DBox["1", {-0.292200289147064, 0., 0.374}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.4, 0.4, 0.4], SphereBox[2, 0.34]}, 
       Text3DBox["2", {1.040200289147064, 0., 0.374}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[3, 0.24]}, 
       Text3DBox["3", {-0.9742313701255818, -0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[4, 0.24]}, 
       Text3DBox["4", {-0.9742313701255818, 0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[5, 0.24]}, 
       Text3DBox["5", {1.5022313701255818`, -0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}, {
       {RGBColor[0.65, 0.7, 0.7], SphereBox[6, 0.24]}, 
       Text3DBox["6", {1.5022313701255818`, 0.9293670143790009, 
        0.264}, {-1, -1},
        BaseStyle->"Graphics"]}}, {
      {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 2}, 0.15]}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{2, 7}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{7, 5}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{2, 8}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{8, 6}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 9}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{9, 3}, 0.15]}}, {
       {RGBColor[0.4, 0.4, 0.4], CylinderBox[{1, 10}, 0.15]}, 
       {RGBColor[0.65, 0.7, 0.7], CylinderBox[{10, 4}, 0.15]}}}, 
     {Opacity[0.7]}}]},
  Boxed->False,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->{0, 0, 3.38}]], "Output",
 CellChangeTimes->{3.915370431962276*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"a7b792b4-d8b1-4681-b1c1-3a83ea897311"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"points", " ", "=", " ", 
   RowBox[{"QuantityMagnitude", " ", "@", " ", 
    RowBox[{"mol", "[", "\"\<AtomCoordinates\>\"", "]"}]}]}], ";", " ", 
  RowBox[{"TableForm", "[", 
   RowBox[{"points", ",", "  ", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], " ", "]"}]}]], "Input",
 CellChangeTimes->{{3.915041722499442*^9, 3.915041723039847*^9}, {
  3.915041903530758*^9, 3.915042021094922*^9}, {3.915042173334169*^9, 
  3.915042177870572*^9}, {3.915042209679873*^9, 3.915042251663*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"d5124485-bfe2-49eb-b48c-48b720893e62"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ]},
     {
      TagBox["1",
       HoldForm], 
      RowBox[{"-", "0.666200289147064`"}], "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "0.666200289147064`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["4",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], "0.9293670143790009`", "0.`"},
     {
      TagBox["5",
       HoldForm], "1.2382313701255818`", 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["6",
       HoldForm], "1.2382313701255818`", "0.9293670143790009`", "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2, 3, 4, 5, 6}, {}}, Null, 
    TableAlignments -> Left]]]], "Output",
 CellChangeTimes->{3.915370434857449*^9},
 CellLabel->
  "Out[16]//TableForm=",ExpressionUUID->"ef6d7743-c8cf-4b6d-9ad3-\
3012193730ce"]
}, Open  ]],

Cell["\<\
We can append the list here, for example, to add a dummy atom position for a \
linear or planar molecule, to specify a plane later\
\>", "Text",
 CellChangeTimes->{{3.915042264491892*^9, 3.915042292589387*^9}, 
   3.915042631786625*^9, {3.9153660754592953`*^9, 
   3.9153660828382473`*^9}},ExpressionUUID->"c8055252-4875-42f7-b31f-\
d9e8aeecb6c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"points", ",", 
    RowBox[{
     RowBox[{"points", "[", 
      RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
     RowBox[{"{", 
      RowBox[{"0.", ",", " ", "0.", ",", " ", "1."}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableForm", "[", 
   RowBox[{"points", ",", "  ", 
    RowBox[{"TableHeadings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "points", "]"}], "]"}], ",", 
       RowBox[{"{", "}"}]}], "}"}]}], ",", " ", ",", " ", 
    RowBox[{"TableAlignments", "\[Rule]", "Left"}]}], " ", "]"}], 
  " "}]}], "Input",
 CellChangeTimes->{{3.915042697748472*^9, 3.915042735228066*^9}, 
   3.915042835955639*^9, {3.915292140344232*^9, 3.9152921457172956`*^9}, {
   3.915294007613091*^9, 3.915294022819935*^9}, {3.915294103375976*^9, 
   3.915294110353182*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"0aa3a6fb-5d26-479b-aa05-222f6112b3f9"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ], 
      TagBox[
       StyleBox["\<\"\[Null]\"\>",
        ShowStringCharacters->False],
       StyleForm[#, ShowStringCharacters -> False]& ]},
     {
      TagBox["1",
       HoldForm], 
      RowBox[{"-", "0.666200289147064`"}], "0.`", "0.`"},
     {
      TagBox["2",
       HoldForm], "0.666200289147064`", "0.`", "0.`"},
     {
      TagBox["3",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["4",
       HoldForm], 
      RowBox[{"-", "1.2382313701255818`"}], "0.9293670143790009`", "0.`"},
     {
      TagBox["5",
       HoldForm], "1.2382313701255818`", 
      RowBox[{"-", "0.9293670143790009`"}], "0.`"},
     {
      TagBox["6",
       HoldForm], "1.2382313701255818`", "0.9293670143790009`", "0.`"},
     {
      TagBox["7",
       HoldForm], "0.666200289147064`", "0.`", "1.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, TableHeadings -> {{1, 2, 3, 4, 5, 6, 7}, {}}, Null, 
    TableAlignments -> Left]]]], "Output",
 CellChangeTimes->{3.915370437287168*^9},
 CellLabel->
  "Out[18]//TableForm=",ExpressionUUID->"7afd7a75-0772-46bc-a75f-\
ba9b47f93b9e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Set specifications for the plots", "Subsubsection",
 CellChangeTimes->{{3.91504212966811*^9, 
  3.9150421329148417`*^9}},ExpressionUUID->"e635bf7a-668d-49ba-91ee-\
1e6894635051"],

Cell[TextData[{
 StyleBox["The If you want to plot multiple cube files together, they MUST be \
for the same system, different orbitals, otherwise expect strange (wrong) \
results  !",
  FontColor->RGBColor[1, 0, 0]],
 "\n\n",
 StyleBox["Set the main plot parameters and options in the next input cell.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 "\n\n",
 StyleBox["s",
  FontSlant->"Italic"],
 " = start point for the plane\n\nplane selections can be \
\[OpenCurlyDoubleQuote]xy\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]xz\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]yz\[CloseCurlyDoubleQuote], \
and so on, with the first letter being the horizontal direction.\n\nAn \
alternative plane setting is  \[OpenCurlyDoubleQuote]3-points\
\[CloseCurlyDoubleQuote]. In thes case, the array \
\[OpenCurlyDoubleQuote]vertices\[CloseCurlyDoubleQuote] must also be given, \
with atom numbers corresponding to the content of array \
\[OpenCurlyDoubleQuote]points\[CloseCurlyDoubleQuote] listed above. The atom \
numbers are shown in the molecule plot earlier, in case you need to know what \
atoms should be used to define the plane for \[OpenCurlyDoubleQuote]3-points\
\[CloseCurlyDoubleQuote]. With \[OpenCurlyDoubleQuote]3-atoms\
\[CloseCurlyDoubleQuote], the first atom selected in array vertices will \
define the point ",
 StyleBox["s",
  FontSlant->"Italic"],
 " on the plane.\n\n",
 StyleBox["r",
  FontSlant->"Italic"],
 " and ",
 StyleBox["j",
  FontSlant->"Italic"],
 ": the value ",
 StyleBox["r",
  FontSlant->"Italic"],
 " for the lowest contour and the number ",
 StyleBox["j",
  FontSlant->"Italic"],
 " of contours.\nWe use increments by factors of 2, but that can also be \
customized (",
 StyleBox["base",
  FontSlant->"Italic"],
 " value)\n\nopacity value for the plot plane: You can set it nonzero (0.05, \
for example) to see the plane.\nThe resulting graphs can be rotated because \
they are 3D, if that works better for export. The default setting\nis a \
viewpoint along the plot plane normal"
}], "Text",
 CellChangeTimes->{{3.914172555193645*^9, 3.914172589880731*^9}, {
   3.91424205797431*^9, 3.9142421016015387`*^9}, {3.914243000102604*^9, 
   3.914243000618596*^9}, {3.914243037452736*^9, 3.914243039900666*^9}, 
   3.914418707227929*^9, {3.914419048977206*^9, 3.914419070221856*^9}, {
   3.914420393018765*^9, 3.9144204440650377`*^9}, {3.914773310467698*^9, 
   3.914773318862602*^9}, {3.915027332014656*^9, 3.915027358947116*^9}, {
   3.9150275619823437`*^9, 3.91502757380987*^9}, {3.915027848149273*^9, 
   3.915027863454949*^9}, {3.915041060938849*^9, 3.915041082472279*^9}, {
   3.915042870678677*^9, 3.9150429717916927`*^9}, {3.915303371613111*^9, 
   3.915303493582808*^9}, {3.915366112485409*^9, 3.915366119305285*^9}, {
   3.915366157267502*^9, 
   3.915366175318657*^9}},ExpressionUUID->"4e4e8640-33d1-4448-8d54-\
e01fb24bb6cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "=", "0.03"}], ",", 
      RowBox[{"j", "=", "6"}], ",", " ", 
      RowBox[{"base", " ", "=", " ", "2"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"contours", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"r", "  ", 
          RowBox[{"base", "^", "n"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "j"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "r"}], " ", 
          RowBox[{"2", "^", "n"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "0", ",", "j"}], "}"}]}], "]"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"opacity", "=", "0"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"plane", " ", "origin", " ", "for", " ", "xy"}], ",", " ", "xz", 
    ",", " ", 
    RowBox[{"...", " ", "option"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"plane", " ", "=", " ", "\"\<3-points\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertices", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "7"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.914241295923602*^9, {3.914241596962008*^9, 3.914241625576193*^9}, {
   3.914241867985268*^9, 3.914241885772975*^9}, {3.914242122446246*^9, 
   3.914242123635881*^9}, 3.914418613958151*^9, {3.914419083150938*^9, 
   3.9144190898049726`*^9}, 3.915020670610561*^9, {3.915020898252022*^9, 
   3.915020899053855*^9}, {3.915024916608809*^9, 3.915024923882312*^9}, {
   3.915025106785612*^9, 3.915025113161029*^9}, {3.915027279549786*^9, 
   3.915027291032295*^9}, {3.915027366090732*^9, 3.9150273944719276`*^9}, {
   3.9150274705933*^9, 3.915027471195737*^9}, {3.915027548632556*^9, 
   3.915027553873263*^9}, {3.91502795362831*^9, 3.9150279542242327`*^9}, {
   3.9150355410545607`*^9, 3.915035559305345*^9}, {3.915036297146056*^9, 
   3.915036350070981*^9}, {3.915042775934312*^9, 3.915042777708313*^9}, {
   3.915042851943712*^9, 3.915042852543467*^9}, {3.915042994771986*^9, 
   3.915043043834421*^9}, {3.915282270614493*^9, 3.915282272800004*^9}, {
   3.915289999339601*^9, 3.915290020126258*^9}, {3.9152909725394487`*^9, 
   3.915290977492269*^9}, 3.915292022289921*^9, {3.9152922758329697`*^9, 
   3.9152922830310373`*^9}, {3.915292612265418*^9, 3.915292612746057*^9}, {
   3.915297246575378*^9, 3.915297247178918*^9}, {3.915297789679446*^9, 
   3.9152977897501287`*^9}, {3.9152978697008333`*^9, 3.91529787039277*^9}, {
   3.9152985837048492`*^9, 3.915298599996543*^9}, {3.9153669777879543`*^9, 
   3.915366980387546*^9}, {3.9153670447522583`*^9, 3.9153670457848063`*^9}, {
   3.915367090247465*^9, 3.9153670907020397`*^9}, {3.9153677136334467`*^9, 
   3.915367718399036*^9}, {3.915368787279161*^9, 3.915368790882012*^9}, {
   3.915369072130516*^9, 3.9153690750311737`*^9}, {3.915369391343936*^9, 
   3.9153693943377*^9}, {3.915369608567012*^9, 3.915369608753796*^9}, {
   3.9153699960357313`*^9, 3.9153699978393373`*^9}, {3.9153700692513943`*^9, 
   3.9153700832601767`*^9}, {3.915370179871509*^9, 3.915370184493146*^9}, {
   3.9153713886934967`*^9, 3.915371389675909*^9}, {3.915371475873643*^9, 
   3.9153714763283978`*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"b27ef285-598a-4623-a18a-d795fbaa85fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Code to generate the plots (no need to open this, click the button in the \
next section)\
\>", "Subsubsection",
 CellChangeTimes->{{3.914420186630795*^9, 3.914420189273237*^9}, {
  3.914774193935643*^9, 3.914774197692464*^9}, {3.914774291571957*^9, 
  3.91477429991182*^9}, {3.914775838068705*^9, 3.914775847489383*^9}, {
  3.9147763429013586`*^9, 
  3.914776347524042*^9}},ExpressionUUID->"b226dcc2-666f-4203-ac2a-\
2c8e7321c55a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plane", "==", "\"\<xy\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<xz\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<yz\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<yx\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<zx\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"1.", ",", "0.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", "\"\<zy\>\""}], ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"v1", "=", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "0.", ",", "1."}], "}"}]}], ";", " ", 
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0.", ",", "1.", ",", "0."}], "}"}]}], ";"}]}], "  ", 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plane", "==", " ", "\"\<3-points\>\""}], ",", " ", 
      "\[IndentingNewLine]", "  ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"n1", ",", " ", "n2", ",", " ", "vecs"}], "}"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n1", " ", "=", " ", 
          RowBox[{
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], "  ", "-", " ", 
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], " ", ";", 
         "\[IndentingNewLine]", 
         RowBox[{"n2", " ", "=", " ", 
          RowBox[{
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "  ", "-", " ", 
           RowBox[{"points", "[", 
            RowBox[{"[", 
             RowBox[{"vertices", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"vecs", " ", "=", " ", 
          RowBox[{"Orthogonalize", "[", 
           RowBox[{"{", 
            RowBox[{"n1", ",", " ", "n2"}], "}"}], "]"}]}], ";", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"vecs", " ", "=", " ", 
            RowBox[{"{", 
             RowBox[{"n1", ",", " ", "n2"}], "}"}]}], ";"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"v1", " ", "=", " ", 
          RowBox[{"vecs", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], " ", ";", "\[IndentingNewLine]", 
         
         RowBox[{"v2", " ", "=", " ", 
          RowBox[{"vecs", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<n1, n2, vecs: \>\"", ",", "n1", ",", " ", "\"\<, \>\"", ",", 
             " ", "n2", ",", " ", "\"\<, \>\"", ",", " ", "vecs"}], "]"}], 
           ";"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"s", " ", "=", " ", 
          RowBox[{"points", "[", 
           RowBox[{"[", 
            RowBox[{"vertices", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "vertices", "]"}], " ", "\[NotEqual]", " ",
             "3"}], ",", " ", 
           RowBox[{"Block", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<ERROR: vertices array must have 3 values\>\"", "]"}], ";",
               " ", 
              RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], " ", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ",", 
      "\[IndentingNewLine]", "True", ",", " ", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", "\"\<ERROR in plane selection\>\"", "]"}], ";",
          " ", 
         RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"v3", " ", "=", " ", 
     RowBox[{"Cross", "[", 
      RowBox[{"v1", ",", " ", "v2"}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"plane", " ", "normal"}], ",", "  ", 
      RowBox[{
      "will", " ", "also", " ", "be", " ", "the", " ", "default", " ", "view",
        " ", "direction"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"view", " ", "=", " ", 
     RowBox[{"2", " ", "v3"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vert", " ", "=", " ", "v2"}], ";", "\n", "\n", 
    RowBox[{"SetSharedVariable", "[", "field", "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"field", "=", 
     RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cube", ",", " ", "vol", ",", " ", "volRange", ",", "data", ",", "n", 
        ",", " ", "min", ",", " ", "max", ",", " ", "min1", ",", " ", "max1", 
        ",", " ", "min2", ",", " ", "max2", ",", " ", "step", ",", " ", "f", 
        ",", "  ", "plotSlice", ",", " ", "a", ",", " ", "b"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ParallelDo", "[", "\n", 
        RowBox[{
         RowBox[{
          RowBox[{"cube", "=", 
           RowBox[{"flist", "[", 
            RowBox[{"[", 
             RowBox[{"pick", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}]}], ";", 
          RowBox[{"(*", " ", 
           RowBox[{
           "pick", " ", "a", " ", "cube", " ", "in", " ", "the", " ", "list", 
            " ", "for", " ", "plotting", " ", "the", " ", "molecule"}], " ", 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vol", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{"cube", ",", "\"\<VolumetricData\>\""}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"volRange", " ", "=", " ", 
           RowBox[{"vol", "[", "\"\<DataRange\>\"", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"data", " ", "=", " ", 
           RowBox[{"Normal", "[", 
            RowBox[{"vol", "[", 
             RowBox[{"[", 
              RowBox[{"\"\<Data\>\"", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"n", " ", "=", " ", 
           RowBox[{"Dimensions", "[", "data", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"min", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"volRange", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"max", " ", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"volRange", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"step", " ", "=", " ", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "-", "1"}], ")"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"max", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "-", 
                RowBox[{"min", "[", 
                 RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"n", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "-", "1"}], ")"}]}]}], 
            "\[IndentingNewLine]", "}"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{
             "\"\<min and max :\>\"", ",", " ", "min", ",", " ", 
              "\"\<,  \>\"", ",", " ", "max"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<vector basis for plot: \>\"", ",", 
              RowBox[{"{", 
               RowBox[{"v1", ",", " ", "v2", ",", " ", "v3"}], "}"}]}], "]"}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"\"\<min, max in plot vector basis: \>\"", ",", 
              RowBox[{"min", ".", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}]}], ",", 
              "\"\<,  \>\"", ",", " ", 
              RowBox[{"max", ".", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"v1", ",", "v2", ",", "v3"}], "}"}], "]"}]}]}], 
             "]"}], ";"}], " ", "*)"}], "\n", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Now", " ", "we", " ", "make", " ", "an", " ", "interpolation", 
             " ", "function", " ", "from", " ", "the", " ", "3", "D", " ", 
             "volume", " ", "data"}], ",", " ", 
            RowBox[{
            "so", " ", "we", " ", "can", " ", "plot", " ", "slices", " ", 
             "easier", "\n", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"note", " ", "the", " ", "use", " ", "of", " ", 
                RowBox[{"data", "[", 
                 RowBox[{"[", 
                  RowBox[{"z", ",", "y", ",", "x"}], "]"}], "]"}], " ", 
                "below"}], ",", " ", 
               RowBox[{"and", " ", "the", " ", "gymnastics", " ", "with", " ", 
                RowBox[{"n", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], " ", "in", " ", "the", " ", 
                "\"\<step\>\"", " ", "array", " ", "above"}], ",", 
               RowBox[{
                RowBox[{
                "which", " ", "is", " ", "because", " ", "the", " ", "z"}], 
                "-", 
                RowBox[{
                "loop", " ", "runs", " ", "fastest", " ", "in", " ", "the", 
                 " ", "cube", " ", "spec", " ", "Fortran", " ", "code"}]}]}], 
              ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Clear", "[", "f", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"f", " ", "=", " ", 
           RowBox[{"Interpolation", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"min", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], " ", "+", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"z", "-", "1"}], ")"}], " ", 
                    RowBox[{"step", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"scale", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], " ", 
                   RowBox[{"data", "[", 
                    RowBox[{"[", 
                    RowBox[{"z", ",", "y", ",", "x"}], "]"}], "]"}]}]}], 
                 "\[IndentingNewLine]", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"z", ",", "1", ",", 
                  RowBox[{"n", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
              "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{
            "Now", " ", "we", " ", "plot", " ", "a", " ", "slice", " ", "in", 
             " ", "3", "D", " ", "to", " ", "add", " ", "it", " ", "to", " ", 
             "the", " ", "plot", " ", "of", " ", "the", " ", 
             RowBox[{"molecule", ".", " ", "The"}], " ", "cut", " ", "plane", 
             " ", "is", " ", "defined", " ", "parametrically", " ", "via", 
             " ", "a", " ", "startpoint", " ", "and", " ", "two", " ", 
             "vectors"}], ",", " ", 
            RowBox[{
            "somewhat", " ", "like", " ", "the", " ", "grid", " ", "in", " ", 
             "the", " ", "cube", " ", 
             RowBox[{"file", "."}]}]}], " ", "*)"}], "\n", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "Determine", " ", "data", " ", "range", " ", "in", " ", "the", " ",
             "cube", " ", "corresponding", " ", "to", " ", "our", " ", 
            "slice"}], " ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Block", "[", 
           RowBox[{
            RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"min1", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"min", "+", " ", "s"}], ")"}], ".", "v1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"min2", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"min", "+", " ", "s"}], ")"}], ".", "v2"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"max1", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"max", "+", " ", "s"}], ")"}], ".", "v1"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"max2", " ", "=", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"max", "+", " ", "s"}], ")"}], ".", "v2"}]}], ";"}]}],
            "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{
              "\"\<plot limits: \>\"", ",", " ", "min1", ",", "\"\<, \>\"", 
               ",", " ", "max1", ",", "\"\<, \>\"", ",", " ", "min2", ",", 
               "\"\<, \>\"", ",", " ", "max2"}], "]"}], ";"}], "  ", "*)"}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "\n", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Mod", "[", 
              RowBox[{
               RowBox[{"m", "-", "1"}], ",", "2"}], "]"}], "==", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Use", " ", "the", " ", "first", " ", "two", " ", "colors", " ", 
              
              RowBox[{"(", 
               RowBox[{
                RowBox[{"red", "/", "blue"}], " ", "by", " ", "default"}], 
               ")"}], " ", "for", " ", "even", " ", "numbered", " ", 
              RowBox[{"pick", "[", "]"}], " ", "values"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"plotSlice", " ", "=", " ", 
             RowBox[{"ParametricPlot3D", "[", 
              RowBox[{
               RowBox[{"s", " ", "+", " ", 
                RowBox[{"u", " ", "v1"}], " ", "+", " ", 
                RowBox[{"v", " ", "v2"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "min1", ",", " ", "max1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "min2", ",", " ", "max2"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"FaceForm", "[", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}]}], 
                 "]"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Lighting", "->", "None"}], ",", 
               RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
               RowBox[{"MaxRecursion", "->", "6"}], ",", 
               RowBox[{"Background", "->", "None"}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"MeshFunctions", "->", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}]}],
                  "\[IndentingNewLine]", "}"}]}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", " ", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}]}], "}"}]}], 
                 "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Mesh", "\[Rule]", "contours"}], ",", 
               RowBox[{"BoundaryStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Opacity", "[", "0", "]"}], "]"}]}]}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Use", " ", "the", " ", "second", " ", "two", " ", "colors", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"green", "/", "dark"}], " ", "orange", " ", "by", " ",
                 "default"}], ")"}], " ", "for", " ", "odd", " ", "numbered", 
              " ", 
              RowBox[{"pick", "[", "]"}], " ", "values"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"plotSlice", " ", "=", " ", 
             RowBox[{"ParametricPlot3D", "[", 
              RowBox[{
               RowBox[{"s", " ", "+", " ", 
                RowBox[{"u", " ", "v1"}], " ", "+", " ", 
                RowBox[{"v", " ", "v2"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"u", ",", "min1", ",", " ", "max1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"v", ",", "min2", ",", " ", "max2"}], "}"}], ",", 
               RowBox[{"PlotStyle", "\[Rule]", 
                RowBox[{"FaceForm", "[", 
                 RowBox[{
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}], ",", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Gray", ",", 
                    RowBox[{"Opacity", "[", "opacity", "]"}]}], "]"}]}], 
                 "]"}]}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "60"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Lighting", "->", "None"}], ",", 
               RowBox[{"Ticks", "\[Rule]", "False"}], ",", " ", 
               RowBox[{"MaxRecursion", "->", "6"}], ",", 
               RowBox[{"Background", "->", "None"}], ",", 
               "\[IndentingNewLine]", " ", 
               RowBox[{"MeshFunctions", "->", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}], 
                  ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"f", "[", 
                    RowBox[{"#1", ",", "#2", ",", " ", "#3"}], "]"}], "&"}]}],
                  "\[IndentingNewLine]", "}"}]}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", " ", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{"0.02", ",", " ", "0.01"}], "}"}], "]"}]}], "}"}],
                   ",", "\[IndentingNewLine]", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"colors", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003", "]"}], ",", " ", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", " ", 
                    RowBox[{"0.02", ",", " ", "0.01"}], "}"}], "]"}]}], 
                   "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Mesh", "\[Rule]", "contours"}], ",", 
               RowBox[{"BoundaryStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Opacity", "[", "0", "]"}], "]"}]}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "\n", 
          RowBox[{"(*", " ", 
           RowBox[{"Combine", " ", "the", " ", 
            RowBox[{"plots", "."}]}], "  ", "*)"}], "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"field", ",", 
            RowBox[{"Show", "[", 
             RowBox[{"plotSlice", ",", 
              RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"Ticks", "\[Rule]", "False"}], ",", 
              RowBox[{"ViewPoint", "\[Rule]", "view"}], ",", " ", 
              RowBox[{"ViewVertical", " ", "->", " ", "vert"}], ",", "  ", 
              RowBox[{"ImageSize", "->", "400"}]}], "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", " ", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", 
           RowBox[{"Length", "[", "pick", "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
       "Print", "[", 
        "\"\<... done with creating contours. You can now evaluate the next \
cell to show the results if there are no errors. With plane set to 3-points, \
you'll likely get some warnings about Extrapolation being used. This is \
usually harmless.\>\"", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", ")"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.793787936129014*^9, 3.793787955586397*^9}, 
   3.793788244943744*^9, {3.793788279455273*^9, 3.793788281379185*^9}, {
   3.793797231399516*^9, 3.793797248189386*^9}, {3.793797359673271*^9, 
   3.793797372207142*^9}, {3.7937974347534847`*^9, 3.7937974409241133`*^9}, {
   3.793798894276332*^9, 3.7937990136937447`*^9}, {3.793799210256448*^9, 
   3.793799232274712*^9}, {3.793800290795893*^9, 3.793800294939698*^9}, 
   3.793809625961751*^9, {3.793811454231839*^9, 3.793811542477461*^9}, {
   3.793811583516202*^9, 3.793811589204122*^9}, {3.793812480725964*^9, 
   3.793812482677903*^9}, {3.793822941215563*^9, 3.793822941651073*^9}, {
   3.853862411299104*^9, 3.85386243042754*^9}, {3.853925763218968*^9, 
   3.853925766173764*^9}, {3.853925810939453*^9, 3.8539258111215878`*^9}, {
   3.853931504821154*^9, 3.853931504971962*^9}, {3.8647220062718167`*^9, 
   3.864722007032493*^9}, {3.8648087328805237`*^9, 3.864808761078828*^9}, {
   3.864808809941865*^9, 3.864808815585608*^9}, {3.864809172740831*^9, 
   3.864809173118518*^9}, {3.864809410555665*^9, 3.864809411264662*^9}, {
   3.86480968171535*^9, 3.864809693250341*^9}, {3.86481049641626*^9, 
   3.864810496450425*^9}, {3.864810583408517*^9, 3.864810583489043*^9}, {
   3.8648107995038548`*^9, 3.864810799564011*^9}, {3.864811471296981*^9, 
   3.864811472114854*^9}, {3.864826964426809*^9, 3.864826964769217*^9}, {
   3.8977265642338753`*^9, 3.897726568514516*^9}, {3.897728618908751*^9, 
   3.897728627364645*^9}, {3.897728757427329*^9, 3.897728765781805*^9}, {
   3.914071090584407*^9, 3.914071092490871*^9}, {3.9140777465271606`*^9, 
   3.914077746950813*^9}, {3.914162468783587*^9, 3.9141624688693457`*^9}, {
   3.914164286256906*^9, 3.914164286891412*^9}, {3.914164808991652*^9, 
   3.9141648100864577`*^9}, {3.914172626303006*^9, 3.914172712911684*^9}, {
   3.9141727712627587`*^9, 3.914172781494815*^9}, {3.914174477697906*^9, 
   3.914174478189829*^9}, {3.9141747663906736`*^9, 3.9141747777003117`*^9}, {
   3.914174864366918*^9, 3.914174959988058*^9}, {3.914185320275083*^9, 
   3.914185335645569*^9}, 3.914185403235224*^9, {3.914185813488426*^9, 
   3.914185926643965*^9}, {3.9141859742354107`*^9, 3.914186013387237*^9}, 
   3.914186309986964*^9, {3.9141863603228807`*^9, 3.9141864054684763`*^9}, {
   3.91418643835917*^9, 3.914186446766232*^9}, {3.914186529017734*^9, 
   3.91418656268108*^9}, {3.914186634367724*^9, 3.91418674304177*^9}, {
   3.914186776679329*^9, 3.914186815221946*^9}, {3.914186900916335*^9, 
   3.914186903978241*^9}, {3.9141869488524437`*^9, 3.914186994832337*^9}, {
   3.914188066345008*^9, 3.914188070538456*^9}, {3.914188121499324*^9, 
   3.914188149597844*^9}, {3.914188351275371*^9, 3.9141883517434607`*^9}, {
   3.9141884159384727`*^9, 3.914188417752088*^9}, {3.914188847828933*^9, 
   3.914188920543178*^9}, {3.914189020366275*^9, 3.914189032231335*^9}, {
   3.9141894755876217`*^9, 3.914189476798005*^9}, {3.914189623556363*^9, 
   3.914189624761038*^9}, {3.914189818557254*^9, 3.91418982846539*^9}, {
   3.91419010187681*^9, 3.9141901229348593`*^9}, {3.914240890743246*^9, 
   3.914240897875329*^9}, {3.914240957172438*^9, 3.9142409865126123`*^9}, {
   3.9142410705951347`*^9, 3.914241101480776*^9}, 3.9142412338335743`*^9, {
   3.914241586496808*^9, 3.914241700361767*^9}, {3.914241762369725*^9, 
   3.914241832181808*^9}, {3.914241895657686*^9, 3.91424190790658*^9}, {
   3.914242143065642*^9, 3.914242164362455*^9}, {3.914242206032741*^9, 
   3.914242304488638*^9}, {3.914242391724386*^9, 3.914242407599369*^9}, {
   3.914242452195548*^9, 3.9142424570306*^9}, {3.9142428387826757`*^9, 
   3.914242869433759*^9}, {3.9142429291717973`*^9, 3.914242930400611*^9}, {
   3.914243642560371*^9, 3.914243653644383*^9}, {3.914419443158938*^9, 
   3.914419466817256*^9}, {3.914419572806915*^9, 3.914419581763941*^9}, {
   3.914420051076097*^9, 3.914420098928849*^9}, {3.914420142450053*^9, 
   3.914420155355466*^9}, {3.914772560030212*^9, 3.914772650658999*^9}, {
   3.9150208448565283`*^9, 3.9150208913854523`*^9}, {3.915021360433525*^9, 
   3.9150214069798107`*^9}, 3.915021438054056*^9, {3.915024641413219*^9, 
   3.9150246594788523`*^9}, {3.915024877044697*^9, 3.91502489600065*^9}, {
   3.915025064417856*^9, 3.9150250654447927`*^9}, 3.9150276140330553`*^9, {
   3.915027653924224*^9, 3.9150277679663067`*^9}, {3.915027798388928*^9, 
   3.91502782104603*^9}, {3.915028172970783*^9, 3.915028177453154*^9}, {
   3.91502820757296*^9, 3.915028209849493*^9}, {3.9150286842478123`*^9, 
   3.915028699722267*^9}, {3.9150287484359713`*^9, 3.9150288375146837`*^9}, {
   3.915035710786497*^9, 3.91503577057535*^9}, {3.915036254466956*^9, 
   3.915036268993222*^9}, {3.91504306006068*^9, 3.91504319059792*^9}, {
   3.915043469166698*^9, 3.915043474037402*^9}, {3.915043528561636*^9, 
   3.915043587111868*^9}, {3.9150451484407187`*^9, 3.915045152249617*^9}, {
   3.915093199498542*^9, 3.91509320115985*^9}, 3.915282782857814*^9, {
   3.915282835040751*^9, 3.915282848889865*^9}, 3.915282988187518*^9, {
   3.915283105057571*^9, 3.915283124335822*^9}, {3.915283338214898*^9, 
   3.9152833769086514`*^9}, 3.9152835174642973`*^9, 3.91528357271682*^9, {
   3.915283623148677*^9, 3.9152836256415358`*^9}, {3.915283704401581*^9, 
   3.915283717670445*^9}, {3.915284874795827*^9, 3.915284885154233*^9}, {
   3.915288031556447*^9, 3.9152880659641953`*^9}, {3.915288096970759*^9, 
   3.915288118184758*^9}, {3.915288233708865*^9, 3.9152882773107347`*^9}, {
   3.915288381409382*^9, 3.9152884857148657`*^9}, {3.9152887025245867`*^9, 
   3.915288754550565*^9}, {3.91528894519648*^9, 3.915288969407414*^9}, {
   3.9152898217293997`*^9, 3.915289900085268*^9}, {3.915289949779977*^9, 
   3.9152899538926773`*^9}, {3.915290081362068*^9, 3.91529009378784*^9}, {
   3.915290783599557*^9, 3.9152909409144697`*^9}, 3.915291195078335*^9, {
   3.915291236045583*^9, 3.915291259777197*^9}, {3.915291308935597*^9, 
   3.915291318526898*^9}, {3.9152914518210287`*^9, 3.9152914726865807`*^9}, {
   3.9152915740650053`*^9, 3.915291580590239*^9}, {3.9152919516300583`*^9, 
   3.915291951739912*^9}, {3.915292618155095*^9, 3.915292643631661*^9}, {
   3.9152927906122913`*^9, 3.9152928005259666`*^9}, {3.9152928372770042`*^9, 
   3.915292844868662*^9}, {3.91529290272114*^9, 3.91529291339478*^9}, {
   3.9152934628239403`*^9, 3.915293489098131*^9}, {3.915293876393415*^9, 
   3.915293886662567*^9}, {3.915294236907674*^9, 3.91529424263561*^9}, {
   3.9152944006265793`*^9, 3.915294402329117*^9}, {3.915294445527192*^9, 
   3.915294465698763*^9}, {3.915294599903234*^9, 3.9152946068169003`*^9}, {
   3.915294815035718*^9, 3.915294824024768*^9}, {3.915294861553637*^9, 
   3.915294870449786*^9}, {3.9152951624713717`*^9, 3.915295196498453*^9}, {
   3.915295249276204*^9, 3.915295270942437*^9}, {3.915295307022731*^9, 
   3.915295310077055*^9}, {3.915295369808148*^9, 3.915295376474937*^9}, {
   3.9152956416639757`*^9, 3.915295655151771*^9}, {3.9152968616173077`*^9, 
   3.915296865327284*^9}, {3.9152968986415777`*^9, 3.9152969001503*^9}, {
   3.915296973187355*^9, 3.915296974544855*^9}, {3.915297178561157*^9, 
   3.915297184397003*^9}, {3.9152974002430487`*^9, 3.915297404105103*^9}, {
   3.915366936206109*^9, 3.9153669438171167`*^9}, {3.915368474670342*^9, 
   3.915368503310589*^9}, {3.91536860677288*^9, 3.915368655177916*^9}, {
   3.9153688856621323`*^9, 3.915368921895014*^9}, {3.91536901681994*^9, 
   3.915369026323443*^9}, {3.9153690910878363`*^9, 3.915369123040506*^9}, {
   3.915369164040691*^9, 3.915369340026894*^9}, {3.915369510770157*^9, 
   3.9153695940378637`*^9}, {3.9153696494316473`*^9, 3.91536966168717*^9}, {
   3.915369970222269*^9, 3.915369982185473*^9}, 3.915370055607396*^9, {
   3.915370264165188*^9, 3.9153703025385017`*^9}, {3.915370377822809*^9, 
   3.91537038022265*^9}},
 CellTags->"make-contours",
 CellLabel->"In[1]:=",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate and view combined plots", "Subsubsection",
 CellChangeTimes->{{3.91442047680878*^9, 3.91442048494007*^9}, {
  3.914774097653467*^9, 
  3.9147741029742193`*^9}},ExpressionUUID->"fd91ba99-4141-41a5-8a4c-\
9a02c7c502ae"],

Cell[BoxData[
 ButtonBox["\<\"Create contours (may take a while...) \"\>",
  Appearance->Automatic,
  ButtonFunction:>NotebookEvaluate[
    EvaluationNotebook[], EvaluationElements -> {"Tags" -> {"make-contours"}}],
  Evaluator->Automatic,
  Method->"Queued"]], "Output",
 CellChangeTimes->{3.914776168181922*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"db76cb3e-4de3-4ab2-873e-ee787b0c7771"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vp", " ", "=", " ", "view"}], ";", " ", 
  RowBox[{"vv", " ", "=", " ", "vert"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"combined", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"molplot", ",", 
    RowBox[{"field", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vp", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"ViewVertical", "\[Rule]", 
     RowBox[{"Dynamic", "[", "vv", "]"}]}], " ", ",", 
    RowBox[{"ImageSize", "->", "400"}], ",", " ", 
    RowBox[{"Background", "->", "None"}]}], " ", "]"}]}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQ7d+kdni75lvH0p0KR0C02aLTt0B0b+XkhyD63FEj
8R1A+vGfXDB9Y7WzOohOXuGrCaI/JDEb7gTSSjuzwPSPuNAKEJ3NMBFM+zwp
XAWi1y72WQuiI8w2P70EpJOuKj4H0Yu4H6y7DKQdJklvBNEHIv/xXAHSR5/y
8oLoazZ59iDay6kJTMfdWu4KogNtmNxBdPVulkIQPU+7HEynb522SFPrraOO
21kwvXZ5F/M1IG2x+guYXnTRRwRE74npAdP/lU8vuw6kAzm8l4PouBLXKyC6
SyAZTAs+1tEP1H7r+IzZCkxP15oWegVIX7M8AaaX9Z5X/wGkP159AaYBEc+p
BQ==
  "],
 CellLabel->"In[2]:=",ExpressionUUID->"9ac83f03-5ba4-4c63-9948-ab4f1efd4b57"],

Cell[BoxData[
 Graphics3DBox[{
   {AbsoluteThickness[3], Specularity[
     GrayLevel[1], 100], 
    GraphicsComplex3DBox[{{-0.666200289147064, 0., 0.}, {0.666200289147064, 
     0., 0.}, {-1.2382313701255818`, -0.9293670143790009, 
     0.}, {-1.2382313701255818`, 0.9293670143790009, 0.}, {
     1.2382313701255818`, -0.9293670143790009, 0.}, {1.2382313701255818`, 
     0.9293670143790009, 0.}, {0.9522158296363229, -0.46468350718950047`, 
     0.}, {0.9522158296363229, 0.46468350718950047`, 
     0.}, {-0.9522158296363229, -0.46468350718950047`, 
     0.}, {-0.9522158296363229, 0.46468350718950047`, 0.}}, {{
       {RGBColor[0.4, 0.4, 0.4], SphereBox[{1, 2}, 0.]}, 
       {RGBColor[0.65, 0.7, 0.7], SphereBox[{3, 4, 5, 6}, 0.]}}, {
       {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 2}]}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{2, 7}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{7, 5}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{2, 8}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{8, 6}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 9}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{9, 3}]}}, {
        {RGBColor[0.4, 0.4, 0.4], Line3DBox[{1, 10}]}, 
        {RGBColor[0.65, 0.7, 0.7], Line3DBox[{10, 4}]}}}, 
      {Opacity[0.7]}}]}, {GraphicsComplex3DBox[CompressedData["
1:eJyE3Xd0FdXiv/8ovXcQqVKkSFWKArIPRRBEmohIBxEQQZFLEwGR3jtIbyJV
epE+oVcpCYQOIT0QQkIJIbSfn3vOe3/Xeuae9fvrrvtas2b2mTPn4ZzJuPc7
XX9s+e2bAQEBhXMEBKT693/vPu7R++qZJOedn0o0rlAhU+CJr1blTfMgIJC+
5OjF+Bzt3R7bPe3Uj2e+duhz635T+6ver1xer3BgfN8GL12e8Kzg0olFX7h8
8aWfm61MSXF54y0hr/dffObyp5M/2Hx5Y7LLV/ac3jlx/FOXt6h/P3umb5Jc
/qpI44MlPn7i8vXPV/1UO99jl7e5nKpYm8SHLk+zrXPQT6cTXb516v6Rk/5M
cPmBi1W6N34d7/K3JscfG7YtzuX96q0ptaXHXZefSekyPqJAjMvf3VogNt/5
SJeP+O5So89Gh7v8WtFp64Z/eMflPTfPyNvt6k2XFyyS5sqpOlddfn7K4PmV
1110+egX99rOy3ne5X1DDnz46skxl2/u8dmg36fsdXnAJ++ndOu4wuWdvW7o
od79uHy897gun+4dp8tveF+Xy0t7z4PL+3vPm3s83vPs8rHe98Xl5bzvo8uD
vO+7ywd7rxOXF/ZeVy4/4r0OXb7De926PL33Ond5O+/nwuUbvZ8jl79R9L+f
O5e38n5OXb7a+7l2eYq3Ay7/3NsNly/zdsblj7xdcnkDb8dcPt/bPZfHeTvp
Pq63qx4/HfaMnrHvnVwznjjjCi0qsa58RttnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXaNx9dnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXYd
19dnPx32FKyQ43KTLx8790/mel2yfAbbZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX12jcfXZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX12HdfX
Zz8d9uw49e3ksfkfOV8MnHR1ebn0ts909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67BqPr8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67Dqur89+
Ouxp2mNPncCbic6eYqm2FyqXzvaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13j8fWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13H9fXZT4c9
0amyPX22PMEpem7I1PnvpbV9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1WfXeHx9pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1WfXcX199tNhT0Cd
4216nIl3xv7ysGee99LYPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eqzazy+PtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqz67i+PvvpsKfSkL6H
r7WKc+JK9ao3o2xq22e6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119do3H12e6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119dh3X12c/HfZ03Za/QtOb
sU7Li3cKZSmbyvaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn13j8fWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13H9fXZT4c9s+MOzTv4bbSz
e8TXyePLvGn7TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8+u8fj6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u4/r67KfDnmMle6eqGh/hFCl/
ISh1mTdsn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPXZNR5fn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPXZdVxfn/102JPcMc8PawaGOWOufrph
ROkA22e6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119do3H12e6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119dh3X12c/Hfa0qjRsS/VXt53LmX7L9qzZ
K0d9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1WfXeHx9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1WfXcX199tNhz64V58YWznbd+aNb3yMJTV/Y
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eqzazy+PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eqz67i+PvvpsOetPMXapyka4vy4v9PPMZ+n2D7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqs2s8vj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqs+u4vj776bBnyLj+leMqXXBq5G1WIbRJsu0zXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PrvG4+szXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPruO6+uznw57dj2akmXVqBNO2h9rh1/+LOn/3d+A2/sb
cHt/A27vb8Dt/Q24vb8Bt/c34Pb+Btze34Db+xtwe38Dbu9vwO39Dbi9vwG3
9zfg9v4G3N7fgNv7G3B7fwNu72/A7f0NuL2/Abf3N+D2/gbc3t+A2/sbcHt/
A27vb8Dt/Q24vb8Bt/c34Pb+Btze34Db+xtwe38Dbu9vwO39DY5H9zfg9v4G
3N7fgNv7G3B7fwNu72/A7f0NuL2/Abf3N+D2/gbc3t+A2/sbcHt/A27vb8Dt
/Q24vb8Bt/c34Pb+Btze34Db+xtwe3+Dx9X9jf/dYU/y5m/7Rjfe71w4Xn7e
ucaPbZ/p9vkNuH1+A26f34Db5zfg9vkNuH1+A26f34Db5zfg9vkNuH1+A26f
34Db5zfg9vkNuH1+A26f34Db5zfg9vkNuH1+A26f34Db5zfg9vkNuH1+A26f
34Db5zfg9vkNuH1+A26f34Db5zfg9vkNuH1+A26f34Db5zfg9vkNuH1+A26f
34Db5zc4Hj2/AbfPb8Dt8xtw+/wG3D6/AbfPb8Dt8xtw+/wG3D6/AbfPb8Dt
8xtw+/wG3D6/AbfPb8Dt8xtw+/wG3D6/AbfPb8Dt8xtw+/wG3D6/wePq+Y3/
3WFPwJOOk9IU+sNZXLTQ58cbPbR9ptv5N+B2/g24nX8DbuffgNv5N+B2/g24
nX8DbuffgNv5N+B2/g24nX8DbuffgNv5N+B2/g24nX8DbuffgNv5N+B2/g24
nX8DbuffgNv5N+B2/g24nX8DbuffgNv5N+B2/g24nX8DbuffgNv5N+B2/g24
nX8DbuffgNv5N+B2/g24nX8Dbuff4Hg0/wbczr8Bt/NvwO38G3A7/wbczr8B
t/NvwO38G3A7/wbczr8Bt/NvwO38G3A7/wbczr8Bt/NvwO38G3A7/wbczr8B
t/NvwO38G3A7/waPq/k3/neHPQmDspw63G6l+e7nzG86nybYPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqzazy+
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eqz67i+PvvpsGfww33TGtzdb3qufNqnz7Q422e6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119do3H12e6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119dh3X12c/HfYMnP3R4i+DT5iA1iGX20+JsX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ9d4fH2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ9dxfX3202HPla8aPzvc5oKZl25HnSaTImyf6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909dk1Hl+f6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9dl1XF+f/XTYMyDyafGbDUNMpd2z1tecEGr7TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u8fj6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u
4/r67KfDnlz/+bNpUrXrZsaliLKts161faarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13h8faarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn13F9
ffbTYU+bEWv3pcsVag5+uOJVlYwXbJ/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T12TUeX5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T12XVcX5/9
dNhTqmFAy9kTw8yd6s7KUpkP2T7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqs2s8vj7T1We6+kxXn+nqM119pqvP
dPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqs+u4vj776bAn
KctX0UXfjDRvPDzXpWyR6bbPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj7T1We6+uwaj6/PdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+uw6rq/PfjrsOXpx
w9ANP0ebgwPnvrUn/T6jPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eqzazy+PtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqz67i+PvvpsGf2wtQ5
ayTGmjcGnO+2NPNZ22e6XX8QbtcfhNv1B+F2/UG4XX8QbtcfhNv1B+F2/UG4
XX8QbtcfhNv1B+F2/UG4XX8QbtcfhNv1B+F2/UG4XX8QbtcfhNv1B+F2/UG4
XX8QbtcfhNv1B+F2/UG4XX8QbtcfhNv1B+F2/UG4XX8QbtcfhNv1B+F2/UG4
XX8QbtcfhNv1B+F2/UGOR+sPwu36g3C7/iDcrj8It+sPwu36g3C7/iDcrj8I
t+sPwu36g3C7/iDcrj8It+sPwu36g3C7/iDcrj8It+sPwu36g3C7/iDcrj8I
t+sP8rhaf/B/d9jTtWu71cd6xpkWl9fd6pvxsu0z3a7fDbfrd8Pt+t1wu343
3K7fDbfrd8Pt+t1wu3433K7fDbfrd8Pt+t1wu3433K7fDbfrd8Pt+t1wu343
3K7fDbfrd8Pt+t1wu3433K7fDbfrd8Pt+t1wu3433K7fDbfrd8Pt+t1wu343
3K7fDbfrd8Pt+t1wu3433K7fDbfrd8Pt+t1wu343x6P1u+F2/W64Xb8bbtfv
htv1u+F2/W64Xb8bbtfvhtv1u+F2/W64Xb8bbtfvhtv1u+F2/W64Xb8bbtfv
htv1u+F2/W64Xb8bbtfvhtv1u3lcrd/9vzvsqVxma60vQuPNO/3vZ5yZ9bbt
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvP
dPWZrj67xuPrM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPdPWZrj67juvrs58OewIGp459sD7BDE4/b+HXE8Jtn+l2
/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56+B2
/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56+B2
/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56+B2/jq4nb8Obuevg9v56zge
zV8Ht/PXwe38dXA7fx3czl8Ht/PXwe38dXA7fx3czl8Ht/PXwe38dXA7fx3c
zl8Ht/PXwe38dXA7fx3czl8Ht/PXwe38dXA7fx3czl/H42r+uv/dYU+P65s+
2BmdaEJb767ca1K07TNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+u8bj6zNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+u47r67OfDnvO1m43fGjx
R6bRn9eOD5lyz/aZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn13j8fWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn13H9fXZT4c91VakPVm302Oz
9dHzDpOmPbB9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1WfXeHx9pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1WfXcX199tNhz5I0W3NlWPjEZFme
NeWfE4m2z3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvrsGo+vz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvrsOq6vz3467En7XYeO50KSTN1Pi3wS
cvKR7TNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+u8bj6zNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+u47r67OfDnv6nEm/dk7OZDPwQcXpt049
sX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ9d4fH2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ9dxfX3202HPpYrbH7Vr+sysn+u5HnX6qe0z
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPrvG4+szXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPruO6+uznw57as3qVLvYxBRz++MW7z4488z2ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V59d4/H1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaar
z3T1ma4+09VnuvpMV59dx/X12U+HPSuTMk6IOfrc5Irs8tPTf57bPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eqz
azy+PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eqz67i+PvvpsCdT253BG994aRpO7rfv9dmXts909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67BqP
r8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r67Dqur89+Ouzpt79L4QEfvzK/fDAqXfrzr22f6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909dk1Hl+f
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909dl1XF+f/XTYc7Volu9q/vzafHW/UZnxMQEe9ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFefXePx9Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFefXcf19dlPhz1F6964OqJtgCfRE9Q0c+wbts909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67BqPr8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r67Dqur89+Ouy5+Kjy62+SAzyTZrftPz32TdtnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXaNx9dnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
fXYd19dnPx32jP9zXImGc9/wlIgJm5/7birbZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX12jcfXZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX12
HdfXZz8d9tT86majslX+/d5W83tn3t3Uts909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq890
9ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67BqPr8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r67Dqu
r89+OuyJT//Bj1mC/v19Pu1RRMF7aWyf6eozXX2mq8909ZmuPtPVZ7r6TFef
6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909dk1Hl+f6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909dl1XF+f
/XTYs2LP+NkJP6byPAz7JePye2ltn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPXZNR5fn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPXZdVxfn/10
2NO6963dwVlSeyZXS12pZFw622e6+kxXn+nqM119pqvPdPWZrj7T1We6+kxX
n+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn+nqM119do3H12e6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119dh3X12c/HfZk
KFzl9s71qT0lJ07+cm1cettnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfXaNx9dnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfXYd19dnPx327Ds3
IfWCRmk8zs3cv5S/n8H2ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T1ma4+09VnuvpMV59d4/H1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV59dx/X12U+HPX1/u11m
WHQaz9eVFy/bcj+j7TNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+
09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09Vn
uvpMV5/p6jNdfaarz3T1ma4+u8bj6zNdfaarz3T1ma4+09VnuvpMV5/p6jNd
faarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+u47r67OfDntKfFC1Wecx
aT2PRpc8VjU+k+0zXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6
TFef6eozXX2mq8909ZmuPrvG4+szXX2mq8909ZmuPtPVZ7r6TFef6eozXX2m
q8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPruO6+uznw57rkRM7F+veDrP
lCsb7u2Oz2z7TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909Zmu
PtPVZ7r6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8909ZmuPtPV
Z7r6TFef6eozXX2mq8+u8fj6TFef6eozXX2mq8909ZmuPtPVZ7r6TFef6eoz
XX2mq8909ZmuPtPVZ7r6TFef6eozXX2mq8+u4/r67KfDnslzQ+e/ezCdp3S5
ajlqP8hi+0xXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6
+kxXn+nqM119pqvPrvH4+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119
pqvPdPWZrj7T1We6+kxXn+nqM119pqvPruP6+uynwx7Pp9WcDJ3Sew7/eqDa
oQdZbZ/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpM
V5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1ma4+09VnuvpMV5/p
6jNdfaarz3T12TUeX5/p6jNdfaarz3T1ma4+09VnuvpMV5/p6jNdfaarz3T1
ma4+09VnuvpMV5/p6jNdfaarz3T12XVcX5/9dNjz9NmkiLgX6T1dgxu0b5CQ
zfaZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZ
rj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T
1We6+kxXn13j8fWZrj7T1We6+kxXn+nqM119pqvPdPWZrj7T1We6+kxXn+nq
M119pqvPdPWZrj7T1We6+kxXn13H9fXZT4c91erlbJhUIcn5omHn6nEbMgZu
++/5Dwikq9v07d7tXfvR/gu+c6fF8w3pPbPWjmyUum82j/ZP1/7p2j/HL7/7
uEfvq2eSnHd+KtG4QoVMdvx0f/v5/xmPJ3vB/VejhyU5Ndof8mSJzxhY+9GW
Jp+eCgj0454JU6oV6H8pvWfIgYiWJTdn82h7P+7av84Dx6/tOX5/+9f4/ezH
NX5t72c/rn+XNZ7h43P+0fnPJGdD9/8cLZQ1U+Cokn9tWXUjINCPe5x6d36t
FJvec//EnMtVz2fzaHs/7tq/v/Oj7TlOf/v3d378jV/b+9mP6/xoPNtr709X
aHeSE33vdLp3C2cKXFW7TMSlyIBAP+65vqTa1qyP0ntKNY3PXzs0m0fb+3HX
/v2dH23Pcfrbv7/z42/82t7PflznR+M5Oz9njeeHkpzRFZJLl303U2D10z2G
9bkbEOjHPd816XL65dP0nmPT365ZNyabR9v7cdf+/Z0fbc9x+tu/v/Pjb/za
3s9+XOdH42nf8OMv7h5PcoKaTf2oXNlMgSNypGu8Oy4g0I97Kv+R9NWAlPSe
PFs3f1Y/7t/vXb7t/bhr//7Oj7Z3fa/zs39/58ff+LW9n/24zo/GU7dWzvcm
huw3O49OGf7jrDhH3wMHP9w3rcHd/abnyqd9+kyLc26tSTv46r6LzpBDPxRa
Gfm36VLOWdT0xH1H3w/ffOfvS18lbzNxvZecHDQ73tH3wx+SJh4q0nOLaesp
/NO+/A8cfT88lbT9SepPNptl649EXmv1wNH3Q7q+H3I/+n7I4+r7Icep74d8
vfp+yNd71/t6TZ3Nk36t3vywOZOwtcDoU3cdfX8eOPujxV8GnzABrUMut58S
46Sv1bb0iUc3HG6v75ncPrd3e7M+9XRzc+cp8+pJ/vVPT0Q79u+SXzV+drjN
BTMv3Y46TSZFON371LnR6Y1Qh9vbv8dh+97e7c2AyKfFbzYMMZV2z1pfc0Ko
E5K334NxQbedzb8VW1W5YojZ1Wnkq08Wh9r3kdvHNfzmYckK553+TQc2LDc9
2HTMUf9sxwNh9v0dXanzw7ofBZnSBdM2i78Ybt/fWiP6/PLP4gtmZpdlHap/
EWHfX7reX+5H7y+Pq/eX49f7y/Ene8fv8jDveTCTz5bYvrvQNfPLOmdKncvX
7PnP9Z8/myZVu25mXIoo2zrrVafJD62mvJvW7dtTKt3NWD7Y5YFed+1f7xe3
b+Pdv6n/d6kcW/LeNj+NL1HkrcNB9nprM2LtvnS5Qs3BD1e8qpLxgnMma7qE
C5muuLxyn6EnTe0g58APl3ftXnDL5J25KPTXycH2feH2O0Z075Nr90EnYFba
DkWL//u7JzTy4z3xl+z7Rdf7xf3r/eL+//Hu3+Ufe8fper36vHD7K97Xaz5b
4uRI/O6O+bBAlaf3O520vToQvLtIk6N3zJ48rQvXynrcXs+lGga0nD0xzNyp
7qwslfmQk+76uuVN1l9w+dzynzarNvMfl49pN7xK8O9HXL7Y64bH1XXI7Td6
9+8av/rD7XN5x2n6PipZunqRcFNsT3DW3pP32dc1fuKAf1pvizAj+89usj3b
Mvt5HFNqxYUKZSLMigFj2mbNt9F6Upavoou+GWneeHiuS9ki050FJXqcaHLn
iMsb9chxv/GgQy4vvbXyxzVv73OyHa+apl1wmNl/c9LrDz4ItNcJt6+xb0Ho
wVxbXNvr+uH2vbzbG74ufd75uuTcz1bv63J5F+/rcnkb7+tynWe9j5Vm//5s
anSkGfLxf34MGbzErm81NzFsXs+/Ik2te79+tGrATOvfd04d07V4pJm75XGD
D/aNtJ+7iE/uF+43Jsp0vFJ7+ob6m+x6WAeK/JNvW88oczEpZmHvr/+yHhR4
tcDt8lFm6Kamzd/vvMp6uSmDenZbE2liN49PDFk5wzr3bz+n2L+c+5dz/3Ke
B33eeR7kPA9y/vvb5e2/3z+58aITVvLtnr3e2W2G5Oswq/z4+86whD8T51W8
4DRo/s/B6713mLq7Jp8//2m806/BufPfx55yJrY/W2Xsmq1m1fMr99ZdiXeS
Xx6vdz3VYWf4mowFYsI2m3LLc3U5VeWBU75l/XdHNdvhtJ/YqdzkQptNrfiE
tLfbP3BGF/q/+wNTnJYHOiW2G7jZtGvz+b5LjR84PzQc8cmv2TealoMzVSzV
YKtZ02hMtT/j4p2iqZ70LTXpoEnO+s2Vh0V3mjYn3n/2cYl4Z0jWYadmjDlj
hl+pteHW/v2mzY+NcvWbF+fMvbB+xI2lF83r6MmF8n571NS9m25R7oexztKX
hwv/eu2aU61saNpaVw+avmHPZwR1vedMTNjysHPsZefw/pbDvu94ztQNbNTm
VUSk035yxKBB3952igyZNi79qZOmTZ7yH5UpE+NUTxpQZG73m86xTgNvHdsQ
bMY3cnq1XBXmjI5p8GhdsVDnzI1BV7J9FGIKFmp9s86cUOfDFavf7VT0vLP1
+MCe3TtdNCMXrMiTPm+Yc2FqEaf2qFNOcsvTY9OkDTYPd2xaMq9CuLPxs5rZ
H4ccdnqfOHW2Uv4gs+rxpT3P48Odkk75PNUO7nLOD8/4T6eFF0zSJ6e6VPoy
wtn+9OwXfX9Y5pQYdarfsRUXTEDu2E/LN4twhpYZfa7/mJWm84tTswL6BZli
ixtOD1kV7jScH/Bo4UrHXFkzKJcn9JJZ0j8iXY+boU7j2NkzWnQ7Z8bePF37
2sNg4xk0YWTVH8Kcid7XZeK2n01d/ewVU6z9bx3aJt9wBi4dWGFJ8yBnVM2P
Gk+cfsWcWlT2xZT2N52gLJ1PHXk/yHhGDLm6aO81c6d19Z77Q6469bznzWTN
f3bH8cOXTdXvLrf/aO0tp3Rylwova9w2Ye3f/WTxsRvm0cHw9enGhDiXc20s
WKNasNP66OX1ByrcNjsP936ZalGQM/TXEy9avus4rSZfODVr7U1z7OSDHY1y
X3I6DCrX6XDfrc7YX9/9T9AbN838FecLhZQIceJS/u9+2minRuWh83YsvWle
N/00uUWJS87gjfVONyq11aTMXXRu+ee3TEyxhO6BGS46o4d8kX74wyCT0Cpy
0Nczb5vkus7SSikXnNip9ds333XF1H/5S3Bkg5sm7atuny/afskJu10mslT5
66Zdc9Nrd0So6Vw19Mn6g2ecx8OqDmgZe9h5uLBxydNP75jjFVpmz3XsqPNq
+PoXY4KPmAw5itbIUSHMBO/d2b7Dt0ecqadGnz925qyZGe70aRd6x/QqunBs
l47HnK3rFn32ZZ9g88nI2J4rz4SaOy3GzinX8R9nSc7Dnd7ufcF4nsRWv34t
1DRoXPf1mTf+cS6lq5e3TOEQs/7+6T9zfBRhui1bviH/kL+cx61nnh4ddtJ5
VqHatJTR4Sb76SYbDnX52/mwU8ntx1scdrKvzLTSszfclI7M0+CrZdud5qXm
BWbZstVJlev7Ry0Oh5nt5vTG7xYGOsV/HrLuZrElzuoHeTu1PBthgjtF35uz
coGz9dgvuYtUPWbqdn46+fuxEWbmrA0XOyxd6dz+qHrtvmWOmvGDB+2+eSnc
DJ/5/fofGmxzmq8Iylxy3iGTutuql3/cDjepJoUt++b4VmfQ2n9q7b132tw4
sKDWjF7/jifrN2My7v73us+Z4Xlo9VPmcclZ6beFh5naIW9OT5nhODNn3r42
dNd5kxz0tP3tllEm9r2IZumLrTNn5ocvrXtoi7Oq3/pCywpEmWsbDg2O+Pfz
MHN5jUlLOmxzJu7MVbhbz0gTXe5KlsA5/czOZhMylJ29y3n7xe+jKsyPMied
1fevrdhsAv9733WM2ZRlRaUJI6LMseI5z2c6utEUin9essybv5pd+aJaO59H
mcf3EvqcXbTWbKvVe3aL4R3Mp5mj69S9E2neju+3oUXlxeZclojWw6eOcTzF
7yfUahxlDoVl3jS7zlqzwpPnUa09W02TG5k6Fi4XZebGvGy9/P1VJnyhZ9iz
q1vMyaHrQt9LiDQ7yqzu2KzgMhOwflf/JQU2mxXBW3OU7xdpNlX7quTS8UPM
9v7NliSFrTE/5a07/5cVkSbr+lddFv003ezK892U4wUCzczE6fW3Dog0gVc+
+nlbt2EmKN2qvnnvHjBNp6wIzJsn0gTFzil2ZeJ4p3CDKk2OvL3PPBqV58Uf
ncPMzuzLMm8veNjR31n4falDtkctjv543xmVFD1yX0CYCfnsQpEnk446+vvL
2V/vPth0/I5Z1yp74e2vjjn6+0vJQb1Whu26Y1L3L/5XZMfjjv7+EnvNFJt6
4Y45YjbmnnXgmKO/v6Rdl+JcyRZmLhb4z4RDZY46+vtL7o+a/z2237/eeMl7
g9ccsr8jOE79TuT2+l3A7fU7kcfV3yM4Tv09gq9Lf4/gedDfI3je9PcInn/9
PYLj/MZ7/k2Wqe9Uabs7whQ73GvS8agljv6+xu9dQVXXzV+a86FT5LO5R/Ls
CDef/np+xoiE7Y7+7vay3L1Lux+Emc8PF8+w7skBR393G3Ns4IepxkeYWak6
/ZY8YKV9H7n/mClrq2eaH+tEFLuwofybEWZn8gedhqbdYt9fHtf+fa3mwBEV
FoabN/vkSlWhzk77/s5Y/P36dzeHm4qz31+4vNIO+/6eKbi31dGn4ebMjVdZ
D03ZYn+vHXS6ZnZehJkr+88E/dDkgPXtTcK/L/xDhHk49HrdXPlW298vo/f+
9aDNpnDTu9W+Rblq7rDO1/VGjiZjlw467/YFn9x4svS0y/N73fC4+t3B48q5
nyze4xq+Xv1e4+uV87zZv6/hPOt65vui65nvo65nXg+6njn+eO/1YHhd6e9o
PK7+jsbrWX9H4/4veq9nk+2LQ2vfyhhl2hzOu/ejAyvsusNHL24YuuHnaHNw
4Ny39qTfZ65di5xaLuaR0zji6aOf+0aZv98dFji7+Aa7jjC3H5y54W/pGsY7
I2uV6rC5RaR5892VZ5Kav2nXF34Qfyh5XO5o0+RUzSu5o3ba9YK5n81r3yiV
vWmEU/LE7wc6eqJM6WmjJ2Svs8auI3xr5O9dH5+MNLca1pm6f8A8u45weM98
IyYvjjRRG+MGVwqbatcRnlt0X/mL2yJNckLik95PZ9l1hB897T2oRkCUOfDj
1Dk79i+36whn77cvbd2ckea74JrHq2yZYH/P1vy4T/DKgVEmue3Dr6IPb7Dr
C6+clb/jtxcjzamxG6vMmb3Aeu1Rr3/Z/EukWftV10Mj3vnNOvej34ncj5z7
kXP8+j3I8ct5HvQ54nnT54LnWZ8Lvi/6XPD91eeC7+9O7/treJ2o57ze1HPu
Z7j3enNdz/p7Mbe/4b2ezbep4xfmPR1tzvbYPr9PnkC7Hvfshalz1kiMNW8M
ON9taeazJnRl/XVXCzxx5l58K7xGphiz5sGW1vV3HrTra3P7A61+7dO4T4LT
4Nu5bTb1jTGTWpd9/XujI3a9bG6/dvq1imd6Rjtrtq+NqDEx1tzYEzqzwY+n
7XXL7Q8drfbe0Y+uOZPS51+TsVuMObK+xPo+Tw/b6zniiOdU94RoE9Kg4pi7
6Q7a63ldl+LvrLkSbSbXX5h2YZ9Aex3WP/xWk2X3o03S5kk17jwJtPcHMpSK
P/lZ2hhTLTIg6IO5B+3vd7p+d3M/+h3N4+q65Th1ffJ16frk+dH1yfNz1nt+
DM+/OsztN3nPv+H7q95y+0Dv++u6fvQcAreP8F4/5tDgHxvPbHjXJH45oGZo
4fN2XfiuXdutPtYzzrS4vO5W34yXzZmBD8Y/j3riPP50wYyd4+6a2/kfz//s
wXm7zju3Tyw8/FWaiolO6isPxne7e9d0GnnrRELFILtuO7dveyRN6KBrbp9/
Yt7BTv/+TqX/6XXD/evfL27f2bt/w/Hr3ylu/8g7ftf50fMb3P6s9/yYymW2
1voiNN680/9+xplZb5tyyxeXjeyS5NDPl1oTVXl2ostrZv+wZpHvY12u++d0
3fem1/Hux+UXvcd1eSXvOM2Y8v3CdkfH//v9ot8PS969bfT8WMDg1LEP1ieY
wennLfx6Qrh5UX3y1wHz3Z5x7sGGLTYlurx2iZsrMreLdXm7PrfSPCpww+U9
vG7o9b37cXlW73Fd49dzNdw+4MP/jt/0uL7pg53RiSa09e7KvSZFm6pXT83a
MD3JoZ/a9+XK6+MTXf6gW2zoi7MxLm8+7drINsnXXN7e667jPvHux+X/eI/r
8g+94zTzsw/P8tvFh2blsn9mhEy+a9+vs7XbDR9a/JFp9Oe140Om3DOHT39x
u3NTt6/oM/nBN+8kOpvS/9L92bGHpnn4rXu3O9+1n1Nu37R9xbVRB6KdXrOy
7/IUe2RSRtX/e/CEe/bfBW5/8cq3mX41V13bq5PcPtS7veF49Lnm9q2843H5
Su/rcp0fXQ/c/pj3/JhqK9KerNvpsdn66HmHSdMemLO1GoVUO/3EGXu65oTU
uR+b1Kmr9cqyMN52j9uH9nmx9OeBbl8XfzT8We4ol/dfd/nDqusuuXyE113j
2ezdj+F41DFuH+Edj8vPe1+XWTY68989mz8xEyu3GD2tWaLt/5I0W3NlWPjE
ZFmeNeWfE4lmUb/Gn/yS4Ymz+1DKyHxzn5hmJy6EHA1MtN83uP2o2mNS50yK
d9LuWdXm6bjHpkeR9YHRGRLs9w1u37bWtk0VJoU7A/Pvq1Rr/mMzOf2xKkkl
E+z3h6E3ctzf3eqJCb731TuzWifa7w/cT999LwoOSDzl2l7/jnP78d7tDY+r
f985fv17zf109o7f8Pzo32tuP8F7flznX/++cPsl3vNvbn398dsx+5LMpLtJ
cwOXPrLfD9N+16HjuZAkU/fTIp+EnHxkNs8vPKXY60fOlRXDB55YnfRvZxNj
fhj2yP4+4vbRF4LObfLEOSfSzey+b8kTkyr4Qc4LZxPt76CuQU+PlO+RZN6N
nBMyOPcj+3uH+6lbcvSJ/FVuO1X7R1eseuyJuRvdouDDrA/t97rQhDNRP2RI
MiMfNelcduhD+70uuU3XjL+VSTLDV8ZV/2TzQ/u9jq7vddyPvtfxuPpex/Hr
dwHH39Q7fsPzYP87XJxPff/nfu57z6fr/dL3MW6/3ft+mSPNij9sd+6puRFe
pcmqDk/s798+Z9KvnZMz2Qx8UHH6rVNPzNTiA3sWXPLQKVE0POjhsKfm0Lxr
pbtefWx/z3L72SUKTS0zKMYZH1LswjsBT02xpMRryZkf29+na47tKHx94FMT
8KzsRzf+eWx7vmx16dIbgp+ad5fUjF3b7Yn9PHL/Deo1uPdywnnX9voccfuW
3u0Nj2vX9cM47bwWeL36Xcb9L/C+Xtf51O8vbj/Tez7NgaBc6T/elGy+e7/P
hi4nk4zuv12quP1Ru6bPzPq5nutRp5+alHzfHmoZnODMuV76/tByyab8521q
P378xP672fJa8XWV9iWb+l1+G937VpLt3sqBeV6Or/rMjI3+OvfMP57azxf3
n3GYc7/w6zAn+y9/fN8xf7LJevrMxxGXntjuLerTtl3Tz5KN5+CkDGlLJdnP
17H1X1RZ3jvZFN/0+/0yHZLs5+vZ9kmt2g1NNoMPt8r398Ak+/mi6/PF/ejz
xePq88Vxqrd8vfoc8fVm975ew/Om3vI86/sA3y/dX+L+X3nfL3NkzndH9vR6
ZrbkeT3/1bOn9t/x2ktaDcyTKcXMn1jo/OhXyfbftVqzOtUuNjHF3P64xbsP
zjwzRWo0GtrsbpzTuEPuwByLnpkLm3ZHlmqcbHv4ccRyz+2EZ2ZXz7Db8cHJ
9vP14a6LbYZVTzEFw9anrG3wzH6+jl3tdvNK3xQztGfTF1f/eGY/XzzusOOB
LwdXCnJtr88Xt5/g3d7wuPp8cZz6fPF1qZM8P/p3jcct6T0/rvOs7yc9F0R6
us1NMe0/2Nvzaugz++/R9Mll/5qT/bnJ/mXDjZ1Wp9iOrRrwbblPf3lupg9Y
+XxXq+f287UyKeOEmKPPTa7ILj89/ee5GTJme848TaKcwEcRjmdxinnl3Hj3
9b1n9vMS3/7u5HJOinmS4f7EAsVT7Oel4Hd5zcvgFJNy6HZSXP0U+3lJd/TX
zbVvp5iEPZO7VvsqxX5e6Pq8cD92/SYcV58XjlOfF75eXed8vSO8r9fwvKmH
PM/6d6r0V9Mzprv63Lzf4/5P6e4/t116q/L6BkFlXpiUMsVyfNb3he3S7dT5
p+X79/9vGjv3zoCwF/Y6r1N6bpeZf70w1bJVH7Gr/kt7nX+RkFw55NYLc/FJ
mZld576013mmtjuDN77x0jSc3G/f67MvzYi+84s//umSa3tdn9x+snd7w+Pq
uuU4dd3ydak/PA/qzMb0LeYOSv/S3OqRrVeaay/t53FpgZ/XXyn90qS+eXDU
sqyv7HU18eLe6lXrvDR3v50cXaXaK3tdfXprfbkbLV6avcd+u1y3xSt7XS0K
+z6o7tcvzeqy9TM06vDKXld0XVfcj64rHlfXFcep64qvS91IuZkyek3PMLOn
U0DV+TGHnOEzh6bOHhzn+jtd9nKL3ou7etfJfbPIgDqX7pj7g8psGbvqmLNm
TcETq4/EOEcHzyy2du8dU/zWr11uNDnufPDf36dRTq+LS8v0P3bHNPy9ltmV
9riTff9nX16qEeGEP3ZSJ728Y3be6d/r1eKjTvrjaWp02nvH2Rg6869P+4SZ
+G8X7Jpw6tC/n/82LeOy3XLK1Ajs3Ll/mImJuv7sp0WHnDZOx23ZNt80PbcW
Xl6xcJgZOOf8uJlnjjgnAp7VXBQcaip+OGB1kdt3TLpvjq/+tvsx58zF32v9
HRFmtpWYs//C/jtm+nf9Sl2qfdxZEjNoxugckabchWblowPvmPSHR108Vfa4
U7TRmISKnaNNzTizu/SDOyb7G+OTK7466sx9OuBMhsux5krpwJNHW4eZRSXf
zHup/WGn9ImbLz8ZFWdKJGZfc/N8hNmVe8qJFkUXOIcfd1/eMSzRmfxei2cp
2SNMqj1Z6uVvsNm5kH/VB0fyJDo/9j89+vJ34SZ17ZjOgw/tctp2nfv7nx8n
OMcHen56eT3MROf9q0KFJMfpfPSvNGO2xTsbLs0dend5hClc+uqSxReXO7c2
/bm974AYZ1DErDFflYkwyyP7NYrLudFp/bDhsRvzo5y+7ee22xwUbu68Mfrr
PT9uc3pWaL9g55IIJ2b2vU5fLw834UFt/k6duMP58ZtxTy+NCHNSYmKOVFoa
btLv+897ubLsdBoNbrI+U/VQJ2zj93UP/hNujueN6np90zYn66Fp68//et0p
8/j7Je/VjzCt6/ZMNebr9c7oS59uOZUpxPl854x7+UuEm75vZ2hzr8k+Z+za
KadSl7jitF926o9TDSJMscx9Y7vkWe/cOhvbqfmPF5y/0lX+qdxfEear7t/W
ST65zMlaruEHlSLPmqY/7u/bdkKESZ5TckrhL1Y6scPSt+t8Mtg8Ts71Z6FU
EWZm0n9++Dxls/Nq4N77v54LMvvG5b20tWCEOTB9wvw57TY5nbM2Kbdr7mVT
Y8dHHT74PtzU3RvU8NzmXc6qrUOPNm8SYvi6RmZJV6/jwusm/da8k9+OCjPT
G28euKef45R+Lzhfmbirhudt7r7ye5uG3jajY5fNL7Qs3BRss+VZ5jd2OmdG
Tcl7tkaYWdBx4MZvQsJNlX5DZi4325ytIaM+K7w7wnRP/WJSXKcIU+Xyla9z
jF/jrNvw85640dEmZkGNmP35w03LCbV2TA/e5/Teu6nohNEPzO1e31X+cNi/
10+R3hknTP3TOfRxx5TfpyQaPudQ91LLgAtfP3JeHe69tdfqSLPm1dhxRfvN
MCElyl3vvfKhU+mnPvP6n4syW/681apBt21mw7Ab9++1uO8MSDwzvOiTSLMl
x5f3ii5eZkq8sWrSFxfuOcFXD46/VSPStD4UeOJut37OvYdtjt55/67jCTg8
rdj70WZbw/HZr3ffZfZ2Ch1051i46zm6h01LnTlbIMxZOmP37D/SRZlx2Q8E
tRm+wozocW5l/k9CndVn4l5W3xlpBj4rkvzXf2abZwv2flNm4g3X38vajlv2
ztCiV5zml3o3SnM00tR/vKvnRwN+N8/KvdfsOxPsZOxTd/KIalFmas0X30z2
rDYlth3KWnLtaWfVggfLzuWL/Pf9d1qc/nGcU3jIWxGDLp5zzvebk7dmUJTp
d6Hk3Tbjt5mI/dNrV6wW6LT2dC2Wv2KUiZg5q0OeEavMmQyNUo2ac8hZ1nzZ
zUb/Hrd3w+Sz74763Rz4T+5WPxQ54lzLfzz0VpVoUzb/X12+m7jLbD7+45uZ
Oq1ytp55kXPE1Shzq9ulxxejtpnzS2vFb9m03jlYtt5XX2yIMilnF/z015ot
5vO3XtUfV2ejM/b6jCONa0WbPZWu5rx9d5dpXPHVwbHzFptJG5ccKJAYZf7q
vr3Mhvw7TMYCRQo1vzrb9GrQc9jIC1Fm67Uii54N32aqmm/uf1BuhsmQ9fXK
YwHRZnHudTOaR+4wtS4u7t4lwy7z54PuJvvGKPNnfAun3tYtpm1ivbDRy3eY
56kz1hs3Ocq8UzI67uSLTeZFnbt/B63ebmJDT+ftuTzKFA3IHHAoyxYzPuXt
d0LOHzax668NvvVBlInqXuBO/herTLWJK29m+OiQubVgaLqyqaPM+5VbZkpT
YoV5ka5Fgb7jDpqR+V8+n/NRlNl4aeemHdNXmyu/JNwaPey0Ce4U3K7xskhz
ftOKVvVeTzNDMpeYf77uSfNejd8/79Eu0uw62KDNgRydzS9PSyW3rXvCzKxR
K3ut0EjT9c6+hjlfLDLp2297mn7zBdNj7qxvGmSNNBFDc7/Tttkk52T48FFV
ypw3vP7Dv7q8/dbNS67najKfjwr8tPc1k3C/6FuFHkQa59WAbucDlpndzRak
GzfztllTqHT6if9eJwcf7k1pO3mbOTNtY9jemDBTJE3dN++MjjRhvea/ke7m
aDPq/PLRXe/cNa0a/pyp3bkYk7VZxcSLm4+ZkPZVVhdf8tjpV/+LuttWRZuf
B1SdGt3igGm14Odjjd987BRoc/Cf9HEx5ky7/o+rfH/cZEg7e9U3Dx84/DuO
+r+s37PRHfLHmnP3pv59ZsYJk/Lf+/BRTtbfgls2zxpjKs1dtrbpqYNmco+l
AQc/iXROFv/90hc7Y02d9OeqXJtyxpT9ZU/dHzZddcp8Mn/X6tMx5sNx66ac
mHfMtI2cdGntmRBn6P3SBU9WjTGnYkufCzp1yIyv+HuVjE2CnRW5h0+4HBVt
5tZ9a/Spk4HmbOddNU9MPetkyfJDdPjVaFN63PFSSwcEmrJvbh73z7SjTlDf
et9Oexhteu6t5STmOWj6nehRfGyGXc4HZc4WfJ0hxmTeMKaqZ+NBc2ju1tW/
PZzlLC45qcCtVDEmx6Etm78fe9B8mOf82/V7rjN/54l/f0tMtBm56tqO85cC
TYbaDapXPHHAJGd69XHGK9GmdvE0SfO+CzSPLz8Y9dmXJ0z3wV+kG/U62lwZ
OKVAoV4HTdsGfWbvynTBHNx29mJwUoxZs+LvvF9vOW6mfLNrzqYfL5vSN96e
02bUPfP1yrkXEopeNJW6fdg7dvUTp8aWI01r5r1rutYL+LTAy7Pm1vSldePe
+9cbrmz825p7ZnuzOmk2zb9oZjZa1DzN6wSnTL4hRRa8f9f8bFLqDtlxzvR9
79f3ioxLcAplL9C29I17pseb538ZU+eSSVl2Jd/RJTHO3FHnYnK2vWsmNqpT
5XXb/5s3PyFbsz3RTo2pC+4XfXXXNPjdE5Sjb5CZFPIg5HLEdWdpsxPvXdl5
z4TNzJm24YmLJnXroAwVpt4wY/5zbGV8vvvmXPPEHHPrXTW101yuND5HklNm
7rGg4l/cNyOn5avwLNU1M7F0cNsuHROdwqeO/f5o/X0z7X7zK1NKXDefNCnV
L7pGrLP1ccDCNy7EmW2XPmxTpMMV88PLV5k65bvptKt3fFf5X+JNqpMhe2KO
3jQVy0+ZVLDQTROTq+AH1efdN2uvxJ/tHXHN7HFirjSrFms+OZv4R3T9eDMx
W4Y7U/LcNG9NOV6i8KhE0yuo4ObrN+PN6MoHY6ek/X9/b2q68ecFkQMTTJO+
nYMCboaZ3us/D+w5O8mZffHFm9PuxJu+c0YVmJ3ztjnQ72ihwV2TnIdZyudb
Wu+BWTkwxzuLSoeaaU3ata+1ONGJOhT0YbboB6bCnHv3Srx/x9QY++240v+J
dUYXG7buWPcHps6F3lN2dwk1Qw4HJhW6fcNpNfvZ38MaJ5gGB+sN29kkzCxu
Vv/Mwh9umP6XzqZ7XCrBbC145a+hN+6YAuF5lr/ZL9Zc2vtT57RTE8ypzp0m
lCodbi4P//Lggk2JJn7PtDZVNieat4Z+2TDL5SizPTFu8va5Sc7OKs0aHDuV
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
OGP8zzhj/E9dYz7/n7rG+J+6xvj/AOM2rAM=
     "], {{
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
        EdgeForm[None], Specularity[
         GrayLevel[1], 3], FaceForm[{GrayLevel[0.5], Opacity[0]}], 
        StyleBox[GraphicsGroup3DBox[
          TagBox[{Polygon3DBox[CompressedData["
1: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
uqzlwt3CQGGZ05JuoXBHSdRB2293eJrbS/4RwtlCB2Gw0Fo4Sxhi2kYYI5wr
dPLctHK6oea3FYaZthOGm7YXRgkdhXOEka6H8AMuj/G632lpx2inpb7BXn9n
CUNMkenrvQccK4z0emY9jRDOdvh+ob3D3wtThWlCo2zYu9jC3wlTzFtl/uPC
j8IM4QnhB2G6w6vNJ/yt8JjzN8yGbUq5jV02NnKDbNjQ2NonZsMuxx4/LRt2
M7bt6abYvCdlg48NfkI2bG7y0E98AOx99sEtmeCd6noo6xdhpvC0cIrrpE3D
vbcxFie7bNr0jTDZfVgjPOX8P7nfTwobhDnCXOFXYbbD64VZDmc1T6+Ivkqd
un45G+G0rl/KRniJ5Ps10XNFE+Q1G7zPhAnCw0KF4t/Khu4s0/UK0dfpW0nQ
N4QmHif8iU+Fh5z/K+ER4VHha1P6tk54xm392X2in18Kk5znA+EB4UHhfWGM
wx86bqzwhTDReT53ewl/Iox3Oz5y2nHCx6bwkFn8E/wbZHlbh9s4jnfWsA/W
2Q5irngWVddzBq2XDZtgre0jdMkvtq2wO9bbPsKm+NX2ETpjjW3Ds10GOg9d
+5dtOuyIDbZ9sCd+s32ETv7TNlSvbKwZ5Lq3KXJ3SzZkGpntmw2ZRpb7e57Q
tTdnQ45Jd1M2ZJfwrc6HPN5mylrp5zLIf2c21hV193Gd1HG70yLjd5iS7g/v
0wtKwlb63fYddgl9xRfBVsAvxU9l/8CXZl1hU+C3EMaGKDodtkKFwy2cD//1
TNNa7mfB6bBfqIey2npumcuWTotv2soUOcAO+sM2LDp7lW1wdPxq263YB1/Z
rkfn/2jbGbvgZ9vI2BFf2t5njr+wrY2d8bXtfeyLb2zvYzf8ZHsZe+F72+/Y
Mj/Y9scG+da2PPbFd7b3/7IuQbf8YH2G/fh+Zein20W/Kai+CtUvfKXrnUR3
FDbq+kjRI4RVut5ddDfhM13XFd1e+LoQ+cjzra53rYiy7sprPoRm+XiXmHfH
eE/sO6WpXxHpvi9EeYQ/LUR52wmf67peRdTxZSHasoPwp64PFz1M+FXXB4ke
KKwvBD1A+EnXe4vuJfyu60NFDxE26PrgisjzWyHiCH9RiLKpj3eMeZ+N99tW
K36Piujzj4Uob0/hh0JQeNhcewh7loQttrvD2E+7OYxe3V6oa327ncPo4ToO
tze/nnXpTsLO1re7CLtaB+9oHrbAwcIh1u3bCNsKLYVaDp/t8nawDt/B+dcV
Ypz2rwibgHy1rb93dn3YensL+5SEzbiXw13dV8Ldzd+3JOzEA4WDSsKWqu/+
Y28dYN557kd92ym13f9LnY/+YNPtJ+xfEvba/s6/thDt3U/4Wdf7VMQcr9H1
vhUR/t98CF0sW+cJnSzT5wrnWC47Oby703a2/J3vPLs5jvCbKj8vWi5s1vXR
okcJfxViTRzu8LXCNcKmQoRZM28UIl/OsnW20N5y3MFh2t1duNBr7GrhKsvl
ZcKlroO4Ky3Hl5t3mOOu8FhQRjevQ/ra0euHOtt5PXd03Xs5bVfLdFePHbbp
ocJh6PBCtL1MeEvXFaIF4WVdZ0TTwgu63ir8Jywz3SK8KpSInxVeKkTaRHjR
H6WSZ3kh4gj/Uoi5ZS6Xuox/hU8KsR/UET7SdW3RbYWPCxFHeGUh2sU8Pe98
/wiLhb8LMW8fCNuIX0t4R9eVokXh7UJQ+raiEH0tFd4vRNpq4V1dV1VEnvcK
EUd4ieuhjkWuh/l/pRD9Zow+LER7qfu1QpTNuBQ0viuzYT9h6zcUGpWET9BM
aF4SfluLkvDnu1eGrdND9DiF/9X1lmz4Xi29Bxwr/JMN3mcl4Qfi831SEr4i
PuJXJeH74T99KUxy+HOnxc/71GnJf3xJ1POfcLSuN6ODsQlKIm4rtkJJUD6m
PakkKDbjyabYlUcIf6HXhSNLgm4SDtf1n9ngIXe/o1/R9SVRD/352u3Fhzuq
JPLRDmSUtOQf6DFjvL4vCR8Pn+njkvCZ6f93JeHTwnutJPwi/Kd3S8LnwY95
pyR8HsKrS8JnQ1/+WBI6E592k/BcSfiLW0rC38OH+7Ay/Lo7Rd9zefhhb1WG
7r1N9D+nRe+mS7U2RF8WmpaETGBTf1gSfim++Nsl4e/RplXuE236tiT8dvrz
jceG8EfOR58/KAmfjbLeKAnfD5/v9ZLwFQm/VRK+HHW87/aSZ2VJ+ITwVnic
yPOmy4DXRMi73We47dxLa+A5z3g+uOdVLVxSGbrpssq4x3Sc5Yt5q3Q69CV+
HX4b+gM/kDA6A9+PMHoInwf/gPtVx7osdBJ+IDx0MGXgC6KvoPDQJfgY+EM3
uX5k+WZTZJl7Rie7H/jb6Fhkc1llxF1aGffGSIu8c98N+UauuQ93uMPcLzjM
Ye6xHeO23up81MH9uaPNu8ZlIOPXmsLD/z+lJPYI9Cd+LGOB7mUM8AXRnfh+
v2VDl+L7EUb/4//gD9EP+Kwx9poSoVRYWhk+4cWijR2HP9fM88ncYJvg+1HW
6bou99yf6rT4fKeZwkNvr83GWGN3UD8+HPYHFP8POwOflv5gHzAntBt7gj7h
H2PrkBYfETsFHw+/DfsGP5AwMsXeSBi7Cj+TtmLLkI86sLHw/eBhd1AGPh/2
BxQe74nwnhTv8dEH/Nc3va+9mA0f+Fyt2Z2FXYRzhJ0c7ijs6HAn83cV2nFP
WqgrdOFbI2EPobOwm8MXOG5P4XyhvnnnuQzCbYXtXNbZQj3ubwsdTKn779L4
1miJ8FCZyhW6+vunm4SbhVHVKlf02irt96LdhAuFR4WLhR7CBOeD94hwkXmn
K89S+iHaRrSO24Sf+nnNcwaX112YZEr+1kq3rVBbaCLkhYJwulDucDdhL2Fv
vsVSO08U3SqZXC0cr+uRol8KR+p6qOhg4QhdjxI9XOn30/VflfE91v7CAR4v
9Bn6cBW6U+H7K2M+iEPvDXGZY0S3CIfpehv18QG1u1NZjBfPe48RjhW6eq5o
6xl8+yUUhabuE+HThJz71sz8SqG5aZXQino8Lmd5bBjTU4Uy5/+uMuocxn19
0WqhltDSlPwtXF615wN9T5/Hqt3nC52FcaZdhBHC2UIHYajQRmgrDBHOcnig
0FxoIQxm/sy7X2jv/MOFdg4PEJoKZwh3C82cf2R11HONxnNEddRzta7v13Ur
XV+l63tcz5nCINOWwhdlIU/I0WeWS2R2nnCLcKvwkMqZLHq7yvncfPJ8bZmG
96XLQJZnCzd6PdwmnCw08PeBN7vcr5yW/FtKQ+aXlUZ9JzkP6U50+HaXcYrw
gNpzjegNas+T9LUswk/QV4dvrIo29BKdKnqpcJnwDHJGXmEma1S4zn1gXV4i
zBCudFmjqyPuOpXztNOSf4rQ0+WO95yzF0xzPZcLY5T3CtIrby/RRkJj4U6h
ocN3uE+E+wtNPMd3eZ6Z437C6eb1dhmnUr5wblmsn8ddJ/WNFs4xr69wmvOP
Ejqax372RUnYp+xrUOxW9lYo9uBfpfF95kLWi/qwiL1TdHNpXLMPbjT/OeHP
0vjmkzzXV8d3mAcp/VeijwiPCt8LU4Vp7EHi9WMdi35t/mTWozDF6Rr6O9JO
or+LzhPmC78Jcx1+WbhHGCS8JAx0eLlwt8MrhMHCEOEN9jbWu/CacJ95r7iM
e4UNwhzX8U9p7PfPC9dWxzel+6s9rzot+T8XHi6NZ6Gk5TvUvh6nXqXxberI
0tAl6LG7vK+xbw3wvkaY8WC/buK2N/N+NtC0hetjX2vt/rCvoSuaVcf+nlPb
+ruMpu7Tmd7P7jVt5TFqYd6LbtPdHovWLveh0tCd7Mej3HZ08v1C+9LQkyNM
6dto89HhY0zR1Q+Yom/Hl4aeptyxpaGPO3tO6Ad6+EGnPd/zRBx6fpzTkn+p
x4u+LjNlLF8wpT/s+9j62Ozs5djf2OzoCux+fBH2dHwJeOgN4vBX2O+h8LAd
8FW4t4eO+lv0n5LQQ9j3lIUOIe7fktBdpMWnQYdBeV53tK43l0R+9Bg+APnR
RfgA+A3oJ3wqdAw2Cr4Wfgk2EOsSXwR7BV8LHnYQcfgr2DJQeNg95KPd6DnK
xkfBDsDHoG50J3GE0Y2ME3Wj8xin/41dWeg59NvHldG/u0U/F7bqepDoB55j
5u19zz3h9ywThD80nzm/ujpka1/J6luWJ+ToI/OZ59ct38jF2+azhlYKw53n
Y6dFpj4TJpTGOvzMfuBA0XecD/ktrQrdv4doH/E2Ks19tk24xu/8qDJoP9He
lXFv997KsH14nspz1H1L4zkrYWwp5pZnsKz1RkJjZMd10n/sHe7F/ynsUxpp
yc838Q2d50ON74Me64893uiWT8vC1kQ3YxPUY/8uCxuijrBdWdgNtR3GJqgU
qoR7NM7binarChuirvMPUvz2ot2rQt8UhArrm6Lzd3A9O5aFTUE95MGm2KYs
ym3heqrLwqaA1hKez8bzD55dPJeN5xY8M3k2G88qeEax0BTekmw8zyDPIqfl
ucpiU3gtXTZ1Yx8kQlooLY17DayfbGk8O+eZeUlpUHjYECnnwabYWhrhBi4j
UxZ2wxHCkdb9hzs8RGN1GLq+KnT/McKxwmDFHyh6SVXYBUebd43LOKosbPr9
hP2tmw8ti7KwKQ4oi/xDqyPt5VWhm3cSdi6L54s8K+KZEnbGQcLB1vOHuCxs
iBLGoCxsiKzDp7hPWdsNec/xGZ7nom2CcvMau4wy2w3Uv0tZ2DIHu757q0MW
Lq4K+4O0OeEE4b/SGFOeg97kds9z23mutSAbz7SYe55B8g4Q7wo9Zsq7QlNM
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
E94Ul4H+oX/oBnTIwurYjyZWRZ/QneicqU5L/gXVoaseVppPRMcLDxF2Pcj4
kFzIPfrnxlzIN+vjhlzIHOHr3VfCN5nP+rstF2sSGbwjF2PI3N+aizUMb3Au
9CJ1THSdrMX7crE+4d3s8ljHt5iS/1O3l7H5zJS2r/IYMX6PVsezrgFVYSt8
Uxa+Avqb52c8+2J80f3YDleaHu75P9xztjQXcs86mFIVcj+/KuwOysPPWGb+
AOH5XMgreSZbdueKLs+FrCP72BPUz/M05vIQt2Nadfg8A6vCbsCPYk1iK6wu
C12LTbG+LHiPVYcfdVdV2BG0BR8Im4D7jzwbZM/iviT+E7YFzwLpP/sZOhke
9gRp4WFTkJb847Qvd7Y+eLwq5mYhulR0kHAv/RAmCY8IX5kiy/M938jCq9Ux
x7N4ZmQ+sv+NKWviW1Pk+nvLK3M5z3NPWas9t+wB3zkt6X5wHPpycS72oz7C
Atd/O+2qClmczTOxXOw1pHs5F/sU/XnJ80N4oWWXfeuZXMg6sv90LtY5YXTt
tQ7PtbzS1uecjzrm5GJtwJvlMlhPs03hDc3FOsOmG6uxPt/jPtr6+VzhVbV7
I3MmerjCf+r6L+HI8ojfJOyv67Wi64RjdP236D9CU10XhAqXt5Ows3CesKtQ
X+gk7OIwunxHpzvXaeEdVR71bBYO0/UfuWjHobr+PRfhk3WdCGnhJA61cPgE
4T/xtwor1YeMwl+IrhD+ReZEjy6Psmn3Qbr+VXQD60PXv+WijvPd3t2Eg8uD
D+9AXa/PRZ4DymMMCHd22t1tr+wt7GP7Ywf3k3axhl/IBY+9Hntq3/Kgvwhb
crEXkI72Pu/wVud7UXjW6/x19w/ZYq3sVx5lMDclzKXoa0JpedAVyHlVlPma
6InlUS5jhy1ZW6hjW6muUM/22R7Cnl6fuzuMXbaX+/m51l1e9O2qsLHquc/Y
odu7LGzDolApfKv024l+qPStRbd13dim2zh8huWIPF9jn4i+r/TZ8ugrfeO9
0+HC/YV4j3SEMLIQ/2fnv+01/2uH9kzF/9qhl6Tif+6XO91+qfg3/UWpOEOF
MymuSsUZKlDOoTgtFf/775OK81WIqzmD5QqXxZkPnP3AeRb8476Hyz3AdRI+
0nzq4Bwd/ntfc64OlH/Hc0YOZ0VwTgTnbNzudI1T8S9//unPP+z5lz3nSzRy
HP/2rzlzgnacnoqzDmj3qW47+U9Jxb/zKbeh8xFukoqzD8jDWRmcC1BzTgiU
MwXOSMV5CANScS7IAOfhXI67zeuein+DTEzFORucKXBPKs4XuS8V5wtwtgrn
NQxNxZkqnP/AmQ4tnHZgKs5cGew8LZ2Psto4H3ne8vwz982dj3ZwzglnJnB2
AmeTcBZDzVklD7hvHd0nzkvgH/5jnY7zAsY53C0V/wLhHyAdnLbmjJERrqOd
66E/F6TinyH8q6Sr8xHu4jjKLSuPtfi69yB0yRLvrezp6I1/q8Nn24zfaX8G
H+gdU/yq5cLd5eFvves49vLHhEuEnsLrwpDy8AVXlod/iD+0Qhhs3luOo47X
hPvM+6I8fDP8ts/Lwx8j/KXjHmENCw+Whz55UbjLbXpBGODwB8IDTve+MMbh
j5wP/f+xKX7he+4H6d5w2/Fxv3Kd+J2fCg+Vh7/4mSnte9Nph3svnGldiq/b
w+NyeXns9eiTy8pjfz/EPPZ09vgrzEf/XGmKPry2PPQTOuT68tB/x7qt6LBO
HnfKOMj9JA4deJXLOIL+VoVOXSO6TLS/x+tS56NNN7js44TbykPnNWAuqkLP
rauK8cCfxg+/3fxThDtMGwp9hFOF04QbXd7xQl/HnS5c5z7Rn15CI6Gx0NuU
/He6PHhrq2Is/uE9K9GrhWuEWW439aDzsNuw19DxUOwy9DwUuwx9D8UuwyaA
YnOhe6HYaOhVKHY3+geKjYbOeRM9kAv9hH3G/Qx00k+50K/ooS9y0Q70FvlI
V45s5SI/tgU23LPWncjLM7ZvnrE9td50tnU/dI7tBuhc2wfQebYhoPNtr8x3
HbnyWPfUPacq7L9XbHMt9Prf7D2AfeFByw72CHr181z0Z2V1+KLLlHe2x/sm
YanQz/I0x3E3C89YXpmbaZZ71sFUyxzhKZZdwk9YXpnXTdUhK3+orhleD/Ae
dxmslemm8N6tDn/pZaWf6/pvEX6rCjneKlot+p7SvJ+L+z7YQ9hBVeTPBQ8b
Ab8RP+x/+j8XPjE2yse54L1dHb7x8qpY39imrOF5rvNWr439zMPO+CgX+S9y
nfCG5cIuxr/FvsdPwz+bUx33Z8er/B/cT8bge48dY7nKlPH40XzGb7XjyPOT
41gr/1XFfBRUdmmt2Mdzuv5FdKbwtLBGeMrhn52P8D/CEuF54W9hscO/lcdY
0+9d81pHrB+hfj4o7W2q64JQIewifFMe6f4UFgjPMsfCfId/d3mENwuLXF/t
fOzd7NmbhOfM+8tlLBQ2msLbNh96gjzb5EMfEN5O15+Ux15elg+dhL7q5PbR
j4zwsuJeEcrzoQ/Y44v50Ivow1w+8sGjb+gzeOfno/+7CWnhpfIo6zyXDS+f
j/LQjYwNlPxNzCMum4/6XxVK8kHRk/XyoRfRk3XzoYcIb5+PPhHeOR/3Wxnr
WvnQf/R/p3zoM3g75KMM9GplPvqEPi/NRz2MS1U+4tCNO+YjLfmr8xFHuZ3d
19393SdjUfT3n1DKPkj4VWk3CCfqeqsoBxIeJ/yr6y3CnvmQdWS5ulbI3DaS
zz3yIdPw9soHH7neNx/yivzukw95Jbx3PviEadMqr4nj81HPf8IJ+aC04yO+
UxXGCbfInjtROMk2fjuhvXCDcKxwnHCbcLLQQOgtNBZOFW51Pni9hEbmfaJy
xwsPCQcK68tjLFgD2Ezsf7e7vFOEO4WGzl9dHWtse9EDlHddeeTfLx/9Xiuc
mY/5YJ5PFhLLXcd8zBlz3tzzwHw2yoc8Mc8NLWeET7HcEz49H3KPLHbIh6xQ
1mn5kHt4jV0Ga+hUU3gtXA9tOsf1I4/nmrLGTsrH/CeWHfYJ5mn/fPSJfjZw
P2hTG6FOPtZu63ysbfaDVvlY24TPzsfaoK0tPR7w2udjncBr6zJYK+1M4T0l
XCNcKzwpXO3wE8JVDl+YD9lC1rrlQxYJd7HsI6fdzUc2L3Accn2R45i3y4SD
hUOEHvnoM3N7sfmEL3Ec8tLTlDXU1eVR96WOo6zLXd6h7sNRwtHuw5EOXykc
JhwuXGf+McL1pscKN+djbbBGr3B55LnFcczbrabI2o35WMOsrZtMyX+Dy4N3
m9Myn7ebImvDPB/Mwx2OQx575UNGka8++ZAt5O5O8+GxXtln2Xv6mo/M9s/H
HorOGWDKntTb5VHW3fnYm1gTA02R2X4uo4nnnHE6QrjHfNbZvfmQLeRuuNuO
fA0RzsqHnA41pW/3m49sjjBlPY00ZY0+kA/dg34YnY81w1oZ5Dqpb5TTwrvP
9bMOxjgt+a92e5nvB10eYzTO44ScPpIPWUTWJuVDXglPzId8E37UfGRzaj7k
DJl9PB9yhlxMyYdcwnvW88ocssch98jpAs89vMkuD7l+zJT8C52PuZ3gfKyt
aa6T+p7Jh4wiU0/nQ3YJz8yHrBOeZT7yOC8f8oqczsiH3DOfc/Mh3/Cmux/w
Hnad9H++89Hu2S4PuZ5jSv7rtS8fY32w0nLAPL/huUeux3u8GYtF+ZBpZPA5
95Xw0nzIHDL7Qj7klX8nvJwPmWP+l5kP72PPJWUvdnmsj+X5kGlk+SVT8r/o
8uC96XbR1ufzsWao+xXXg1y/kw+5RNbezoe8En7L/SP8rvnI6Yf5kDPW4uv5
WAP0/4N8yDS8V102MrvE7aXuFcJg53nP5SHL75uS/0br2+OFm4UTrJtvchzh
DZ4b5vZ3zz1z+FM+9m728t/Mh/eH+cjmn6bI7+p8yDdy8Vk+ZBG5+NyU9fGF
Kevmx3zIFnX8almhHevzIYuE1+VDdgljEyR8D28dn+FbcdsNZXxvb/2fNm97
4VO3ZTvbEITrFEIOCK/Nx3qgji/dLtb3z+43Ou2XfKwT0q1xHOGvnJa1/rUp
a/QbU9botoWYY+yj8kLIN3JUuxBxtKNWIeaMOd+mEJQ89AeZIA/9W2EZ+cdy
gAxWF2Luyb8lH+sBeS9V/GuWkX+dFh72UEkh+FWFkEXyFwshr8jv9/nYs9g/
fvB8Mk+rHMccf+v+sYd9Z0qevywL7EkbTVmv+UL0m7VeWYh6qLvg9c/62OS0
rPWKQsTRJuzBlOce2d2ajzCy+18+wocUQkaR38MKIaPI5j6FmEvm7dBC8OEd
UYi20sa9CyHrpNuzEH1GNncqxBwzt4cXojzy1CuETCPLOxZCbki3QyHiCO9c
iHzIwsFeY7TvwELIN/LOc+iOuXiniWfD5+fiWexox/Ee07zqeIfpoap4Fk0c
7z3hk0y27fud7V982gMKsWao46BC1EPd+xZiDJDl/Qsh96TbrxBxhDd77NkX
dylE25nnPQqxthmXloWQV+S0dSHkG1k+vRDyzTy3Mh/eUYWYV8o+zWu03DZ9
qdct+xCyy1ye5fLqWD/8bXlnD/vXMo7O+MdyvWsh2ogMnlmI9UD7mhdCzpDx
+oXgI9e7F0KO6c9ehZhn5n63QvDh1S3EnsEcH1kIGaEPRxeiH7SpWSHWDHW0
cD3U3cRjgFyfUQg5Jl1TxxHmfNob/Azgb4/3EveftYseu6oQMoecXlYIGULG
Ly3EvBLuXgj5Zm57FkK24F1ZiDVA/isKIfeEuxZCvun3hYWQe/Jf7Xro6+Wu
hzyXFEKeKPci14O8XGyKHPEfjz5CX2GhcEchfK/5hfDl8PMWmOKf8V+R3s7z
nNPi5y0yhdfDZVN3x0KsMdbiMKFtIfxJ9nHsJHQMzxDwL88WOhRiHe7ocD2H
z3EZrMt7CyHHyOmgQsgN4Xs8l4SHCm1cX3/PK3M4pBAyCu8+l9Ha/UEPIeMD
CyF/LTwuxLE+Bjst+fs5jnJH/H9tH+B6kJ27CyFnlHVeIWQdWe5UiPVJ+Fz3
ifAFhVirzHE3zzNz3KUQcg/vfJeBvF9XCJlmnd3lOqnv2kKsW3idnZb81xRC
RuDNLoRtgR0xqxC+PeE5jsPWeKQQcoO8PFkIOaOMxwshZ8jmE4WQdXjTHYf8
zjCF95Tz0a5RhZAJ5nNaIdYGZY12HOMxqRBrg7of9lgg7yM9xuSfWoi1RP5H
3UbkbqvXH3YftgW23avWN8RhJ2JbYF/CQycRh82I3QGFh9xgc2CDTHbZrKcp
hVir1P2Y4wi3c1r2nvamyC5yVsdljXH/mP8HLRPMJ/8RGuA55J9LrBPuu/DP
HGQUueN/SkPNW+E4ZPl1U3j8g6i/y5pXiPs4rGH+R3Svy5rruYXHv4b6OQ//
Durr8ANuI+3jfz6DnP9FtxG5nug5YZ4mFGJvYp7Guk/I3UOFkGl44xyHLI83
hTfTcoEsL3fZrD/+s3SP637JcYSfdlr8j2dMkV3OC7/R+zJnit/k8IV+Fspz
xMb+vxH/OWrkfxERbuh/NRE+1Xz+/XSy/9vE/5ua+v9P/Cupif+3RLjm/2v8
j+30ivjnFbzTXAbhk/yfJ8pq4PL4P9IpptTNu9OUwX/a6vgfT/z/qbb//UR4
W/9TiTD/hYLPf+P4pxb/ceNfcfz/in/Y8V86/rvFv+Tg8c8z/n1GW0/0P6hS
/pcT/3ji3078f47yav5vByX/8RXxTyr+b8X/5Piv3B+F+B8X/5IjzP/xWM/s
DfzXbqrD/FuP9cNaWW0++8QPpuwT/MfsKcsC7X7UeX5xHHP+rctg/fGPO/Yd
9qSfTcn/o8uDV+3/VfEvq++cjzbV/PeK/2DxzzH+ZcZ//vjPGP/XI8z/x5gH
+sa/zODX/NsMyr+ujquIf20xLidUxNgwppX+xxZjWuF/h1HfMRXxryz+mXVs
RVDy8081yoPHvD3i/tfyf7j4dxf/LvvS/DuKkhuhoXCLcKJwknCzcILD1wpH
CUcLNwnHm3e70MD5bxNOdvgq4XDhCOFq0yOFa0wp61bXQ54bheNc7nWu5xjh
etNjhZZCLWEboZlQFCqFM4QKh1sL2wq1hTOFaudp7rRVQgtTeDe4bOq+WNhP
2F/oJuwl7C1cIOwh7Cl0NYXXw2kPEC4S9nX+C51vn+L//d8QOeJ/eqstp/wr
b5Xll3/H/WgZ3M//buP/fPxb7xvLKf9xW2P55f97X3sd8F++by2P/M+PfKxJ
/l/3U+H//u33s9cE/01j/lnz/KPvO6+tl3Q9ULhHuMR9OlBoJJQIpUJ394l+
XiocJBwsXCkc5vnu6XzwrhAONe9llz2oIv4H+L3X9yuOu1e4zOUdIlxuSn72
GnTDJK89dN4D3l9GO7xY+XsLfYSFwh3CncJzpr34v5z5fYVFjiPP847rJywX
7vZYLBP6CwOEF4W7zHtWuN11LHU+0k2riP8I8j/BqRXx3QrhKRXx/QrhIcJZ
Qhv3uaXQSrjPtLUw1Py2wjBT/jc43JT/D46qiH8P8l/CERXx70P+Q/iC20tb
73daeGMq4h+N/KtxpNOSf4Fwm/szX7jV4XnCLQ7z38b6Ff/3H0fo7h6LZkLz
ivjP465O18X8mv9HQmv+iQhF3i+qCJnez3LRQjjT7dvFZXVzWmT5YqdFxgd7
nBjH5yQfdwq9hFkK3yDcKDxREf945P+PT1XEvyT5p+STjiM8vSL+9cg/H2eY
kmeQ28LczHS+64Q5wk3CzcJs10P4afOvF54xpR1znZZxHO25Yg4ecD8Zs8eE
SypCPrAVsKuw0dDf2EmE0fHYMdgs2Bbwa/6tCMVew27g/Tl0AzoYu2q59Qe2
IGFsBMrADsKGwP6r+R8nlPzYF5QHr+YflOTHpiDfK95fsJNmeR/B7hxrvfKA
w+iqUV6fH5mPvfaxKfYadsDDXttfen0/4r3vadex3vXgW2BHYP9hG35mSv5P
XB68ppKDgvUBenSp+4Btgf+J3/mQ5RJ5HGv5Rq7HmSK/E8xHBh825X+gE035
x+hkoYfn7xHLNHI63mVQxySnhfeg55z6HnVa8mPrzHP7WAfYT9garC1sC/Q/
tgN+FLb2rx4Pwr85jvxnVIR9QB5sjmcL4X9jX+BX409jHzzvccE+wPfGX2/u
eqh7s9PC2+gyyP+P05K/icY377E+VSgTcsJppuW2G7aqvJR1fCKkrf83Kn5T
Rej/lHkNzM9Yx/4g/o8VoT/+EP2zIvTqT6I/V4Qugq6pCJ0E/aUibI2/KqIO
bJT/KqId2BZbKiKMvv+3IsLYBe+IvlsRNsF7ou9XhB3xoehHFWEvwIeHLnyN
tVcRdsHqimgrNgHtpX3YFP9URB3YBLRrbUXYPfR7c0XYNX9XRDrsHeIIY1OQ
dl1F6GHo+orQq9BfhW8sf4+5fWMtv986Dp3zleUSWfvalDzfmY+O+tBySX76
hB5if/3SsvuI+0ncEI8LuoQ97HXHoa+wseB9IHzhdUL+zypiLbGG0Oe/Ie8V
YSswn8wTOp445hi7gf5tqAhbAEoebJBX3cZsMewGwh+736y5z10PdX/iONZ6
xvYHeT51HG3CXny7Iuae/eKtiggj0ysrIszZtJxHztngnEc70eGvHMe5o5zL
y5ninD3OGbSjHeas1lEOc/4uZ59zXjrn43K2Omewf+B8nGHO2bkDzXvNaTk7
/RWnJT9n8XKmJmdmfu36OVeTc3E5p5xz1DnLkzOzOSv7KX8vS/hpx3HeMmdz
cuYt57q/aMr56stNaQdn9HKGOmencwbvQ67jc9fDWHxiPjzO9R3rPB+6T4Tf
sIxgy6xwnzgfnjNuOXueM9h3LoaMIte7FkOOkdM6xZhj5nOXYvDh7a7rVRWx
9rD1P7Is4Bt8YLlmf3qzIuayfjHK+74i9qoVll/2KdpHOvYt4ghzhjDnu3Ou
+07FWEu0b4diyDfr403zOROeM3rvd39ed//Iv9J8eHwjx3/x+N/e76b8F+EP
U74vrVcMOaaOHYtRD3VvV4wxQH7rFmNdkW77YsQRRi9hK+3j/jDewy3H2ILY
iTOL4cvhYy0shu+H/TSvGL4fPtmzxfDr4M0thh8Ib775+HkPF8NHwtd5tBi+
E/7QE8Xw/fD5niqGv0d9C5yPcucUw4ek3NnF8P0IP+124fMNEc4S2gj3Ca2K
4dsNLIYvhw93bzF8Qnj3OA6fb5ApvD7F0E/opWdcNj7fI8Xw2Wj3LMfRjgnF
8PHo20T3D79nkil5Jruv+EmPmeL3dBZ2K4ZsnlMMuUGuOxZjLndyf5Bp5vO8
Ysg6snmu0yLjnUzhnV4MGUWWOxRD/nZ0n5F1dFQX17mHx6y267i7GH4y43V2
MWSL/O2KITfI0Yxi+G/M2dRi+HX4YVPcJ8JPej6Zy+nF8OvIM81p8dUeN4XX
3mVTX1v3lfqQM+4x4FP2Fhp7bno5jvBdxfDnafeAYthzhPt6DhkPbAX8NHxW
dDz+Hn4etgNx7PXoe3wh/DbsC+hy65tnnQf9s8Bh7Ah8A3wF7INlzo/exgd4
2vppvvOscVp46Hz8B3wO7Imlzo9ex+fEv8R2wGfDD2B/Qn+id99z3BjrHtbo
SOukkc7DnoWunub97vGK8F02ud/4sv+6Hure7Dh84h+clvb97bgl3hOHe1/4
yW2n/2vdV/yYYZ4/5GW85Yx7IWMsr8jpOMs9vAcch1yPFc437yHnY1318xxi
P472OqGs/o5jvod6nVD34GKse+Sae0zocvT/KK8r8g93G5G7dW47viA2xTzP
2XrH4bdhT8w171fH4dttMIWHbYF/jj10v8tmDY30OqTuEY7rYLmmXSWWY2xE
9Mwz1recJd/dezN+L34g93HwdUs5G0hpVwjlnE8m+ib5KyPudcrW9SuirzIG
un65GOGSyogjP59+neZvg3b09zB847KTv/npGK8G/u+7IL4l+ld5nheWCmmV
81Ixyk3473oxwildv1iMcEkqvk3iG6OC4lcq7i36mopvmeBxvNMpqfjOKeu0
hMvcLtLlK6N/5N/i+pcJO7i9fIvzn+NeoF+VMQaMy1bH0aadU/FdE33bxd8C
Ed7V3wgR3t7f8/B9Uh1/a8T3SbX8DdKZQm3H8X3SNqn4rgneto4j/I/qW+Lx
os/3e/6rXUYL4W3HISN/C4udZ7OwyOG0x4Zvxaqcr3k8Svrf91fMTT2PAd88
7envjvgOqX4qvmuib3s4ju+QdkvFN07wdncc4XLP82lxS+B/33o1jSn9X53N
Ymv8H4VX13UyXtt5zBivlV5j9Hkb/jlfGd+3VYm+q7j3hH0T6Uahu7CP6YXC
fsLF5p0o3CLcLBwkXCr0FE4SbjXvLGGIMFhoIwx1uJVwn3Cv0Np8wicLtzn/
/kIP17e36+8m7GXaVThWuEG4XjjG9DrhOOFG805wG28SDhYuc1sPEC5xHbsL
XYTOwp4u+wKhrTDM7d7DcaTbzWnPF+qbnie0E4Y7T3vhfofPEUYLo4QzhLuE
AcJpQl+hj9BMuNu8JkJ/oZ/Q1GkJ89xgpO/FPJqK87w5G7yiMuQYmT3d+Si3
WBlx7xTjmz/OBef88MrKiGO+d9L19pyfoetT3ZbewinCHcLtwtnCCPeno/sx
UmjpORwkdHAc6c503D1CC9OBQnNT+tnAZTPfnZI4W2iM0FC403U3Eno53Njt
IvyO1+Uo92GU9c97pug0vuN8SngyFd+ATk/FOeCXm05LxbeYnEU+MxXfmhI3
NRXff5LviVR8YwqdkYrvKV8QlqXiu0ro0lR8kwl9PhXfns5wfZe6vCmp+L50
cirmje9NH3O4j7BEWJyK7zwXpuI899tNOd+dZ5ach86Z6b2ddlEqvg19znl6
OY5wT9dJHXxP+YHwfiq+O53pcenr9lL39S6bsRjjtO+l4rtS6Lup+PbyQ5d1
r/Cq8EoqvqGlT4+k4tvO5cKLqfg2dIXwWiq+v1wpvJmK70Vfc/5hjnsjFd/3
UgZyepfLeMFxX1l2+ab0dZc71PkI3+Zx4qx5vjF9ye24R3jZYb7v5Jz7mvPq
oR+l4jvSj9y3ialYH5xjP8r9ficVz4aJ4/x5vhf91GXxfelb7tsgjwf18e3p
2+ZNcD7yjHR58G51eznvnufQsz3HPJee4zB6cohtKGyC+2xDocvxne6xDXGv
eS87bpDtiUHmfVYMXwg/b30xfKTZtgPudlm/Og5/7nOnxWf6whSfaV0x/K5Z
1tl3OT96FJu+n22dYdYxnxTD1sRmfN/rErvy42LYmvDqVIZ9+aHwUTGu4X3q
fBNsU1B2f9sLA1z3MscNsD0x1HWv8Dgxdodov7jc+/4G9w8/+Pdi+Mn4wT8V
w9fFN1pVDF8IH+i7YvhO+FLfm8L7sRi+FnlWOy2+1A+m8G7x3M4V9krFt8pd
hX0t63yHvXcq3j+At4/jCP/mNtK+r4rh3+KXf22Kz7q2GD4287GpGM9OsEv+
cJ/w0TcW474AvD8dx/2Av0zh/VKM+wiU9W0xfGD6/KXnnLq/cZ3w1hTjXgB5
fvaYET7eOha9e7T18LXCUabXCNsmoe/R/0kS+h57YWsq7Al09Tbmo1u+Vfyu
orsItRyHbqmThD2BfbGjdRL6Z3vrYPT2dqakq+201L0mFfYNds3PqaDYF7+k
wr6BtyoVNgF6fl0qbAXskQ2psCGwd75PBR/9/10qKG1dnQpbgfw/pMKeILxe
1wcmUVa1+4FuXJuKsqn7x1TYN+T5KRXtIryD+4cerpuEbUE/6zmOMHvkTh6P
r3W9cxLhb1IxfoTZb/4QfrdsQn+zjEI3eB/90+nQD/8K/wj5JOwS7At0zCZh
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
eZX1DPM9/uDrmQOYJ1lrMccw9sN/M/cwZ7JWgTLnsDbDnTmK9Q92hGHNBJ8B
j8CaCR6CNFgHkj58Cus30mfOh19nLmfeZh0GhS9gfQZvQVyswYiPuFh7wYvA
47DGgsIHsRYkbngl1g3MheSbdSF28E2sw/BLHbFGxI64WDfAQ5AP1ir7VUR4
1jSUjzmZtRE8GfM8ayQoczvrMPgM3Fj7UfesvVjTMK8z5y/2eox1Ffv37wnv
1ggZwvs2IzNYVSPKPd7umF/yeow1FWseeAvSY41H+vARrAmh8CyssZi/mfNZ
a0HhBViPMd/jxvqN/0w7YB1G+cgr6yrySxqsq+CH4H1YXxL3Ls4HfABxsSbD
Dn+swfALP8X6DUp7quW2yfhKeeDt+K+st/nP8IPoTcAfwC+gz8GczVy9lSnz
c1O7M+fXsx3j9+62Yx5A3wJ+4lKPHcyHzJ/oScATwFO0NMVfc/sl7QVeH3Ur
xxqxQ2XM4ei7dBQOqQz9GujBlaEL08luWzovzJ3o48AfwBegl7O/5y70daCM
QegKwU/gL+P4SG83l4N5Ht2gAyuDR0DPCN6CMNVsh5m9CvoQbXcvlxVeY09T
+Cb2vZjz2bdi7nxKeLIydGTO9twID8t4zTjdyHbMsbRN1iesoWmP8PH8P3g9
/hv8PmMSFH6fsQlKGNo04QiD3sw5Tg+dG+Zm+AJ0as61G7ov59mMLsz5Njdx
fcAvoAcErwBfgH7Q6TbXtx28A7o7J7sNNXQ5SG8P1wftoIHTJ/y2DkcY5gb4
Jngp1pidvYa92/u43NuEzil3P3HnE/zFu8KqyuAzoO9UBi/ymfBpZfA72L1d
GXzKarvB17wlrKwMvuQ9xwWf8r7Nkx3HJ5XBW31gt7GOj/Dwv587Xnjfr4RN
lcEzQjdWBm/9hbC2MvjpdTaPdvorKoMXx31NZfDN6+0PPvpLm+FfN9gMr/21
05vkPH5cGfz9GudputPf4Db3jcPc5TTfrAwe8UOXrUNG7VW4XjhaGCbcIhxl
erPQNtV8Llov0ZgiOtz+Vutf9RGdxL6A/Nyn713l5zzR+4WJwlnCvcI9wpHy
M1l0N/k5n3D2d7Ywwf4OkJ++otvIz33eY5kg+qn3Xu4V3YV32/W9s+jBoje6
DI14Q1y0oegRokOFIcLhpoOFQ4VBwkDhMNthHsfekOiYcvCyH7mO6iqunrKv
LXqk64N4t5S5l2jNmqoT5XmKvpslse6hjt+ojLXOPGGu205N+Ukz0TZrZcJM
+62dCTNtsU4mzLTX7UTrZ6Jd1s2EG/+sHuln4v9vS11loi1un4kwtF/C4Ubb
xS/haR8NMuGPNpiIljPRnprw7zLRRhtRh5loiztmwky7J++Eoc3ivkMm2uhO
mfBHG905E2ba3y6ZMNMniLtxJup0q0yUoaHqbTfRX8rRZnEnDG2ZuMkre3XP
ux5p65R1a+FpfX8nfFsZ68JnhWcqYx34nM2s8WbazJpvls3sLy4UFuCnHPb9
RJeV41/1L8fe5Hynzd7hIocZ4HC4saacI8wWBgsv2N9I///llbHOeU1YVhl8
M/tdLwqvK43FoteXY3741n0VnvoV4eXK4OlftRkef4nNrI+X2nyb417q8n/v
emGN9brTvtN5+ddcjvSvLcd4wP8vCRcLDwkPCl3ZmxTuFh72W7Jr/uet1u//
521X3np9yO/Qrv6f9195D/ZevzXKm6ET/B4p5gftl7dsX0njbVbePL0vF++f
4m9xGu+N8j7pf2/Hkt4juXjHdu3/vCOL23lZjSXCROFc0/uy0QdOEU4Wzpd5
kv3xVilv3vKm7WOmvHH7qClpPOFy8B7yFNcB5Xzcdrw9Pz0X7+Xybu4M2/37
fq7T7CI84LLyju9k00/8Vi1v1vJ+NW/o/pKLN3VfTeKb9215y3az/c21X968
5d3rP+zG2/ZcQsOb9IuEv4W/hIWmfwov5MIdt6VJhOUt++VCdd4GTf7/zV3e
4OWteN6Mr5GP93d/ttt/b/TSDu7OxRuyvC3Lu9y8z53hjc9c0Mp8vDcPJS7e
7+UdX/zxVi1v1vKu/STXB+/zLtN/L/IOaRJv/fLeMGF4b5h3izGf6flkvMfH
U/2PGftOs7no8Z3xvspzAOac0FE4RMgLnWzOeC6pFC04HG67Kj8HiP6j/vKX
0FLff4r+rL6zh75bMSbL3Eb0rnL0pSOc3jlugxOykacxwmjnFXqXcIJwh3C7
cLzpbcIZ7n/jhM62u1U4VhiRiTn4ONthPkkYKdzpOhjr9G4tRz6Hl6MtjrK/
k50+5tOdzliPyyc6X7dZHjFC9PfKkHHs7fnjdKfTwHk93fNBV5vrON/kkTH+
IuHCTMxDx9uN+Q9+4miP6V1cji2dPv5qucz4q+34MO+ZxphVlcRcdKbTbpEG
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
3UwZby4xZfzr6TSJa5HzyzjYpxDjIPmo7fiOFeoJJwonCDWE9sKBQlY4RDhY
yAkdbc4LnWwu8Ga8zZVCB+EgIRWO5t17ocw79MIRQsbx4S+xO241hWMcZjvh
NOFUYWuhi3CSsJUped3S+aXea7kchN9GONlh6juOU4TthdMd77a2w99VhRiD
qJe+hZgbMN9UiHmFeeacQvRbxoZz3S4xX1CIfkifO6UQYxPtt0shxibGrfPc
LglzpPshc8hR7oeYTy1EPyH8+Y6PMGc7TcYh3m0Z7jbHuy0jbD7e/Yk2dITj
pr12LcQ4SJ88sxDjHebj3NYIz1sxA90fznI6+Du6EOMC+TumEOMI5mOFETZf
X4j5knnyOlPmtGtNmev6FWJuYw6/oRBzLWGuth11PbAQ8w9z+42ub/wNsB3/
4LRC9F3q6JpCzKnEe7HbO/Pzya576v0k1z3zc+dCjFOMYf2dL8KfaHfm2xNM
GduONyXMRY6bMeZCU/735iT2T77R2FKRxh7YL6KVaeyJ/cq4LT/tkbszbiNL
Rh6P/yTOwDTTd0HfF6AfoO8/xOu00Pcu+q4m+wOR06ehH4yecHN955M4x9Iy
DZ1gdIMb6/vvcugMozvM46Pt0AlI4w3lvTSn7VmKN4v3E923FG8Z7y/aWsgm
ob+KHitvKON3D2FlEmvn5Wm8p4xdK+GtJHSw30zj3WTsWpbiDWLi3qcU7+02
L8W8+pvy1lTx74iedRI6tOjSlvR9CXoP+i7ruxs6B2m84duiFOEbWm+sk+x3
oI7Yx9BcuVMSemaHYm8d0I76biBsZo0vPz+XQw+YMx+/67uZvndCp0/4UX5y
8rM1ZdB3Xt/bUE59F/S9Wf6bo58ku22pF9Yost+OuVzfJX3Xp35Zx+j7V/nf
HV0x2W1PerIv14x3nPcuxT9YkcQ+xOtpvONMPeF2XhL6qINkf4K+Z+i7v747
63uavvvp+9Akzitdlsa74LybzDvh5yShozuAtVoS5yl6I7tI4qzTFeia6ftx
fV+r75qleDudN9STUryrzhviJ7NWlZ8b0nhjvLPT4H1v3mrmzebj5Geq/Fwt
P130/aS+r0emoe+n9X2jvk/S9xP6vk7fqdMhDd5ipi00JS75mS4/18jPsfp+
TN9903jz/Fjnj7fWeV+ad6Z5K513p3l/mnfQeW+aN6l3KsW705j7JqErNZK2
5DLxzngj+yWuqlK8N8471CW7Y+ZMF3qHhynszqV4H554dzMvyTvyvO/Oe9T/
vfcO5W3ooxX2UYW9ClloKd6UJzzvvZ/mMI1L8b48bruW4p15zP+9B4+/Jk4H
t8ZJ6Bxzvo13rulb9IemSehJc/ZrdRJnGt7X95okzih8qO/PkjgH8Z6+P0ni
DMQqfZ+reCYK9wkfJ3HG4p003heZJNwvnGeKP97t4u1y3ij/IIkzHW/L//tJ
nO14izViEmvhL/T9TRJr4rX6/i6JPYB1abx7xfvjvFF+iuPj7fPPkzhj8YH8
rE3inMVHyPCTOI+zMo13tMc6Hz0dB++df5rE+Y53qZ8k9gy+pF8Ii/RdQ/2u
rO9n2J/Qd0nfT+v7nzTe2OKtdd5c72Y6pSreYJli/r6m/C1kX0RhM2nIR35D
bm++fnJVvHc2yjxrldyekp+/RbNpyCA2p/H+13SX/5ck9jo2MsYksdexgfFQ
eFLffzEXpCF/+TONt18m+9/k05C//CHaw3XAO/G88zXDaRxlPpS3wk52HZO/
06viPXrqcTul20/t56A03jDnLfMOpXjXHMo755w55Oxha8YKffdAf4u8leIN
d953r7Bf3mxP2F+Tn33k5x+l0VZ2bYS8/XYsxVvphzi9Jkno0HMuk3ftmX+Y
kxqw9pH9IYwb+u6OrhjzWlXEx1y1exJ6+UdRb+7H5Gl75A7oIbOn6DRJrx5z
ieotWzPelie/B5a2+Pdh7ANKkdcvk9gb/4xxT3hB3xXyv6W+X9J3Rt8t5OcR
xX+c7NYnsYf8qb67Km/jhbuFL5LYV/5E9puS2D9bo+8NSewhf67vx+XvK2GT
cI774gThbNN7q+Ide96z56376s5vO6GaKfk+w2nyX5+036/h3xzHPcITtiO9
bZWHq5X/A5WHM+1Ovkvmxw8vxvtytJ2hQlHmw8zT/814TvtM4l3CF4RFVfHm
4Is2E+Ylm1kzXCv0L0Z8i+2GjIj+SD9cyj8RD5UphNwIO/pPH1P6A235ZYeH
T10ivFoVstklwqvsYao8i5nHRds5zWuKwQcvE5ZWBV/8ms2DnPeFVcFDv+I0
hjtuzMg7+e+syQ9wfP2Eq2V+1mVoVAheGZ56F/P3rAm29RoAPnRn27Fu2NF8
PGEaOhy8+U52x+1rxbubaBNhB7uznm5gyvq1vtcJpPGN/O9eiDDI3GYKz8HH
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
NvQe73FDx3v/+j77O9LhhnoP+n5hovepJ9rfEXYfUgoZTm/hylLIKKBXlEIu
dJnQqxSyIGhP7013Fy71vvYkp4HM43KHYZ/vKqFPKWQeV9htP9v19r7h1ULf
Uux593C86HQ8JDxYiv146APCicKdwh2l2I8fLdxVCnkFdrebN8RulHCSMNJh
jrf7bcLDwlphjfnIUfY3xXafl0ImMVwYVgqZxjD/D/bvxwljS7F/T74ml2If
f7Lroqv/yd2l2OvH75hSyFduFUaUQk4wxmU41nak19l5xN8jwhfOayvXPXXE
PmY/110D7poX6pYjvreElQ6/VFjiuKGvOg3oKy7Py8Ji181rwjKnv8zhKd9n
wqcuH/QT/5PVdqM9fSh8UIr2+J7wbina6fs2839edxq0wY8cZpLj+7gUbehj
u413HKvcFj53euwL016u8n9d7nip47ddfvaCbxJuLMWe8WBhUCn2Uq9x3R1q
u4Gl2D8e4DAHO9wNpZAVDXH4TvaLvw52v74U++LQ60qxX9vfadCm3hTeKEXb
esN5pW2usNto/yvMl/p/0zbRSZricnezHWb2hq91Gu2dJuZHhXWlaCv7cp8S
sknuC0IeKmwv7CTsINTnTgP5+034VZhj+osw2/RnYZ7wu/3VUpjthJrCfJn/
EDYLz5vib24S54if19h1oPfne6TxBgTvP7RBdi3sh2zY+drFeeNtiXbCPsIC
xfWn0+CNCd6XaF2OdyDaO/zeyL6FVuV4n4Lw+5fjzQj8tUX2a39NuItOcW3B
PR2iL5SC/i08I3wvfCc8J/wo/CA8bbtvhSeFb4Svhadsh/kJ231Vij5UQ/FX
L0dfglYTHrf7JmGG6UZhuukG4aVS+CV/i5yvv4SFptTFLP+Tn4SZpuR1muP4
UnjWeac8jwnr3Sam2h1zc9cxdd+iHG1ld/+fA21mPGnsMWVbm+vaX2Obt/F/
q+32RLuq5/pu5TpvZtrQ/3tX+yPtPfzv2zjNFv5/5K2522pT+9/RaTew+x6O
o7lpI7eJvRymifOws9vN3s5LW/tr6Tw1cZve3nmp4/TI51Z2I46ty/FuCW97
0Ja5P/Zwt0veJDmu/P9vlRzl9tfZ/jo6zfbOH++cHOM2u4/b/B6uA+qffsv8
zTjKuNnW8e3n9I/0v9rdfhu7PE1dZy3stqPr9mDH3dTp7+p67uD0KcMBrqPW
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
A3OjXBw=
             "]], Polygon3DBox[CompressedData["
1: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
+0uPZ323lvHN/Hbz5nnyvL1bizW5Nn0GfYcL3f/83p69c/1+0DcXIZtXBA/n
fVJ2L5nnx/um7bYMeLCM87MldD9wexHny297Ori1iPM8rhZnfFCeR+f6krbb
c3+Whf+uFudnHHx7zs4btI2Cf837Cf07eB16jDoSup1jtA+LeNbTnkfoh4vw
RbQxtTVfKaLvV/Aq9MvgvXr4LPouY8rwHZTpb+Z5rdfjnbwPnnnPflt+T++M
d6ddnt8ri9irn1j/XWWccc/6KPhb4D91PHPPnev1+er2DvDj6B9ZhG+2iP4L
/IeeX+2jfF91nLruZ9pK6PnB743wIfUl6/Aj4OeCr+b5uVr5Al4uYz+ur4dN
MTLPqGd10ZT7ynRlu3fsoDzTjvm7T32hblIH7J86Rl2zUOqRv9sWzrHeD+/q
1Gbcv/nhb4f+GmwKP8QzUg+fVN/UM39HM3TgPvm9ZtD3VH7PUaCivWIb9A/g
OPi1wQd+S/cIelfweZ4fdfPW4BP494sYOyO//yTQE34j+6Hf8b5CdwMTGP8C
/Fv18CnfyPt3aT3O4wtlnDfX1ifPt/flMGnPoPIMflg9ZKr34UnwYj1kqvfr
afCqsjDvn+fbb+1vnijiPK1Ujzm9f/3gR9fiTHqezvLM10Jm3Qzf6nnTFgBV
5Tn7eBL0BuAL6B/y2/kN7wE/Zpv0vaCuLFT36eMy3+e0TQS3gFuNbyhT6ZuD
vvwQejBYB34m/PvQF4JfW6PtIuiLm/FsfewPoK8BV4MrwVXgenA8/euC8dA3
gPWrseYboX/KNbq2+8B34FtwJ7grac/KHdl2RBk+jDpD3aHNou2iL7K2uq8I
+/qMtJ+WBVtBn536XvvgBuiDtAf53eGpd9QT6hJpddH6qVe0qbSttJG0leYF
h1fDR1+7jD3/PPfOb/EV+BLcBG72/RgzqBE20MwibMI90+5aT12Ud9E7+QD4
GUwBD4KHwGHNsF0218eHPhyUraEDD4XuBfrAPwV6NyMGYCzA7zcA+tRm+A5d
wevQh/hd+O07+Xt9Nn23AaAn9GnaMNBngFH6HuAP6BfBO9BnN+MsGCMal+vT
V3mV+Z6DPqMZsQ99Fn2XPs347blgNPSZzVjrDHAWdN9m0D5zLPTRrgF6M/BC
M+yzW9Le3559O7YZa9Pm1/Y/shlj9Zn0nf7TDN2vzTcs93Jy7q17ukUZPpO+
kvb7f5uxN+5pj5yvU2vsqc/X3tdn0FdYFPxC2zTwCBiS9NS0Vx7J57/G8weB
R6EHgj9bIyZkbOiCfN+1eZ9B+f2GtsY7++4bleFz6mvOn+tro68bOKoZ9ukd
GX/ppv3VDF/EeNIK6gr4Xxi7pnfYu+eZQ3ZcLug/Hf7eWtiYN8L3cb5a2Jg3
wPcuYqw6/Loy4hH9jb1lPKAX/RfXQkZdW0a8wL6zM95ifKUfdN+Md5zI+CNq
8YwrGX8C/H7Q14Ar4E+GPwH6QXA1/JnwQ6BPBqdAn1pErPUVf0P/aUX8Vhvn
eviT4I+pxTtdBX9GEXNpo95URnzCs9c/4ylHee9q8czBnif4nWoR0zW22wN+
1VqseZC2GvzP1Wg7D/5I+LVq8cyL4I+B38i1gouVJ0XYkr7jhcqWImKvfoML
4I9WztTCpzrQ76tcqYWPt797BdashU+4r7K6iNiBazxfG7eI2PJuYCD8cUXQ
fpPLUt/eXA+fW9+7M/yZzPVs+o/Gx/xW/TL+5X2c3hpnsHfKi4GtEaN+I+XB
M60h88fm/TZ2bQzzvbzfnu0/Uz54P89sjd8oP5QpA/L8j87zv1Y1nun9V0Yp
q9Q5H6R8MXarvng/708l/W1joeof7453SNmhfnKsOuazlLnK3okpl42/eRbP
ynjRkLynk1M23Jay23vs3VYPqSvVO9+l3FA2q1PVo8pgZXGnjM8Yj3LuMzP+
0KmI+MvQ9OedS138Tc6pTlOPqSevbcad9m4PTPk8A6zIb3+CX6qMtSpbJuWa
H0o5ps78KekHcm0/5tzqyqvzGb7bLSmjfEftFW334Wl/aI9+DH0TeCXtoTfr
EZM2Nm386E99+Yz/zgYDoS8A7aF/A+c3oq0BPUsfqxFttTLic5X2MYfxJ+Ol
cxph0xrPNL7s3HMyftpXG86zUI142QxtIPr6glbo/mA8fROqkc+YAn8ifSc5
h/pUGdOItt/hz4b/2LNTjXyMNrO2s2syXjhdmdOIZ7SUEU+dbOwh48Vfgo2h
NwGT+f138NtAb6uNCf9tGbanbdPh34Xv1AgfQF/gM/gdGhHz+Er7Vf3TiDGf
wX8Dv1Xar9Pgv9DWgF4X/Ki9WobtuiH4qIh4tmszxmKs5Wvwb+hNwc9FxKen
NOIdjAcb/9WXmJLx6rfLmEufQ9/jqzLezTmmwP9axl73A1XoX5SpjdijdtDT
1CGNaJs759NXm1OP9X0IX6Ovrn0O/wF8tRFtE/WFPBONaJuQ+9HSiLbxuX/6
ei25P76/c/8BPi4iBmEs4rJ65Ae0YbVll894rzETYyfGQC6FHwoG6BulP6HP
r++vzX1FEfkG59LmN5/wURlrb4Avisi/absbEzE2ok+vb28M6kb4S+C7IXt3
zHygPqy+w9h6xAuNH0qPq4e/ORb+3Xr4pG+rW9RpPKsPqEBPLYN2j+cqw1/9
67f1yHe5f1s04gy5X2/Cf1SPO/yu/kUZ7zoCjPZul/Eu+thfwn9ahq9T5Hn0
fEqX4Bv48WXQbeBb+InwC0IvBL6Df72MufXJx+T4ro044/7+k7wPW+XzPs7z
vWXu5wu5P2PqES81JmBs4KtafC/jqfaN1keCHwY/St8YPAs/vIw+254rwgfX
F59Ui+9pvOgKbK8rMz70TBm+pD7Zk7nfQxsRszJ2pQ+pL7lLvp8+ur66PqLf
x3jqpcx12f/F9y5viWf8FY/SxqiHj6ev91wZa7XtmSJiNMZqJqiji/AZ9R31
iR/J9xlcjxiy76sPry//dj3yk+63sYS5GvE9ldHKanX8iPze9ukzj8r9uqge
cz6X8umcRsRQp+X6BtVjjPtpPM290ifQN9CG15bXhjVe+leMtR4xBfN37qex
I++Ud8uYq7FXYxDG+90PY02D8v3Nt/ou+tjmN80vrFcNH1BfUHnavxFrVH4a
EzY2fC74tYiYsbHjV1LfKJ+GQT+X+kD9M7IRMRH1jfrCvmdTnquv/O3I1E/G
kI0lD0v5ZgzGWIwxBe/Pj/A7Qu+U/pryq3Mj7tyElG9dGtE2MeWFZ7tLyrvv
y9AN2+X69f+ca2fwWxExB2MPXfN+qX9c6zMpX40ne9Yuz/ix8t3Yaq+Uz8af
L6bvkoxHG5+WvjTj/foc+h4XZfxTef00v30q5YnyRXpoyhvjpY4dnPFY1+/e
90/9ZrzWvosz3q1+MlZvTOaH1B+u7dTUj+oL3+Xp1A/qT/uMwUxK/fxQI2L+
s1N/myuwTX1tjNFY47IpX/V39VXb0j8zBm4s3Bi492l82n/rZb5K+8ncuTki
c0XGe5RlylxlrzUF1hZ0zviJ/ry5MHP45vKNj5g7NCdoblD/4uha2OTa+/oz
PaBXSf9A/+X4Wtjw+hPa79Or4SPoK2if7wq9cNrr+j/7Qi+Z/oE+jr7Ohuk/
6K/tCb1Y+gvWq5h7NAdpfYr+ic82R68/Yv3JUZmftJ7FehJzz7ZZj2K++NTM
Z5mPNT/bK/OD5tvNF/fM/KH5ZOspzE0aQzGWoo+sr6wPrC9svt7fauNq65o/
NNaij6GvsUkZ8Q9jgMYC9VH1Vc3PW4+gD989v4/5S/OZ0n/FVIqwac09moPU
1l2Atg5F+MT6xtY3OJfvaL2MPrm++b/LiDfqT82qho+nr6e/NacaPpq+mvkq
bcvrwbFl+FcdamFzanuaHzJW9Hzmu8wHTMjzcWIZ+S9tyZv1OcrIjzl2Tvpz
+md+a21ObU/zd/pes9K/M1+jL2tOxNyI+Qh115CM75lfMTb+QPqvexeRz9cH
1Rc1X6hvMT39Q/MXX1ajhujkMvxZbZEO6S/qf3qWtJm1nfX/76nFmdZfNudk
7umy9PfNN6mrbs94gDkrc1dXp7+tPz6wFjaPto/xgMG1OOP6n8YPnGvPjDeY
z1K335PxBuObxsoHZ/zA+IPP6pHxAf17n7Vvxgf0592L4/8vPqCvbUzU2Kg5
L3NfAzM+oP/t3XJPzOcY4zPWZ8zT/L4xavNAHTN2bf2L9QfWOFhP82H6o8a8
LmlGPlLZrQ2kLWQ83loGdYi1GdZUWFthDtt4vWfCs2HMynyz+f4W6NZq1JNZ
D1StRgzXWK71PD7bmgzrbawfsfbIGiTruazHsc8z4FmwPs25nMN6Iutv2lXj
GdYTmG/VN1OHqcv0ifSNrIExH2s9xdzV+I31OtYbTeJdJ7dGfZs+p76nbdYf
Wd81Bfrn1qj/sh7OsbZZ72W91LTWiDkZe7JezLFTW6OeyxyuudxBqf/MX1ir
oY+or+gd9C4ak7Uew3owf+uc1l9ZD2ase8tq1KtZf2XswXewHsSYl/EB26zH
sv7M+hHrSaxvMl+g7aqNrK2sD6EvoU9nPsD6kBWq4XNbT2D+wNyRPpj5ButJ
9C0cY/2I+eh+ad/qu5nPVtdrU2tbW09mvYoy1Ho06wmsFbN+xXoMfTR9NW1+
86XWa9jnb6w/sz7LtXsmrcey3sRaG2turM+zPsVaRdusP1EmKZuMCVpvYn2d
tTPugfV31kdZW+eZsh7JehXrFZ3D+hbrw6z/8TfW4yljjR0ao1H2KlOULf7G
+hZj3sa+rfezfkQfVV9Vn9v8vfUl9lkTaH2Y9YWu3WdYf2b9mH2uyXot6xH9
tsbojdX/D/Nn2eQ=
             "]], Polygon3DBox[CompressedData["
1:eJwtj81KAmEYhV8CXc6M1hgKLrqDmNHQZgz0EpKgtUTpxkno5xbaFJX2J1EG
ucldlzNSi/6gnbUXfT6+b/Fwzpz35Z3zrTSizfaCiGQgATuOyL8l8gSHSZGy
LXKDv4Y38MnO0D7cWXpWIHtHc+we40O0yZ0WpPEpKOFXmU3Ze4AD/Cs6gT9Y
tvX/HvFfELJ/jpbJBugHfMIJzCjaRWMYwwa7P2gPAvazts4qju50RJZOMeM7
wrtki7CkupFfmbftM8uQXeLX8c+my7fpp+4E6C539sDHe1DHt83dGbsVfB5f
Ja85umNs+qm7F+i2o/93ix+CS48R+gK/0GF2j65xpwhbprvqp97h4U8t3V29
YQ5tRjkg
             "]]},
           Annotation[#, "Charting`Private`Tag$3788#1"]& ]],
         Lighting->None]}, {}, {}, {}, {}}, {
       {Opacity[0], Line3DBox[CompressedData["
1:eJwl1Hloz3EYB/DHbGxsczPMMbbZnBsb5pxy84f7KApRlLMoiqL4j6IoiqIo
iqIoiuI/iqIcm/ua+z6HOV7f/PH6fX71/I7v8zzv7zdvwYopy+tFRAcv07Mj
kveTnaOooBd5NGeo2jpO8ZFePryEQzyiQ0rEbHZxjaz6EePYwgV+U5EasYYT
vKU4LWIRB7hH2waugx1cIaOha2ET5/hBeXrEKo7xkoKMiPnso5pWjfTANi6R
1jhiBBs4w1dKMyOWcYQa8rIi5rKH1nrtRj+GM4GZ3FCb6hzDYPrQlfbcVLtF
FdXc5g53ucd9HvCQRzzmCU+p4RnPecFLXvGaN7zlHe/5wEc+8ZkvfOUb36nl
Bz/5RR2/+cNfItkxKdQnlTQa0JB0MmhEYzLJIpsm5FBEGZVMZBZNmcZYhlBC
Prlc97+7mUPnpGfzPsxSSvhiH6dZTyWpXLS3rUyiJVX2upd55PPC3o+ykjJq
5eIsGxlJOpflZzvTyOGufO1nIUW8kb/jrGYgdfJ5ns2MJZOrcryTWeTyUM4P
spiefDDSk6ylpV4L6cswxjMjmYfaFOdoBtGbLrRLcqQ2iAoGMoD+lFNGP/pS
Sgl96J3ce/SkB90ppohuFFJAPl3pQh6d6UTH5H4nl/a0oy05tKE1rZJ+aEFz
mtGUJv8jFEmUrC6sKqwnrCSsIYw9jDqMN4w0jDBSkt/3pQJKk+cI47L/P2/+
ARY2fu8=
         "]]}, {}, {}, 
       {RGBColor[0.660575, 0.34859799999999996`, 0.3474215], Thickness[0.003],
         Line3DBox[{3763, 3674, 3774, 3685, 3773, 3686, 3776, 3689, 3775, 
         3690, 3777, 3693, 3705, 3706, 3711, 3712, 3723, 3725, 3733, 3805, 
         3734, 3736, 3749, 3815, 3752, 3818, 3756, 3822, 3760, 3826, 3745, 
         3809, 3743, 3812, 3748, 3814, 3732, 3802, 3731, 3804, 3722, 3797, 
         3721, 3798, 3710, 3789, 3709, 3790, 3704, 3786, 3692, 3691, 3688, 
         3687, 3684, 3683, 3772, 3682, 3771, 3681, 3770, 3680, 3769, 3679, 
         3768, 3678, 3767, 3677, 3766, 3676, 3765, 3675, 3764, 3673, 3763}], 
        Line3DBox[{3778, 3695, 3787, 3707, 3791, 3713, 3724, 3726, 3735, 3737,
          3750, 3816, 3753, 3819, 3757, 3823, 3761, 3827, 3746, 3810, 3744, 
         3813, 3730, 3801, 3729, 3803, 3720, 3796, 3708, 3788, 3703, 3702, 
         3785, 3701, 3784, 3700, 3783, 3699, 3782, 3698, 3781, 3697, 3780, 
         3696, 3779, 3694, 3778}], 
        Line3DBox[{3792, 3715, 3799, 3727, 3806, 3738, 3751, 3817, 3754, 3820,
          3758, 3824, 3762, 3828, 3747, 3811, 3728, 3800, 3719, 3718, 3795, 
         3717, 3794, 3716, 3793, 3714, 3792}], 
        Line3DBox[{3807, 3740, 3755, 3821, 3759, 3825, 3742, 3741, 3808, 3739,
          3807}]}, 
       {RGBColor[0.433786, 0.670834, 0.793785], Thickness[0.003], 
        Line3DBox[CompressedData["
1:eJwl0ztsjWEYwPG3pdUq5/RUW72pVq/qbpC4RERSbY2mJhLVRmLSY8JGTdoJ
CWIrCza3hR1dDJq4rJhoqUXR+++J4Z/fec/58n7nfb5zmofyJ4YLUkpv1Vye
0mwmpb1cm01pD0u5m2u4iyU8zg72sZPn2cM8e3mVgxzhEEeZ501e5A1e4l2O
xOca0yPrO7yn+3qm53qjCX3UJ03pq2un+UPzmrFe4C8uckll8VrrtKT1WlZG
KZdSluXaGOezronzsTbOzbqYA+tZxobYi5tiLzbGXtzMLJtiP1awgDkWcgNX
sZKrWcUiVrOYJfwX30FzcW/Nx73jTPGZs0zzb5w3ruFPfudnfuMXfuA7vuck
X8fs+Crmx6d8wSd8yXE+5m0+4C0+5DWO8wov64KuWw/znE5rQMfUrXa1qdc1
rexhC4tVpJ1xbu6IOXB7zIXbYk7siufBrfGc/P464znxKBu8f4S1PMwK8zoU
z8z6LPfzDBu9P8h6nmINT7KK/dznumrlrA9aV3p9IPbjonstqCPmzvaYMdti
9myN2bOFf7iFvzP//y8rYzFiTQ==
         "]], Line3DBox[CompressedData["
1:eJwl0jtIllEAx+FjWovap2QUiZlt2uglI0IsFVJbgggCI1SEULyBg0tDBUEN
DTlYQx+iOKpL2p4KtRTokqY55B00r7npc2j48XA4/7O8vAWNHffbU0IISRVn
hZCRCOEer7GehaxjEbt5l12s5Us28QWb+ZqdfMdefuBzDvAN+/VegxrSJ43r
q77pp2Zs5zjLef7Slv44b3OZf7nCHe7qWDvOQbtK0Z5OaV+pOlCaDnVa/3RG
R3Hj/Wp8w7W45XrcciNuuckVLnCZi1zlb65xibP8zhn+4CSn+IXTHOMER/mZ
SY7wI0fZx2G+YpLP4jdjD9+yja16rAZV6Y7a3d3mVRWoxvkKq5kfd7wct8xj
JXNZwYu8xUt8yptsYTmb4j47hCfxng28wEfM4UOW2j1gMc/rnG44Z7OcWbzO
BMt4lqXMZAnTE///uxOn/1w5
         "]], Line3DBox[CompressedData["
1:eJwl0UkrBkAcwOHxCZBSysXdnlKynsmekrfUW2SXKKWcxMVyQCnihIPiZsvF
drEvZd+XD+J5c/j19J+ZpqZJi/bW9sSFEAZVmRBCRnwIAyxnPys4xhaOspXj
7OMsh7jAEU5oUmvmea5oVdvas7bDXZ3pxHzOU17wUm+6M7/znh984Ccf+cUn
fvOZP3zhL195HbubVzznDS94G7ufBzzkPo94yGNucJPr3OIi1znDZU7H3sIx
LnGYcxzgFDvYroiaVKZSddsrYReL2ckidrCQbSxgC/MZZWpiCM1MYYTJbGQS
G5jnXD1zWccc1jKbNcxiNTNZxfT4/3/9A4+QScY=
         "]], 
        Line3DBox[{4213, 3918, 4231, 3943, 4236, 3954, 4245, 3963, 4252, 3972,
          3982, 3983, 4267, 3995, 4007, 4273, 4008, 4009, 4026, 4284, 4027, 
         4285, 4028, 4286, 4029, 4287, 4030, 4288, 4031, 4289, 4011, 4274, 
         4010, 4275, 4012, 4276, 3996, 4268, 3985, 4258, 3984, 4259, 3973, 
         4253, 3964, 4246, 3955, 4237, 3944, 4232, 3930, 3929, 4224, 3928, 
         4223, 3927, 4222, 3926, 4221, 3925, 4220, 3924, 4219, 3923, 4218, 
         3922, 4217, 3921, 4216, 3920, 4215, 3919, 4214, 3917, 4213}]}}},
     VertexNormals->CompressedData["
1:eJztnHdUFsfXx1EUO0JUFIkKRiNiw/oTsGBBrKAEBQSNaIQodgTsGiwo1hg7
xogiiSX2GI0tipIYW6wYsUCMJWrsFdv7eufhHO8eJzvz7OzzPJrxH8/5nO/5
zp27c+/O7uyDS8+BAb3zWllZlbe3srL+//9H+M4o+bn3jd39XeJC8qdnNbUy
/KPxkZxczWcAJ9caZ66+n0Yuyp83n5JLbkpuqnrROu4oTh9j4xGVH1Z/T6/G
JV7z1dsWhb7JPYzkqxS8IYXTfPTW88bJy43Nm+SSWzJnXf+eFG6q/qBXH6D5
0PonjavlTal/+f0d6Ns3m2cEi+A3LMTnhYni4fUXFY/kkpuCG1tH5qpfVr2a
v6h61xrn830J0LdvfeOC+vYzI/k/Ci7aX684aTyHU2/suJaWH8klf5Ozrtvn
nPocznEtrR6NnS9rn7T5fC70befpUSGm5PnNpFfjFUycB8klfxc4b13Q9HrX
l6g4tfYfUXzjWmfgG9yrdn2TbzLwjRRO0/P6aOVq8Sv5ZkHzoo2by9drjFNy
yS2B09azqP5Aqwu961R0v6LFzzovWpyx15bCvrrzr0808TgD76LRR81fq4+o
cYdx5sFc8UsuuTnqLlCnvkGLRy1OvfqS3nzf6P2lXvN98aODzMH366zXytME
6fdz6iWX3BL4u1Jfufo0M/UxrX2A5vNhaCHYV3/t4I/6tpMKX6zgNB9R/mp6
Xh9a/Lx61vkamwfJJbcELqreeeuaVU+rX2PrVGvf4PWn6edP/Bz6dtSMkui7
jnmcnOYjyp93XL39eflcnf0ll1zPddtXp3rP1fcz03xZ5yWqP/DmM3/dROjb
nfeODnkbD6Rwmp7XR6u/jYF3oXBeH955SS75+8zV6kJUf9Baj5amzycoD2t6
Nwf+Ud97iK9W4RU5Oav/GiP9Tc3V4hSVN8klNyen9QdevsrM9WKuemQdl5a3
04534dxw/ZjYrlr4KUF6Xk7zzzDwDRYyL1F5llxyU3JRdWRp9ZLxjsS5b1Rj
6Nv1P8sJ4eH1GHmaip7Vn+aj5q81zlxeV6O/qHlJLrkpudp6NnX98tapqP5g
rn4YOJ78biWtB/7dSmcD30fhSj3Nx1i+Vyd/UfHTfMydN8klF8nf13WuFqey
/xg7L60+zXY/g331njq9u2rhzc3kQ9Or+fxs4nFF5UdyyU3J1dbzXgvpA7S6
bsYZp6XVb2zDJdC3K3l1C+HhH3FyvfzjBMepldPiiTNTPJJLridnrbsYQT7m
7g+sPrR6V4tHyTMd+3/wmh+8cDOMh//GqVfysybS88ZJ0yv5OcF5k1zy/wLn
rWtR9atXHxPto+RJYwvAvtrZ5l6ontxFEBflr/RZJHheovSSS/4+cVPXC62u
F5uoL2md19LwVvC7laI27YO18GQDL8aoX0bRL+PUJ6vEo3Vcmk/uvIpwxqPU
q8UjueTm5LR1q9YfWNe5uepXrR5ZxxXVP2n8aeM8wP277ngr7yiIK/2fcPro
rRfNO5lpXMklNyfPMXP90voYbz3S+hVvn6SNS/NR8vsObvBeuug1R3Ru+NDA
izHyByp6W4peyWl63nFFc9b88Prz5llyyU3JRa1bvevUVPXI2pdoffW+kXrZ
n2V/llxy2Z9lf35TL/uz5JJbLpf9GXPZn2V/llxyS+GyP2Nu6v4cmWIL76Wf
zEkNfht/qhOPUOHKeNT0vD5aubHzklzy94Hz1ntvI+tabz2rj7H9jdeHppf9
WfZnySWX/dmy+nN+T2fgba0TEc+nwtsxcpq/NUVvLVivlYvKgxrnHVdyyU3J
eeudtU5pPqLqlLdv8OaHd760fkjjy47WBr54cH8u/jUnV/ospfDkd4TT5kub
Fy0PljYvySXXss5561pvvbHzZeXGxpPE6H8uJxB4U796iGeqcG9GvZo/qw9N
f87IeLT6GOvPmh/JJbcEbmw96lV3xs5LVL/SOi5v/PL9s3Fcvn+W/L/M5fvn
f+ei3j+Pn+JD/l6H1/RQLTxekD6XV+T0Z9WL4saOq9SLyr/kkltCXYvyFzWu
qLpW43rlR+6fjeNy/yz5f5nL/fO/c1H7Z9mfjeOyP0v+X+ayP/87F9Wfq+0+
Z/+ad4jI6PYmd1Ph7RWc5lPdwP00clo8vPHzxknTi+JqeZZccnNyUeu8uiAf
UX1JdL/SK29pp9Ph7/bXLhEapievI4gr/ffqzI2dF82fVS+55P9lLqpOjfXR
qy/x5mFDZl6H19ztqGPQm3yTgVdTcF69mg+rPpdXV/CNFL0aZ42fpqflQdS4
kktuCVxt/bP2B73rVC1+Vm5sH2PND6+PzdNOwPO0WtjlTZ6fwnP1eTn1ovxZ
xzWWK/1FzZfmo6aXXHJL4Lzrn7WORNeX1roW1a9E1bvfni3wXvpQ9NwgLdzf
wA9TOE3Pyo2NR5S/cl688XQU5CO55Kbkauv2oMZ6tDS9qL4hyqfT2vrAi7tG
BovgthbuE2DkuKyc5h8geF6SS25KzrtueevOXONqrXdaPKL6gM+Zy/BeutUm
1zAW7mvgvgreisJ9VPStOTmvv5L7CvJXG1eZN7V4JJfcErlaXdD6hqh4lHXK
60OLk9Zn1MZljYc3PzT99ZAo+LvQ87PWhbzJbxj4AgvnvPHf5PSn6Wnj8nJL
y6fkkmupF2PrV9S4yvpS89GrHkX1hxUttwPfUagm4ikqfDsjF+W/nHNcc3Ot
eZNc8neBK9f5Ck4f0XX9k8Z65I2fpqf1PV6947Th8LvvOtsbot99l6HwXH1t
CqfptXK1eERx5bzKqMxXycsaeF2N85JcckvgoupIVJ/Ruy+VFRSnqD7mtt4b
+A2nubrym4y8qs7xiPanzYtVT4tHcsktgZuq7njriOZ/XeO8RMUpyifnRVM4
N4yO7ILODZ8b+FBOrvQx1p9V/0xFz8r19snlQzT6Sy65KfkLQfWrVhd6xa+3
v6hxaX1yQpFsODf8eqx7mBY+0cCXUPRKPp6T8/qr6WnzYvVXm5fSn3dekktu
CZy2bo2tI94+w1pfouclKg9a8+Pl+VHp17xRB5/OLNzDwL0Y9aI4bVxPit5T
Rc/KaeOqxaOXv+SSm5LT1q2xdWrq+uUdV1Rf4uU0/xGtr8K54YcJV4ItiTsx
6kdy+tP0vD7m8pdccsm116Nan+HlosZV6m8kX4R9dZmDdcLeRX6Tk1ta/JJL
/i7w0jr5iK5f1jj17g+i5hXRNxr6dlz6shAW/rmRfJggrvSPFBwnzT9WJ73k
klsyV1vPWutUrX5Z/UXXo6i+xJo3Wr9tfCEFePsBAVy8HSfX219yySW3XN7I
yP5gKfHz8iaC+uSFR/nh79q1SCsZxMNbcupZfbJU/JX8Imc8F1W41nnRfGjj
Gps3ySU3BVdbt7z1olddG1uPevUxUf4zvmwBffvv+DshWvhMA7+u0WcGxWeW
ir+S88Yzk5OL8qHNS3LJLYGLrmutdUTTq8XP2694udb+RtPf9x0MvE2TVC7e
mpHfU9Er/XP1vow+av5a46TFw+tv7LiSS25Orrae9e4PvHrWviGqfmn8ASen
5XOvx1r43UqY//Igc/BuGvVpRnKlP03POy/ecc2df8kl/zeutm5Z64XXh7ce
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
idHFR9S8/g9zqDEf
      "]], {}}},
  Background->None,
  Boxed->False,
  ImageSize->400,
  Lighting->"Neutral",
  Method->{
   "ShrinkWrap" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  ViewPoint->Dynamic[$CellContext`vp],
  ViewVertical->Dynamic[$CellContext`vv]]], "Output",
 CellChangeTimes->{3.915370464728264*^9, 3.915371402123595*^9, 
  3.91537150552876*^9},
 CellLabel->"Out[36]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9fYuXlcWV77HPo5vmIQ9FQJBGEUFUQEB8Bo3vJ6gxiogNIiDPBhSNb6OJ
k4wmJDGaMZnYk/hCzUzHZGVl5q6V2/dOZo1JnORM7jzv3FnXdf+C/hP6nqq9
91e7qvbe33camF6rW/zOd6r2/u1HVe29q+r2bY89smP/tsd2b982cOPhbQcf
2b390YEbhg53HtVPqdV6Ztdqp3x7oNbo/Hu8VuN//tr9qdVXHvzwd+v3w2+t
1/+tTz84MlqjH//yXfDvEfiO+9y9OXjgJ7+ttUaHPup8Z6zzdxx/a73+b6Pd
+TuKv+7dHq352+DfH/m/Td68+6prpjbHN9lKm3Tvufd9MzdDM+9DM8TZ8NBP
flc0M8U3U+fN1HoFDvrCe64b1xaQeiP08XZMKvUxFrj37bln7rNaS2C91/9t
cAm4d3sEchqhSfdKIOd6aOpHQZju83Ygo8nJcF34787x77fSromFutbdtdDd
W4FyEpJ7twk9ErgkH//1RQKFajfXQDc/gG44yO7dRswYV4PaeUFD3XOpG/+e
72Y9dPNmIK34TlOQ/4V62+7fGw9+8Nug0ldB228EFjhSjWAgJBf3yiqhh55A
vXsWqL8Seviu8B1sniPkPr8kfnWMNT8y9CEwWTBwOTT/HbX5epvL7YqgUa4t
0twxBIY3+S0Vx8ZYAsjngpmR9MfJbHmTR4MIqXcOXEEl6G/TUdRGl1BoqG/v
UmjvG7G2jmnt3RDoo36JY2hvHbT3SsX2bg7ttRmCgT4QYe3rAcKiPUkVbw38
EnaOzqBEa6G9P7FVu1C8O8raWwPtvazLI2rvTjAP9/+kMY4f3tRXdKWNbOLu
MlGshvZe8n97JUUtxPDFMjFcDG19WRBDjyCG+8pgA8OvvQC0kXqmtPn3NwNk
Hib83MPHmnmuIlkPAFmOLSLLfR7IWgntPauTVcA/aEgSm3laJytyP1vL0F8B
7T0FZHGJZ2RtN8jCZp70f1spd0TSjjJqLoJmngjUkJ5m1OwyqMFmHgdqJKYc
hbvLRAaDVO2IzdReQ4mwhUd1fgpd3AfNOBdKzTjXzJs5bPNzoAzdC6CZQ3Iz
xM9Bgx9s4WCOCOflkMEKtjAEtHIrLjzMo2V8LIc29gc+UlRdOyC2xigTmaeI
tbDPRuJxQ8Wwhb16C2HMLSb5MHGFvzRH5NPmaF65xEARe9+T987lcEUAMlsD
zIA1AE1r0jnmojIZnA8UMBvKRorLjO7nxbMqGi0WGjLDHh8xNAdmCNFc2vWW
LCIAa/hLPPMlW0Rorzz9m28YCRK6yyB0bU6o+6wVz8YjdZgRZJ0uMxyhTcH5
zzM0CIncmRNZDGswaYgnWk2DQuyOy9u1JS0Z5pZTtiOnrBjnLw49lawEgi5n
Sx9pFD8jqLM8JCwD4h42iFsVw8YXEekaBVZY9hzlDMMkkJrtBjUrZObZsqMY
UcGpqEuaYr19ejlFD+U4Fk1cFHeTLrI4PkB8thCipioQsi0QMnTgw5gQaQ2a
4OL1enWwPD7OUDunlVOx1RDQBQIVbAXHnc46o5lZQIU4ViEVg+VUlC76YEhp
8DbcZ9i7aM/Y+4NG78tjk1GXdJ+L26Alp29jRjkJWwwSzg9iMEm4Rsa5Qu8P
GL0vU5Ug9k+fhzbEhdn0chI2l5PAfZG4zLw+kJDNDE4tJ+F+g4SlthoUJNwk
y6BC75tKe+/ln3Fn7Bm8xWB+Wnn31tqVRdvMFd1tRhtTy0m4F74ujnDKcBSJ
fwN0kU58lJ6vQom+e8896z/ctMn9dl5yf+vThzdurNHP/4P/sFhBpt5LbHyK
0WmjweAUmUqY6DQcRUTl4AebNjVHj913X0f1jm3aNI6/nfHB/a23O3+HO586
xoj4e0qJt1f9d8vIKjRfHJB1hDiCOnN6T6Ij2JHueHA8/V+g7wsGfedWVL4v
yMQoNOLcw9HoaHE0Odr6A4bukUe5IWDdE94jVmr/CbxYASrgRQxKFVhbQanJ
MjMXxEoyjMw0Yszdr/uoKSh5I4jM8dNO9Kng8T/g9btKeWylvopktUlWJYWz
5YGuEUHPHV1ez2fICNTDqxvf2wRd/ztnIXPUi0FCaSQ6ktD9Mq2T5RZp/OyQ
RmTVgK4Gmaoj2X0+OzacMaZpY5yFfwMWIKoqu9tzQAqpptGI/YChZP3ARzpp
PC/wUahIj2zVZ2LnjA/3IvGA5G8sJ19SIvf5gzKJCuXonl3XbcGAC1hhhd/k
ylbA/q9A8wYDt7OD6qiRQSV8qhC+WFAdpg+FVZ6NVHX+nRH+L0D4HYbFwtez
QBHpClunZKPWJJlwEF8vR5yIKoamcw2i/xmIvr17oklDtsuE9Rm8LIoVnKPt
CPREu5/zDML/iROeifnsoNVSbPJhi+bM3SxCdWNkECmFYsDKocHfcXaKVFrT
tUX5ZwX0O2XuFDoHkOlEFwjSC2M0yZV4NP8IdN5aKjSZzl0yQQqdCwOdY4m+
OuJWIBEdkuljx46H+R+BTjYDz9R1IKhrulB3fD1ikpoOlguwMaapXAsxBOUo
J7Tda0jlzdWolIzKykr0yso7P5A6Ikh/dZB+m3Hhba3N6c20rYTUvTI5rcB8
5r/P1El1zzAu6pCkj/zsFqi8ybClhTmp3OylQDyU0DR5IH4UhU9B+mJV4X7O
stjN1OrM3CS5ql9iCOUP0N+NhiYsNBQMYjRFNZKvmcFCGL74qPX7v1lQckFX
bM5DmbyXmwglAPhnJOja74FHK+lv8XhpwCarGTot8EXydO/NM/lKVX+uwdcV
su1HLGX+xOIGlCEL0mLhFIUBvQhBkE2etyiEjDkNPpkT64LmmEikj+fIUvSa
eiWKQXLY/wBwXG8Y7VlBihkma3JMnEQhRVLnwkVDrherVPeDs700w8KKv4qg
2uyu4KAUAWO5UOrPyYqBSFxn2PNZOUoFjauDPRcJBaU8zLd1WmCdI5dEM/2r
SgS9aVA6O/A/dOz++yP+16OP+DC4bzfPQP6vNSzA4v/imH9v40pVFjhdsegr
iqNivPr5Ax8VRu/+3UT6Ex83W7YAz/LVyJTkxz/lfGcehik/B9nTuDIoP9de
IS/gvj6QA0uk15TsBHKaOqnTDU4/Lys3Mvn5UjMvYKXnKwRhSfkXWKFF0zpC
wHU30+QwfXyaweG1svoih9cElLNpzYLA/SjKsUK+Kw6sLw36kJnHDJmZhmGn
swxGrzOUFl3o1YHbjJoFBhJ6YWeW3VtudDHdYjgzUItXGo4TtY3YzGxzgUGa
nrCLR9kVBkqnmuylVjnTYO9GWWeRvfWGgswv57E0HXixDJ/NXvp4BhIpTSJu
Mj4DV177nMGHxWPVpOMao41pMkd1A/bpwfayyMYt2BzTVSfYiNEMbItHltWU
Cj4LHtcZBE+1eMxM0WLvVtkUkb2rUMulEeTMch61xGUx5l8mG5fNXvr2qQZ7
t8mmiOxdGVhQVsUyeyw1LBWgFsPHFYYIJxuf9Rh0TTO4vd2wzN9wljMM58t6
DIz2WcUwK98dGamvf+9nP3MRxBHYQeN+1skdKfkORXPRaaWxhw2yTSKLV5Qr
rZXtFZxPK0q4dX42vj0yMvbuz37WM+4ZH+n8LZhfJ7NiM54Cj1IWhxeb+8vL
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
QkH/\
\>", "ImageResolution" -> \
96.],ExpressionUUID->"670354a6-6929-430e-bc85-df1ed8643645"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export the plot as PNG (transparent background)", "Subsubsection",
 CellChangeTimes->{{3.914420683980445*^9, 
  3.914420694890698*^9}},ExpressionUUID->"338c4151-30dc-4fc9-a058-\
d49712d9d719"],

Cell["Use the following Export command to save the plot:", "Text",
 CellChangeTimes->{{3.914165764071076*^9, 3.914165771702026*^9}, 
   3.914185844576467*^9, {3.914245103566285*^9, 3.9142451618345127`*^9}, {
   3.9142457959897404`*^9, 3.9142458088477097`*^9}, {3.914419697713282*^9, 
   3.914419726590015*^9}, {3.914772994407564*^9, 3.914772994925446*^9}, {
   3.915366772569504*^9, 
   3.915366776091311*^9}},ExpressionUUID->"169bb6c1-81c3-4fb9-874c-\
462926e4a6c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fname", " ", "=", " ", "\"\<contours\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"fname", " ", "=", " ", 
     RowBox[{"fname", "<>", "\"\<-\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"pick", "[", 
        RowBox[{"[", "m", "]"}], "]"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", 
      RowBox[{"Length", "[", "pick", "]"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fname", " ", "=", " ", 
   RowBox[{"fname", "<>", "\"\<.png\>\""}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"fname", ",", "combined", ",", 
    RowBox[{"ImageResolution", "->", "400"}], ",", " ", 
    RowBox[{"Background", "->", "None"}], ",", " ", 
    RowBox[{"PlotRangePadding", "->", "None"}], ",", " ", 
    RowBox[{"ImagePadding", "->", "None"}]}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.914164210082346*^9, 3.914164213960557*^9}, {
   3.914165490031578*^9, 3.914165495337368*^9}, {3.9141656659041023`*^9, 
   3.914165685997884*^9}, {3.914190147565949*^9, 3.914190177542667*^9}, {
   3.914242540085004*^9, 3.914242542539768*^9}, {3.914242668765321*^9, 
   3.914242668862142*^9}, {3.9142427018397627`*^9, 3.91424272498844*^9}, {
   3.914242757367137*^9, 3.914242817782887*^9}, {3.914243072241022*^9, 
   3.914243267348186*^9}, {3.914244296798274*^9, 3.9142443410150957`*^9}, {
   3.9142443880990477`*^9, 3.914244454028988*^9}, 3.914244617102988*^9, {
   3.91424476899011*^9, 3.914244769394414*^9}, {3.914245039929007*^9, 
   3.914245067387306*^9}, {3.914419499279234*^9, 3.9144195018138523`*^9}, {
   3.914419593389606*^9, 3.91441962543116*^9}, {3.915366762547799*^9, 
   3.915366762992525*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"b0b8b407-ec23-4895-8742-5e5bdf9a4baa"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1062.75, 1024.5},
WindowMargins->{{Automatic, 348}, {1.5, Automatic}},
DockedCells->{},
ShowCellTags->True,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"5417a6d3-1cb0-447c-b771-c661a424c523"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "make-contours"->{
  Cell[32747, 798, 34908, 721, 2393, "Input",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2",
   CellTags->"make-contours"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"make-contours", 198906, 3733}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 457, 8, 68, "Section",ExpressionUUID->"9f8841a8-8249-4f47-9d55-d95cc146c0e1"],
Cell[CellGroupData[{
Cell[1062, 34, 190, 3, 45, "Subsubsection",ExpressionUUID->"519384ab-5ac3-490a-ad9d-5bb2de8040a7"],
Cell[1255, 39, 1671, 26, 403, "Text",ExpressionUUID->"014379ae-42bf-4be7-bb3c-9629767445a6"]
}, Closed]],
Cell[CellGroupData[{
Cell[2963, 70, 294, 5, 37, "Subsubsection",ExpressionUUID->"94e934e5-f4d3-4966-865f-84d12904cdeb"],
Cell[3260, 77, 4410, 100, 417, "Input",ExpressionUUID->"bbc363e6-aa4c-4ecc-94c7-18f0dc84cfd9",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[7707, 182, 710, 12, 37, "Subsubsection",ExpressionUUID->"bcf1db58-0c2a-43cd-a28e-7e8276321f48"],
Cell[CellGroupData[{
Cell[8442, 198, 1369, 30, 92, "Input",ExpressionUUID->"27727f97-7dd2-4d31-a480-915518d89fa6"],
Cell[9814, 230, 890, 27, 62, "Output",ExpressionUUID->"26670438-8692-41e7-b4ae-185ab69fd621"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10753, 263, 221, 4, 45, "Subsubsection",ExpressionUUID->"75efccdb-433b-44b3-bce7-04474ffb7b28"],
Cell[10977, 269, 1013, 17, 104, "Text",ExpressionUUID->"1a733974-8874-4389-ae0e-5d50ad9526c9"],
Cell[11993, 288, 2020, 33, 71, "Input",ExpressionUUID->"7c93945d-8de1-46ed-a1a4-c61b48e539fb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14050, 326, 341, 6, 45, "Subsubsection",ExpressionUUID->"9c626022-0b9e-44c8-a361-6a98114ac4e3"],
Cell[14394, 334, 656, 15, 104, "Text",ExpressionUUID->"59599e13-d1cf-462b-bbe8-32509a143740"],
Cell[CellGroupData[{
Cell[15075, 353, 1212, 29, 113, "Input",ExpressionUUID->"0abb2362-608b-45fe-815c-a471151abbce"],
Cell[16290, 384, 2868, 58, 292, "Output",ExpressionUUID->"a7b792b4-d8b1-4681-b1c1-3a83ea897311"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19195, 447, 831, 17, 51, "Input",ExpressionUUID->"d5124485-bfe2-49eb-b48c-48b720893e62"],
Cell[20029, 466, 1984, 61, 148, "Output",ExpressionUUID->"ef6d7743-c8cf-4b6d-9ad3-3012193730ce"]
}, Open  ]],
Cell[22028, 530, 357, 7, 35, "Text",ExpressionUUID->"c8055252-4875-42f7-b31f-d9e8aeecb6c4"],
Cell[CellGroupData[{
Cell[22410, 541, 1003, 25, 51, "Input",ExpressionUUID->"0aa3a6fb-5d26-479b-aa05-222f6112b3f9"],
Cell[23416, 568, 2067, 64, 165, "Output",ExpressionUUID->"7afd7a75-0772-46bc-a75f-ba9b47f93b9e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25532, 638, 184, 3, 45, "Subsubsection",ExpressionUUID->"e635bf7a-668d-49ba-91ee-1e6894635051"],
Cell[25719, 643, 2885, 61, 426, "Text",ExpressionUUID->"4e4e8640-33d1-4448-8d54-e01fb24bb6cd"],
Cell[28607, 706, 3658, 76, 195, "Input",ExpressionUUID->"b27ef285-598a-4623-a18a-d795fbaa85fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32302, 787, 442, 9, 45, "Subsubsection",ExpressionUUID->"b226dcc2-666f-4203-ac2a-2c8e7321c55a"],
Cell[32747, 798, 34908, 721, 2393, "Input",ExpressionUUID->"3253bf76-164a-490e-a0d4-bcaab2ab13d2",
 CellTags->"make-contours"]
}, Closed]],
Cell[CellGroupData[{
Cell[67692, 1524, 232, 4, 37, "Subsubsection",ExpressionUUID->"fd91ba99-4141-41a5-8a4c-9a02c7c502ae"],
Cell[67927, 1530, 392, 8, 41, "Output",ExpressionUUID->"db76cb3e-4de3-4ab2-873e-ee787b0c7771"],
Cell[CellGroupData[{
Cell[68344, 1542, 1129, 24, 71, "Input",ExpressionUUID->"9ac83f03-5ba4-4c63-9948-ab4f1efd4b57"],
Cell[69476, 1568, 126447, 2090, 317, 107403, 1776, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"670354a6-6929-430e-bc85-df1ed8643645"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195972, 3664, 198, 3, 45, "Subsubsection",ExpressionUUID->"338c4151-30dc-4fc9-a058-d49712d9d719"],
Cell[196173, 3669, 467, 7, 35, "Text",ExpressionUUID->"169bb6c1-81c3-4fb9-874c-462926e4a6c8"],
Cell[196643, 3678, 1841, 38, 92, "Input",ExpressionUUID->"b0b8b407-ec23-4895-8742-5e5bdf9a4baa"]
}, Open  ]]
}, Open  ]]
}
]
*)

